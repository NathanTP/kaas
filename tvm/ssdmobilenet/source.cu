
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void fused_strided_slice_strided_slice_concatenate_13_kernel0(float* __restrict__ T_concat, float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ placeholder2) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 36792) {
    T_concat[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((2 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 4) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) - 2))] : ((1 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder1[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 75))] : placeholder2[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 76))]));
  }
}

extern "C" __global__ void fused_strided_slice_3_kernel0(float* __restrict__ T_strided_slice, float* __restrict__ placeholder) {
  T_strided_slice[(((int)threadIdx.x))] = placeholder[(((((int)threadIdx.x) * 6) + 1))];
}

extern "C" __global__ void fused_strided_slice_2_kernel0(float* __restrict__ T_strided_slice, float* __restrict__ placeholder) {
  for (int ax0_ax1_fused_ax2_fused_outer = 0; ax0_ax1_fused_ax2_fused_outer < 2; ++ax0_ax1_fused_ax2_fused_outer) {
    if ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) < 490560) {
      T_strided_slice[((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)))] = placeholder[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 80) * 81) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 80)) + 1))];
    }
  }
}

extern "C" __global__ void fused_vision_non_max_suppression_kernel6(float* __restrict__ placeholder, int* __restrict__ placeholder1, int* __restrict__ placeholder2, float* __restrict__ fetch_score, float* __restrict__ argsort_gpu_v0, float* __restrict__ argsort_gpu_v2, int* __restrict__ nms_v5) {
  int num_valid_boxes_local[1];
  int box_idx[1];
  num_valid_boxes_local[(0)] = 0;
  if ((0.000000e+00f < placeholder[(0)]) && (0 < placeholder1[(0)])) {
    box_idx[(0)] = 0;
    while (((box_idx[(0)] < ((400 < placeholder1[(0)]) ? 400 : placeholder1[(0)])) && (num_valid_boxes_local[(0)] < ((0 < placeholder2[(0)]) ? placeholder2[(0)] : ((400 < placeholder1[(0)]) ? 400 : placeholder1[(0)]))))) {
      if (-1.000000e+00f < fetch_score[(box_idx[(0)])]) {
        num_valid_boxes_local[(0)] = (num_valid_boxes_local[(0)] + 1);
        for (int _k = 0; _k < (((((400 < placeholder1[(0)]) ? 400 : placeholder1[(0)]) + 1022) - box_idx[(0)]) >> 10); ++_k) {
          if (((((((_k * 1024) + box_idx[(0)]) + ((int)threadIdx.x)) + 1) < ((400 < placeholder1[(0)]) ? 400 : placeholder1[(0)])) && (0.000000e+00f < fetch_score[(((((_k * 1024) + box_idx[(0)]) + ((int)threadIdx.x)) + 1))])) && (argsort_gpu_v0[(((((_k * 1024) + box_idx[(0)]) + ((int)threadIdx.x)) + 1))] == argsort_gpu_v0[(box_idx[(0)])])) {
            if (placeholder[(0)] <= ((((((max(argsort_gpu_v2[((box_idx[(0)] * 4))], argsort_gpu_v2[(((box_idx[(0)] * 4) + 2))]) - min(argsort_gpu_v2[((box_idx[(0)] * 4))], argsort_gpu_v2[(((box_idx[(0)] * 4) + 2))])) * (max(argsort_gpu_v2[(((box_idx[(0)] * 4) + 1))], argsort_gpu_v2[(((box_idx[(0)] * 4) + 3))]) - min(argsort_gpu_v2[(((box_idx[(0)] * 4) + 1))], argsort_gpu_v2[(((box_idx[(0)] * 4) + 3))]))) + ((max(argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 4))], argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 6))]) - min(argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 4))], argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 6))])) * (max(argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 5))], argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 7))]) - min(argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 5))], argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 7))])))) - (max(0.000000e+00f, (min(max(argsort_gpu_v2[(((box_idx[(0)] * 4) + 1))], argsort_gpu_v2[(((box_idx[(0)] * 4) + 3))]), max(argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 5))], argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 7))])) - max(min(argsort_gpu_v2[(((box_idx[(0)] * 4) + 1))], argsort_gpu_v2[(((box_idx[(0)] * 4) + 3))]), min(argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 5))], argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 7))])))) * max(0.000000e+00f, (min(max(argsort_gpu_v2[((box_idx[(0)] * 4))], argsort_gpu_v2[(((box_idx[(0)] * 4) + 2))]), max(argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 4))], argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 6))])) - max(min(argsort_gpu_v2[((box_idx[(0)] * 4))], argsort_gpu_v2[(((box_idx[(0)] * 4) + 2))]), min(argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 4))], argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 6))])))))) <= 0.000000e+00f) ? 0.000000e+00f : ((max(0.000000e+00f, (min(max(argsort_gpu_v2[(((box_idx[(0)] * 4) + 1))], argsort_gpu_v2[(((box_idx[(0)] * 4) + 3))]), max(argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 5))], argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 7))])) - max(min(argsort_gpu_v2[(((box_idx[(0)] * 4) + 1))], argsort_gpu_v2[(((box_idx[(0)] * 4) + 3))]), min(argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 5))], argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 7))])))) * max(0.000000e+00f, (min(max(argsort_gpu_v2[((box_idx[(0)] * 4))], argsort_gpu_v2[(((box_idx[(0)] * 4) + 2))]), max(argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 4))], argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 6))])) - max(min(argsort_gpu_v2[((box_idx[(0)] * 4))], argsort_gpu_v2[(((box_idx[(0)] * 4) + 2))]), min(argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 4))], argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 6))]))))) / ((((max(argsort_gpu_v2[((box_idx[(0)] * 4))], argsort_gpu_v2[(((box_idx[(0)] * 4) + 2))]) - min(argsort_gpu_v2[((box_idx[(0)] * 4))], argsort_gpu_v2[(((box_idx[(0)] * 4) + 2))])) * (max(argsort_gpu_v2[(((box_idx[(0)] * 4) + 1))], argsort_gpu_v2[(((box_idx[(0)] * 4) + 3))]) - min(argsort_gpu_v2[(((box_idx[(0)] * 4) + 1))], argsort_gpu_v2[(((box_idx[(0)] * 4) + 3))]))) + ((max(argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 4))], argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 6))]) - min(argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 4))], argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 6))])) * (max(argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 5))], argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 7))]) - min(argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 5))], argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 7))])))) - (max(0.000000e+00f, (min(max(argsort_gpu_v2[(((box_idx[(0)] * 4) + 1))], argsort_gpu_v2[(((box_idx[(0)] * 4) + 3))]), max(argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 5))], argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 7))])) - max(min(argsort_gpu_v2[(((box_idx[(0)] * 4) + 1))], argsort_gpu_v2[(((box_idx[(0)] * 4) + 3))]), min(argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 5))], argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 7))])))) * max(0.000000e+00f, (min(max(argsort_gpu_v2[((box_idx[(0)] * 4))], argsort_gpu_v2[(((box_idx[(0)] * 4) + 2))]), max(argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 4))], argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 6))])) - max(min(argsort_gpu_v2[((box_idx[(0)] * 4))], argsort_gpu_v2[(((box_idx[(0)] * 4) + 2))]), min(argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 4))], argsort_gpu_v2[(((((_k * 4096) + (box_idx[(0)] * 4)) + (((int)threadIdx.x) * 4)) + 6))]))))))))) {
              fetch_score[(((((_k * 1024) + box_idx[(0)]) + ((int)threadIdx.x)) + 1))] = -1.000000e+00f;
              argsort_gpu_v0[(((((_k * 1024) + box_idx[(0)]) + ((int)threadIdx.x)) + 1))] = -1.000000e+00f;
            }
          }
          __syncthreads();
        }
      }
      box_idx[(0)] = (box_idx[(0)] + 1);
    }
    if (((int)threadIdx.x) == 0) {
      nms_v5[(0)] = num_valid_boxes_local[(0)];
    }
  } else {
    nms_v5[(0)] = 0;
  }
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_26_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float compute[16];
  __shared__ float pad_temp_shared[64];
  __shared__ float placeholder_shared[256];
  compute[(0)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 128; ++rc_outer) {
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 4) + ((int)threadIdx.x)))] = placeholder[((((rc_outer * 64) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)))];
    placeholder_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 4)))] = placeholder1[(((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 512)) + (rc_outer * 4)))];
    placeholder_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 4)) + 1))] = placeholder1[((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 512)) + (rc_outer * 4)) + 1))];
    placeholder_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 4)) + 2))] = placeholder1[((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 512)) + (rc_outer * 4)) + 2))];
    placeholder_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 4)) + 3))] = placeholder1[((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 512)) + (rc_outer * 4)) + 3))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) * 4))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 64))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 128))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 192))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 4))] * placeholder_shared[((((int)threadIdx.z) * 4))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 4))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 64))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 4))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 128))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 4))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 192))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[((((int)threadIdx.z) * 4))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 64))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 128))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 192))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 12))] * placeholder_shared[((((int)threadIdx.z) * 4))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 64))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 128))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 192))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 1))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 65))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 129))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 193))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 1))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 65))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 129))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 193))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 1))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 65))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 129))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 193))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 1))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 65))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 129))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 193))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 32))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 2))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 32))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 66))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 32))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 130))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 32))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 194))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 2))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 66))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 130))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 194))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 40))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 2))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 40))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 66))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 40))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 130))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 40))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 194))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 44))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 2))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 44))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 66))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 44))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 130))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 44))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 194))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 48))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 3))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 48))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 67))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 48))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 131))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 48))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 195))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 52))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 3))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 52))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 67))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 52))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 131))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 52))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 195))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 3))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 67))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 131))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 195))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 3))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 67))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 131))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 195))]));
  }
  T_relu[((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)))] = max((compute[(0)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 256))] = max((compute[(4)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 512))] = max((compute[(8)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 768))] = max((compute[(12)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 4))] = max((compute[(1)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 260))] = max((compute[(5)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 516))] = max((compute[(9)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 772))] = max((compute[(13)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 8))] = max((compute[(2)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 264))] = max((compute[(6)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 520))] = max((compute[(10)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 776))] = max((compute[(14)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 12))] = max((compute[(3)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 268))] = max((compute[(7)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 524))] = max((compute[(11)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 780))] = max((compute[(15)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_15_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[360];
  __shared__ float placeholder_shared[18];
  float PaddedInput_shared_local[32];
  float placeholder_shared_local[9];
  float DepthwiseConv2d[8];
  #pragma unroll
  for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 12; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
    if (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 360) {
      if ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 8) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.y)) < 90) {
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 2) + ((int)threadIdx.z)) < 23) {
          PaddedInput_shared[(((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))] = (((((1 <= ((((int)blockIdx.y) * 16) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 180) / 10))) && (((((int)blockIdx.y) * 16) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 180) / 10)) < 257)) && (1 <= ((((int)blockIdx.x) * 8) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 10)))) && (((((int)blockIdx.x) * 8) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 10)) < 257)) ? placeholder[((((((((((int)blockIdx.z) * 131072) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) / 180) * 65536)) + (((int)blockIdx.y) * 4096)) + (((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 180) / 10) * 256)) + (((int)blockIdx.x) * 8)) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 10)) - 257))] : 0.000000e+00f);
        }
      }
    }
  }
  if ((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 18) {
    if (((((int)threadIdx.z) * 4) + ((int)threadIdx.y)) < 5) {
      placeholder_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))] = placeholder1[(((((((int)blockIdx.z) * 18) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))];
    }
  }
  __syncthreads();
  #pragma unroll
  for (int ax2 = 0; ax2 < 4; ++ax2) {
    #pragma unroll
    for (int ax3 = 0; ax3 < 4; ++ax3) {
      PaddedInput_shared_local[(((ax2 * 4) + ax3))] = PaddedInput_shared[((((((((int)threadIdx.z) * 180) + (((int)threadIdx.y) * 20)) + (ax2 * 10)) + (((int)threadIdx.x) * 2)) + ax3))];
      PaddedInput_shared_local[((((ax2 * 4) + ax3) + 16))] = PaddedInput_shared[(((((((((int)threadIdx.z) * 180) + (((int)threadIdx.y) * 20)) + (ax2 * 10)) + (((int)threadIdx.x) * 2)) + ax3) + 80))];
    }
  }
  #pragma unroll
  for (int ax21 = 0; ax21 < 3; ++ax21) {
    #pragma unroll
    for (int ax31 = 0; ax31 < 3; ++ax31) {
      placeholder_shared_local[(((ax21 * 3) + ax31))] = placeholder_shared[((((((int)threadIdx.z) * 9) + (ax21 * 3)) + ax31))];
    }
  }
  #pragma unroll
  for (int i = 0; i < 2; ++i) {
    #pragma unroll
    for (int j = 0; j < 2; ++j) {
      DepthwiseConv2d[(((i * 2) + j))] = 0.000000e+00f;
      DepthwiseConv2d[((((i * 2) + j) + 4))] = 0.000000e+00f;
      #pragma unroll
      for (int di = 0; di < 3; ++di) {
        #pragma unroll
        for (int dj = 0; dj < 3; ++dj) {
          DepthwiseConv2d[(((i * 2) + j))] = (DepthwiseConv2d[(((i * 2) + j))] + (PaddedInput_shared_local[(((((i * 4) + (di * 4)) + j) + dj))] * placeholder_shared_local[(((di * 3) + dj))]));
          DepthwiseConv2d[((((i * 2) + j) + 4))] = (DepthwiseConv2d[((((i * 2) + j) + 4))] + (PaddedInput_shared_local[((((((i * 4) + (di * 4)) + j) + dj) + 16))] * placeholder_shared_local[(((di * 3) + dj))]));
        }
      }
    }
  }
  #pragma unroll
  for (int ax2_inner_inner_inner = 0; ax2_inner_inner_inner < 2; ++ax2_inner_inner_inner) {
    #pragma unroll
    for (int ax3_inner_inner_inner = 0; ax3_inner_inner_inner < 2; ++ax3_inner_inner_inner) {
      T_relu[(((((((((((int)blockIdx.z) * 131072) + (((int)threadIdx.z) * 65536)) + (((int)blockIdx.y) * 4096)) + (((int)threadIdx.y) * 512)) + (ax2_inner_inner_inner * 256)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner))] = max((DepthwiseConv2d[(((ax2_inner_inner_inner * 2) + ax3_inner_inner_inner))] + placeholder2[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]), 0.000000e+00f);
      T_relu[((((((((((((int)blockIdx.z) * 131072) + (((int)threadIdx.z) * 65536)) + (((int)blockIdx.y) * 4096)) + (((int)threadIdx.y) * 512)) + (ax2_inner_inner_inner * 256)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 2048))] = max((DepthwiseConv2d[((((ax2_inner_inner_inner * 2) + ax3_inner_inner_inner) + 4))] + placeholder2[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]), 0.000000e+00f);
    }
  }
}

extern "C" __global__ void fused_vision_non_max_suppression_kernel3(float* __restrict__ argsort_gpu_v0, float* __restrict__ argsort_gpu_v2, int* __restrict__ argsort_gpu_v3, int* __restrict__ argsort_gpu_v1, int i_0) {
  int64_t first[1];
  int64_t last[1];
  int64_t first1[1];
  int64_t last1[1];
  int64_t first2[1];
  int64_t last2[1];
  int64_t first3[1];
  int64_t last3[1];
  int64_t first4[1];
  int64_t last4[1];
  int64_t first5[1];
  int64_t last5[1];
  int64_t first6[1];
  int64_t last6[1];
  int64_t first7[1];
  int64_t last7[1];
  if ((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) < (int64_t)490560) {
    if (((int)((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + (int64_t)4095) >> (int64_t)12)) == 1) {
      if ((((int64_t)i_0) % (int64_t)2) == (int64_t)0) {
        first[(0)] = max((int64_t)0, ((min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560) + (((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1)))) - min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * (((int64_t)((int)blockIdx.z)) + (int64_t)1)), (int64_t)490560)));
        last[(0)] = min((((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1))), min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1), ((int64_t)490560 - (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))));
        while ((first[(0)] < last[(0)])) {
          if (argsort_gpu_v0[((((min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560) + (((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1)))) - ((first[(0)] + last[(0)]) >> (int64_t)1)) - (int64_t)1))] <= argsort_gpu_v0[(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + ((first[(0)] + last[(0)]) >> (int64_t)1)))]) {
            first[(0)] = (((first[(0)] + last[(0)]) >> (int64_t)1) + (int64_t)1);
          } else {
            last[(0)] = ((first[(0)] + last[(0)]) >> (int64_t)1);
          }
        }
        first[(0)] = ((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + first[(0)]);
        last[(0)] = ((min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560) + (((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1)))) - last[(0)]);
        for (int64_t i_1 = 0; i_1 < min((((min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1), ((int64_t)490560 - (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))) + min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * (((int64_t)((int)blockIdx.z)) + (int64_t)1)), (int64_t)490560)) - min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) - (((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1)))), ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1))); ++i_1) {
          if (((first[(0)] < ((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))) && (first[(0)] < (int64_t)490560)) && ((last[(0)] < (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * (((int64_t)((int)blockIdx.z)) + (int64_t)1))) && (last[(0)] < (int64_t)490560))) {
            if (argsort_gpu_v0[(last[(0)])] <= argsort_gpu_v0[(first[(0)])]) {
              argsort_gpu_v2[((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + (((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1)))) + i_1))] = argsort_gpu_v0[(first[(0)])];
              argsort_gpu_v3[((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + (((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1)))) + i_1))] = argsort_gpu_v1[(first[(0)])];
              first[(0)] = (first[(0)] + (int64_t)1);
            } else {
              argsort_gpu_v2[((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + (((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1)))) + i_1))] = argsort_gpu_v0[(last[(0)])];
              argsort_gpu_v3[((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + (((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1)))) + i_1))] = argsort_gpu_v1[(last[(0)])];
              last[(0)] = (last[(0)] + (int64_t)1);
            }
          } else {
            if ((first[(0)] < ((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))) && (first[(0)] < (int64_t)490560)) {
              argsort_gpu_v2[((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + (((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1)))) + i_1))] = argsort_gpu_v0[(first[(0)])];
              argsort_gpu_v3[((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + (((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1)))) + i_1))] = argsort_gpu_v1[(first[(0)])];
              first[(0)] = (first[(0)] + (int64_t)1);
            } else {
              argsort_gpu_v2[((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + (((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1)))) + i_1))] = argsort_gpu_v0[(last[(0)])];
              argsort_gpu_v3[((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + (((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1)))) + i_1))] = argsort_gpu_v1[(last[(0)])];
              last[(0)] = (last[(0)] + (int64_t)1);
            }
          }
        }
      } else {
        first1[(0)] = max((int64_t)0, ((min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560) + (((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1)))) - min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * (((int64_t)((int)blockIdx.z)) + (int64_t)1)), (int64_t)490560)));
        last1[(0)] = min((((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1))), min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1), ((int64_t)490560 - (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))));
        while ((first1[(0)] < last1[(0)])) {
          if (argsort_gpu_v2[((((min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560) + (((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1)))) - ((first1[(0)] + last1[(0)]) >> (int64_t)1)) - (int64_t)1))] <= argsort_gpu_v2[(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + ((first1[(0)] + last1[(0)]) >> (int64_t)1)))]) {
            first1[(0)] = (((first1[(0)] + last1[(0)]) >> (int64_t)1) + (int64_t)1);
          } else {
            last1[(0)] = ((first1[(0)] + last1[(0)]) >> (int64_t)1);
          }
        }
        first1[(0)] = ((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + first1[(0)]);
        last1[(0)] = ((min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560) + (((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1)))) - last1[(0)]);
        for (int64_t i_2 = 0; i_2 < min((((min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1), ((int64_t)490560 - (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))) + min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * (((int64_t)((int)blockIdx.z)) + (int64_t)1)), (int64_t)490560)) - min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) - (((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1)))), ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1))); ++i_2) {
          if (((first1[(0)] < ((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))) && (first1[(0)] < (int64_t)490560)) && ((last1[(0)] < (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * (((int64_t)((int)blockIdx.z)) + (int64_t)1))) && (last1[(0)] < (int64_t)490560))) {
            if (argsort_gpu_v2[(last1[(0)])] <= argsort_gpu_v2[(first1[(0)])]) {
              argsort_gpu_v0[((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + (((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1)))) + i_2))] = argsort_gpu_v2[(first1[(0)])];
              argsort_gpu_v1[((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + (((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1)))) + i_2))] = argsort_gpu_v3[(first1[(0)])];
              first1[(0)] = (first1[(0)] + (int64_t)1);
            } else {
              argsort_gpu_v0[((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + (((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1)))) + i_2))] = argsort_gpu_v2[(last1[(0)])];
              argsort_gpu_v1[((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + (((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1)))) + i_2))] = argsort_gpu_v3[(last1[(0)])];
              last1[(0)] = (last1[(0)] + (int64_t)1);
            }
          } else {
            if ((first1[(0)] < ((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))) && (first1[(0)] < (int64_t)490560)) {
              argsort_gpu_v0[((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + (((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1)))) + i_2))] = argsort_gpu_v2[(first1[(0)])];
              argsort_gpu_v1[((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + (((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1)))) + i_2))] = argsort_gpu_v3[(first1[(0)])];
              first1[(0)] = (first1[(0)] + (int64_t)1);
            } else {
              argsort_gpu_v0[((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + (((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1)))) + i_2))] = argsort_gpu_v2[(last1[(0)])];
              argsort_gpu_v1[((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + (((int64_t)((int)threadIdx.x)) * ((((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) >= (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) >= (int64_t)0)) || ((((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02))))))))) < (int64_t)0) && ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) % ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) <= (int64_t)0))) ? (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) : ((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) + ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1) / ((int64_t)((int)min((int64_t)1024, ((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))))))) - (int64_t)1)))) + i_2))] = argsort_gpu_v3[(last1[(0)])];
              last1[(0)] = (last1[(0)] + (int64_t)1);
            }
          }
        }
      }
    } else {
      if ((((int64_t)i_0) % (int64_t)2) == (int64_t)0) {
        first2[(0)] = max((int64_t)0, (((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) - min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * (((int64_t)((int)blockIdx.z)) + (int64_t)1)), (int64_t)490560)));
        last2[(0)] = min((((int64_t)((int)blockIdx.x)) * (int64_t)4096), min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1), ((int64_t)490560 - (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))));
        while ((first2[(0)] < last2[(0)])) {
          if (argsort_gpu_v0[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) - ((first2[(0)] + last2[(0)]) >> (int64_t)1)) - (int64_t)1))] <= argsort_gpu_v0[(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + ((first2[(0)] + last2[(0)]) >> (int64_t)1)))]) {
            first2[(0)] = (((first2[(0)] + last2[(0)]) >> (int64_t)1) + (int64_t)1);
          } else {
            last2[(0)] = ((first2[(0)] + last2[(0)]) >> (int64_t)1);
          }
        }
        if ((((int64_t)i_0) % (int64_t)2) == (int64_t)0) {
          first3[(0)] = max((int64_t)0, ((((int64_t)((int)threadIdx.x)) * (int64_t)4) - min((((min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * (((int64_t)((int)blockIdx.z)) + (int64_t)1)), (int64_t)490560) + last2[(0)]) - min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) - (((int64_t)((int)blockIdx.x)) * (int64_t)4096)), (int64_t)4096)));
          last3[(0)] = min((((int64_t)((int)threadIdx.x)) * (int64_t)4), min((min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1), ((int64_t)490560 - (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))) - first2[(0)]), (int64_t)4096));
          while ((first3[(0)] < last3[(0)])) {
            if (argsort_gpu_v0[(((((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) - last2[(0)]) - ((first3[(0)] + last3[(0)]) >> (int64_t)1)) - (int64_t)1))] <= argsort_gpu_v0[((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + first2[(0)]) + ((first3[(0)] + last3[(0)]) >> (int64_t)1)))]) {
              first3[(0)] = (((first3[(0)] + last3[(0)]) >> (int64_t)1) + (int64_t)1);
            } else {
              last3[(0)] = ((first3[(0)] + last3[(0)]) >> (int64_t)1);
            }
          }
          first3[(0)] = (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + first2[(0)]) + first3[(0)]);
          last3[(0)] = (((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) - last2[(0)]) - last3[(0)]);
          for (int64_t i_3 = 0; i_3 < min(((min((min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1), ((int64_t)490560 - (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))) - first2[(0)]), (int64_t)4096) + min((((min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * (((int64_t)((int)blockIdx.z)) + (int64_t)1)), (int64_t)490560) + last2[(0)]) - min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) - (((int64_t)((int)blockIdx.x)) * (int64_t)4096)), (int64_t)4096)) - (((int64_t)((int)threadIdx.x)) * (int64_t)4)), (int64_t)4); ++i_3) {
            if ((((first3[(0)] < ((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))) && (first3[(0)] < (int64_t)490560)) && (((first3[(0)] - (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) - first2[(0)]) < (int64_t)4096)) && ((last3[(0)] < ((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) + (int64_t)4096) - last2[(0)])) && ((last3[(0)] < (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * (((int64_t)((int)blockIdx.z)) + (int64_t)1))) && (last3[(0)] < (int64_t)490560)))) {
              if (argsort_gpu_v0[(last3[(0)])] <= argsort_gpu_v0[(first3[(0)])]) {
                argsort_gpu_v2[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_3))] = argsort_gpu_v0[(first3[(0)])];
                argsort_gpu_v3[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_3))] = argsort_gpu_v1[(first3[(0)])];
                first3[(0)] = (first3[(0)] + (int64_t)1);
              } else {
                argsort_gpu_v2[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_3))] = argsort_gpu_v0[(last3[(0)])];
                argsort_gpu_v3[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_3))] = argsort_gpu_v1[(last3[(0)])];
                last3[(0)] = (last3[(0)] + (int64_t)1);
              }
            } else {
              if (((first3[(0)] < ((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))) && (first3[(0)] < (int64_t)490560)) && (((first3[(0)] - (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) - first2[(0)]) < (int64_t)4096)) {
                argsort_gpu_v2[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_3))] = argsort_gpu_v0[(first3[(0)])];
                argsort_gpu_v3[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_3))] = argsort_gpu_v1[(first3[(0)])];
                first3[(0)] = (first3[(0)] + (int64_t)1);
              } else {
                argsort_gpu_v2[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_3))] = argsort_gpu_v0[(last3[(0)])];
                argsort_gpu_v3[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_3))] = argsort_gpu_v1[(last3[(0)])];
                last3[(0)] = (last3[(0)] + (int64_t)1);
              }
            }
          }
        } else {
          first4[(0)] = max((int64_t)0, ((((int64_t)((int)threadIdx.x)) * (int64_t)4) - min((((min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * (((int64_t)((int)blockIdx.z)) + (int64_t)1)), (int64_t)490560) + last2[(0)]) - min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) - (((int64_t)((int)blockIdx.x)) * (int64_t)4096)), (int64_t)4096)));
          last4[(0)] = min((((int64_t)((int)threadIdx.x)) * (int64_t)4), min((min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1), ((int64_t)490560 - (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))) - first2[(0)]), (int64_t)4096));
          while ((first4[(0)] < last4[(0)])) {
            if (argsort_gpu_v2[(((((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) - last2[(0)]) - ((first4[(0)] + last4[(0)]) >> (int64_t)1)) - (int64_t)1))] <= argsort_gpu_v2[((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + first2[(0)]) + ((first4[(0)] + last4[(0)]) >> (int64_t)1)))]) {
              first4[(0)] = (((first4[(0)] + last4[(0)]) >> (int64_t)1) + (int64_t)1);
            } else {
              last4[(0)] = ((first4[(0)] + last4[(0)]) >> (int64_t)1);
            }
          }
          first4[(0)] = (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + first2[(0)]) + first4[(0)]);
          last4[(0)] = (((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) - last2[(0)]) - last4[(0)]);
          for (int64_t i_4 = 0; i_4 < min(((min((min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1), ((int64_t)490560 - (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))) - first2[(0)]), (int64_t)4096) + min((((min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * (((int64_t)((int)blockIdx.z)) + (int64_t)1)), (int64_t)490560) + last2[(0)]) - min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) - (((int64_t)((int)blockIdx.x)) * (int64_t)4096)), (int64_t)4096)) - (((int64_t)((int)threadIdx.x)) * (int64_t)4)), (int64_t)4); ++i_4) {
            if ((((first4[(0)] < ((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))) && (first4[(0)] < (int64_t)490560)) && (((first4[(0)] - (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) - first2[(0)]) < (int64_t)4096)) && ((last4[(0)] < ((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) + (int64_t)4096) - last2[(0)])) && ((last4[(0)] < (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * (((int64_t)((int)blockIdx.z)) + (int64_t)1))) && (last4[(0)] < (int64_t)490560)))) {
              if (argsort_gpu_v2[(last4[(0)])] <= argsort_gpu_v2[(first4[(0)])]) {
                argsort_gpu_v0[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_4))] = argsort_gpu_v2[(first4[(0)])];
                argsort_gpu_v1[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_4))] = argsort_gpu_v3[(first4[(0)])];
                first4[(0)] = (first4[(0)] + (int64_t)1);
              } else {
                argsort_gpu_v0[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_4))] = argsort_gpu_v2[(last4[(0)])];
                argsort_gpu_v1[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_4))] = argsort_gpu_v3[(last4[(0)])];
                last4[(0)] = (last4[(0)] + (int64_t)1);
              }
            } else {
              if (((first4[(0)] < ((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))) && (first4[(0)] < (int64_t)490560)) && (((first4[(0)] - (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) - first2[(0)]) < (int64_t)4096)) {
                argsort_gpu_v0[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_4))] = argsort_gpu_v2[(first4[(0)])];
                argsort_gpu_v1[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_4))] = argsort_gpu_v3[(first4[(0)])];
                first4[(0)] = (first4[(0)] + (int64_t)1);
              } else {
                argsort_gpu_v0[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_4))] = argsort_gpu_v2[(last4[(0)])];
                argsort_gpu_v1[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_4))] = argsort_gpu_v3[(last4[(0)])];
                last4[(0)] = (last4[(0)] + (int64_t)1);
              }
            }
          }
        }
      } else {
        first5[(0)] = max((int64_t)0, (((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) - min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * (((int64_t)((int)blockIdx.z)) + (int64_t)1)), (int64_t)490560)));
        last5[(0)] = min((((int64_t)((int)blockIdx.x)) * (int64_t)4096), min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1), ((int64_t)490560 - (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))));
        while ((first5[(0)] < last5[(0)])) {
          if (argsort_gpu_v2[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) - ((first5[(0)] + last5[(0)]) >> (int64_t)1)) - (int64_t)1))] <= argsort_gpu_v2[(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + ((first5[(0)] + last5[(0)]) >> (int64_t)1)))]) {
            first5[(0)] = (((first5[(0)] + last5[(0)]) >> (int64_t)1) + (int64_t)1);
          } else {
            last5[(0)] = ((first5[(0)] + last5[(0)]) >> (int64_t)1);
          }
        }
        if ((((int64_t)i_0) % (int64_t)2) == (int64_t)0) {
          first6[(0)] = max((int64_t)0, ((((int64_t)((int)threadIdx.x)) * (int64_t)4) - min((((min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * (((int64_t)((int)blockIdx.z)) + (int64_t)1)), (int64_t)490560) + last5[(0)]) - min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) - (((int64_t)((int)blockIdx.x)) * (int64_t)4096)), (int64_t)4096)));
          last6[(0)] = min((((int64_t)((int)threadIdx.x)) * (int64_t)4), min((min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1), ((int64_t)490560 - (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))) - first5[(0)]), (int64_t)4096));
          while ((first6[(0)] < last6[(0)])) {
            if (argsort_gpu_v0[(((((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) - last5[(0)]) - ((first6[(0)] + last6[(0)]) >> (int64_t)1)) - (int64_t)1))] <= argsort_gpu_v0[((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + first5[(0)]) + ((first6[(0)] + last6[(0)]) >> (int64_t)1)))]) {
              first6[(0)] = (((first6[(0)] + last6[(0)]) >> (int64_t)1) + (int64_t)1);
            } else {
              last6[(0)] = ((first6[(0)] + last6[(0)]) >> (int64_t)1);
            }
          }
          first6[(0)] = (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + first5[(0)]) + first6[(0)]);
          last6[(0)] = (((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) - last5[(0)]) - last6[(0)]);
          for (int64_t i_5 = 0; i_5 < min(((min((min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1), ((int64_t)490560 - (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))) - first5[(0)]), (int64_t)4096) + min((((min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * (((int64_t)((int)blockIdx.z)) + (int64_t)1)), (int64_t)490560) + last5[(0)]) - min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) - (((int64_t)((int)blockIdx.x)) * (int64_t)4096)), (int64_t)4096)) - (((int64_t)((int)threadIdx.x)) * (int64_t)4)), (int64_t)4); ++i_5) {
            if ((((first6[(0)] < ((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))) && (first6[(0)] < (int64_t)490560)) && (((first6[(0)] - (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) - first5[(0)]) < (int64_t)4096)) && ((last6[(0)] < ((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) + (int64_t)4096) - last5[(0)])) && ((last6[(0)] < (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * (((int64_t)((int)blockIdx.z)) + (int64_t)1))) && (last6[(0)] < (int64_t)490560)))) {
              if (argsort_gpu_v0[(last6[(0)])] <= argsort_gpu_v0[(first6[(0)])]) {
                argsort_gpu_v2[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_5))] = argsort_gpu_v0[(first6[(0)])];
                argsort_gpu_v3[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_5))] = argsort_gpu_v1[(first6[(0)])];
                first6[(0)] = (first6[(0)] + (int64_t)1);
              } else {
                argsort_gpu_v2[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_5))] = argsort_gpu_v0[(last6[(0)])];
                argsort_gpu_v3[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_5))] = argsort_gpu_v1[(last6[(0)])];
                last6[(0)] = (last6[(0)] + (int64_t)1);
              }
            } else {
              if (((first6[(0)] < ((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))) && (first6[(0)] < (int64_t)490560)) && (((first6[(0)] - (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) - first5[(0)]) < (int64_t)4096)) {
                argsort_gpu_v2[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_5))] = argsort_gpu_v0[(first6[(0)])];
                argsort_gpu_v3[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_5))] = argsort_gpu_v1[(first6[(0)])];
                first6[(0)] = (first6[(0)] + (int64_t)1);
              } else {
                argsort_gpu_v2[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_5))] = argsort_gpu_v0[(last6[(0)])];
                argsort_gpu_v3[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_5))] = argsort_gpu_v1[(last6[(0)])];
                last6[(0)] = (last6[(0)] + (int64_t)1);
              }
            }
          }
        } else {
          first7[(0)] = max((int64_t)0, ((((int64_t)((int)threadIdx.x)) * (int64_t)4) - min((((min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * (((int64_t)((int)blockIdx.z)) + (int64_t)1)), (int64_t)490560) + last5[(0)]) - min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) - (((int64_t)((int)blockIdx.x)) * (int64_t)4096)), (int64_t)4096)));
          last7[(0)] = min((((int64_t)((int)threadIdx.x)) * (int64_t)4), min((min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1), ((int64_t)490560 - (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))) - first5[(0)]), (int64_t)4096));
          while ((first7[(0)] < last7[(0)])) {
            if (argsort_gpu_v2[(((((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) - last5[(0)]) - ((first7[(0)] + last7[(0)]) >> (int64_t)1)) - (int64_t)1))] <= argsort_gpu_v2[((((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + first5[(0)]) + ((first7[(0)] + last7[(0)]) >> (int64_t)1)))]) {
              first7[(0)] = (((first7[(0)] + last7[(0)]) >> (int64_t)1) + (int64_t)1);
            } else {
              last7[(0)] = ((first7[(0)] + last7[(0)]) >> (int64_t)1);
            }
          }
          first7[(0)] = (((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))) + first5[(0)]) + first7[(0)]);
          last7[(0)] = (((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) - last5[(0)]) - last7[(0)]);
          for (int64_t i_6 = 0; i_6 < min(((min((min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1), ((int64_t)490560 - (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))) - first5[(0)]), (int64_t)4096) + min((((min((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * (((int64_t)((int)blockIdx.z)) + (int64_t)1)), (int64_t)490560) + last5[(0)]) - min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) - (((int64_t)((int)blockIdx.x)) * (int64_t)4096)), (int64_t)4096)) - (((int64_t)((int)threadIdx.x)) * (int64_t)4)), (int64_t)4); ++i_6) {
            if ((((first7[(0)] < ((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))) && (first7[(0)] < (int64_t)490560)) && (((first7[(0)] - (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) - first5[(0)]) < (int64_t)4096)) && ((last7[(0)] < ((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + min(((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))), (int64_t)490560)) + (int64_t)4096) - last5[(0)])) && ((last7[(0)] < (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * (((int64_t)((int)blockIdx.z)) + (int64_t)1))) && (last7[(0)] < (int64_t)490560)))) {
              if (argsort_gpu_v2[(last7[(0)])] <= argsort_gpu_v2[(first7[(0)])]) {
                argsort_gpu_v0[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_6))] = argsort_gpu_v2[(first7[(0)])];
                argsort_gpu_v1[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_6))] = argsort_gpu_v3[(first7[(0)])];
                first7[(0)] = (first7[(0)] + (int64_t)1);
              } else {
                argsort_gpu_v0[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_6))] = argsort_gpu_v2[(last7[(0)])];
                argsort_gpu_v1[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_6))] = argsort_gpu_v3[(last7[(0)])];
                last7[(0)] = (last7[(0)] + (int64_t)1);
              }
            } else {
              if (((first7[(0)] < ((((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) >> (int64_t)1) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z))))) && (first7[(0)] < (int64_t)490560)) && (((first7[(0)] - (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) - first5[(0)]) < (int64_t)4096)) {
                argsort_gpu_v0[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_6))] = argsort_gpu_v2[(first7[(0)])];
                argsort_gpu_v1[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_6))] = argsort_gpu_v3[(first7[(0)])];
                first7[(0)] = (first7[(0)] + (int64_t)1);
              } else {
                argsort_gpu_v0[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_6))] = argsort_gpu_v2[(last7[(0)])];
                argsort_gpu_v1[(((((((int64_t)((int)blockIdx.x)) * (int64_t)4096) + (((int64_t)((int)threadIdx.x)) * (int64_t)4)) + (((int64_t)2 << (((int64_t)i_0) + ((int64_t)((int)ceil(log2(1.280000e+02)))))) * ((int64_t)((int)blockIdx.z)))) + i_6))] = argsort_gpu_v3[(last7[(0)])];
                last7[(0)] = (last7[(0)] + (int64_t)1);
              }
            }
          }
        }
      }
    }
  }
}

extern "C" __global__ void fused_vision_non_max_suppression_kernel0(float* __restrict__ fetch_score, float* __restrict__ placeholder) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 490560) {
    fetch_score[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = placeholder[((((((int)blockIdx.x) * 6144) + (((int)threadIdx.x) * 6)) + 1))];
  }
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_18_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[360];
  __shared__ float placeholder_shared[18];
  float PaddedInput_shared_local[32];
  float placeholder_shared_local[9];
  float DepthwiseConv2d[8];
  #pragma unroll
  for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 12; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
    if (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 360) {
      if ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 8) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.y)) < 90) {
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 2) + ((int)threadIdx.z)) < 23) {
          PaddedInput_shared[(((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))] = (((((10 <= (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 180)) && ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 180) < 170)) && (1 <= ((((int)blockIdx.x) * 8) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 10)))) && (((((int)blockIdx.x) * 8) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 10)) < 17)) ? placeholder[(((((((((int)blockIdx.z) * 512) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) / 180) * 256)) + (((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 180) / 10) * 16)) + (((int)blockIdx.x) * 8)) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 10)) - 17))] : 0.000000e+00f);
        }
      }
    }
  }
  if ((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 18) {
    if (((((int)threadIdx.z) * 4) + ((int)threadIdx.y)) < 5) {
      placeholder_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))] = placeholder1[(((((((int)blockIdx.z) * 18) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))];
    }
  }
  __syncthreads();
  #pragma unroll
  for (int ax2 = 0; ax2 < 4; ++ax2) {
    #pragma unroll
    for (int ax3 = 0; ax3 < 4; ++ax3) {
      PaddedInput_shared_local[(((ax2 * 4) + ax3))] = PaddedInput_shared[((((((((int)threadIdx.z) * 180) + (((int)threadIdx.y) * 20)) + (ax2 * 10)) + (((int)threadIdx.x) * 2)) + ax3))];
      PaddedInput_shared_local[((((ax2 * 4) + ax3) + 16))] = PaddedInput_shared[(((((((((int)threadIdx.z) * 180) + (((int)threadIdx.y) * 20)) + (ax2 * 10)) + (((int)threadIdx.x) * 2)) + ax3) + 80))];
    }
  }
  #pragma unroll
  for (int ax21 = 0; ax21 < 3; ++ax21) {
    #pragma unroll
    for (int ax31 = 0; ax31 < 3; ++ax31) {
      placeholder_shared_local[(((ax21 * 3) + ax31))] = placeholder_shared[((((((int)threadIdx.z) * 9) + (ax21 * 3)) + ax31))];
    }
  }
  #pragma unroll
  for (int i = 0; i < 2; ++i) {
    #pragma unroll
    for (int j = 0; j < 2; ++j) {
      DepthwiseConv2d[(((i * 2) + j))] = 0.000000e+00f;
      DepthwiseConv2d[((((i * 2) + j) + 4))] = 0.000000e+00f;
      #pragma unroll
      for (int di = 0; di < 3; ++di) {
        #pragma unroll
        for (int dj = 0; dj < 3; ++dj) {
          DepthwiseConv2d[(((i * 2) + j))] = (DepthwiseConv2d[(((i * 2) + j))] + (PaddedInput_shared_local[(((((i * 4) + (di * 4)) + j) + dj))] * placeholder_shared_local[(((di * 3) + dj))]));
          DepthwiseConv2d[((((i * 2) + j) + 4))] = (DepthwiseConv2d[((((i * 2) + j) + 4))] + (PaddedInput_shared_local[((((((i * 4) + (di * 4)) + j) + dj) + 16))] * placeholder_shared_local[(((di * 3) + dj))]));
        }
      }
    }
  }
  #pragma unroll
  for (int ax2_inner_inner_inner = 0; ax2_inner_inner_inner < 2; ++ax2_inner_inner_inner) {
    #pragma unroll
    for (int ax3_inner_inner_inner = 0; ax3_inner_inner_inner < 2; ++ax3_inner_inner_inner) {
      T_relu[((((((((((int)blockIdx.z) * 512) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 32)) + (ax2_inner_inner_inner * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner))] = max((DepthwiseConv2d[(((ax2_inner_inner_inner * 2) + ax3_inner_inner_inner))] + placeholder2[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]), 0.000000e+00f);
      T_relu[(((((((((((int)blockIdx.z) * 512) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 32)) + (ax2_inner_inner_inner * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 128))] = max((DepthwiseConv2d[((((ax2_inner_inner_inner * 2) + ax3_inner_inner_inner) + 4))] + placeholder2[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]), 0.000000e+00f);
    }
  }
}

extern "C" __global__ void fused_nn_conv2d_add_3_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_add, float* __restrict__ placeholder2) {
  float compute[12];
  __shared__ float pad_temp_shared[100];
  __shared__ float placeholder_shared[162];
  compute[(0)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 512; ++rc_outer) {
    __syncthreads();
    if ((((((int)threadIdx.z) * 34) + (((int)threadIdx.y) * 5)) + (((int)threadIdx.x) * 2)) < 100) {
      if (((((int)threadIdx.y) * 5) + (((int)threadIdx.x) * 2)) < 34) {
        if (((int)threadIdx.x) < 3) {
          pad_temp_shared[((((((int)threadIdx.z) * 34) + (((int)threadIdx.y) * 5)) + (((int)threadIdx.x) * 2)))] = (((((10 <= (((((int)threadIdx.z) * 34) + (((int)threadIdx.y) * 5)) + (((int)threadIdx.x) * 2))) && ((((((int)threadIdx.z) * 34) + (((int)threadIdx.y) * 5)) + (((int)threadIdx.x) * 2)) < 90)) && (1 <= ((((((int)threadIdx.z) * 34) + (((int)threadIdx.y) * 5)) + (((int)threadIdx.x) * 2)) % 10))) && (((((((int)threadIdx.z) * 34) + (((int)threadIdx.y) * 5)) + (((int)threadIdx.x) * 2)) % 10) < 9)) ? placeholder[(((((rc_outer * 64) + (((((((int)threadIdx.z) * 34) + (((int)threadIdx.y) * 5)) + (((int)threadIdx.x) * 2)) / 10) * 8)) + ((((((int)threadIdx.z) * 34) + (((int)threadIdx.y) * 5)) + (((int)threadIdx.x) * 2)) % 10)) - 9))] : 0.000000e+00f);
        }
      }
    }
    if ((((((int)threadIdx.z) * 34) + (((int)threadIdx.y) * 5)) + (((int)threadIdx.x) * 2)) < 99) {
      if (((((int)threadIdx.y) * 5) + (((int)threadIdx.x) * 2)) < 33) {
        if (((int)threadIdx.x) < 2) {
          pad_temp_shared[(((((((int)threadIdx.z) * 34) + (((int)threadIdx.y) * 5)) + (((int)threadIdx.x) * 2)) + 1))] = (((((9 <= (((((int)threadIdx.z) * 34) + (((int)threadIdx.y) * 5)) + (((int)threadIdx.x) * 2))) && ((((((int)threadIdx.z) * 34) + (((int)threadIdx.y) * 5)) + (((int)threadIdx.x) * 2)) < 89)) && (1 <= (((((((int)threadIdx.z) * 34) + (((int)threadIdx.y) * 5)) + (((int)threadIdx.x) * 2)) + 1) % 10))) && ((((((((int)threadIdx.z) * 34) + (((int)threadIdx.y) * 5)) + (((int)threadIdx.x) * 2)) + 1) % 10) < 9)) ? placeholder[(((((rc_outer * 64) + ((((((((int)threadIdx.z) * 34) + (((int)threadIdx.y) * 5)) + (((int)threadIdx.x) * 2)) + 1) / 10) * 8)) + (((((((int)threadIdx.z) * 34) + (((int)threadIdx.y) * 5)) + (((int)threadIdx.x) * 2)) + 1) % 10)) - 9))] : 0.000000e+00f);
        }
      }
    }
    if (((((int)threadIdx.z) * 6) + (((((int)threadIdx.y) * 7) + (((int)threadIdx.x) * 2)) / 9)) < 18) {
      if (((((int)threadIdx.z) * 18) + (((((int)threadIdx.y) * 7) + (((int)threadIdx.x) * 2)) / 3)) < 54) {
        if ((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 7)) + (((int)threadIdx.x) * 2)) < 162) {
          if (((((int)threadIdx.y) * 7) + (((int)threadIdx.x) * 2)) < 54) {
            placeholder_shared[((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 7)) + (((int)threadIdx.x) * 2)))] = placeholder1[((((((((int)blockIdx.z) * 82944) + (((int)threadIdx.z) * 27648)) + ((((((int)threadIdx.y) * 7) + (((int)threadIdx.x) * 2)) / 9) * 4608)) + (rc_outer * 9)) + (((((int)threadIdx.y) * 7) + (((int)threadIdx.x) * 2)) % 9)))];
          }
        }
      }
    }
    if (((((int)threadIdx.z) * 6) + ((((((int)threadIdx.y) * 7) + (((int)threadIdx.x) * 2)) + 1) / 9)) < 18) {
      if (((((int)threadIdx.z) * 18) + ((((((int)threadIdx.y) * 7) + (((int)threadIdx.x) * 2)) + 1) / 3)) < 54) {
        if ((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 7)) + (((int)threadIdx.x) * 2)) < 161) {
          if (((((int)threadIdx.y) * 7) + (((int)threadIdx.x) * 2)) < 53) {
            if (((int)threadIdx.x) < 3) {
              placeholder_shared[(((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 7)) + (((int)threadIdx.x) * 2)) + 1))] = placeholder1[((((((((int)blockIdx.z) * 82944) + (((int)threadIdx.z) * 27648)) + (((((((int)threadIdx.y) * 7) + (((int)threadIdx.x) * 2)) + 1) / 9) * 4608)) + (rc_outer * 9)) + ((((((int)threadIdx.y) * 7) + (((int)threadIdx.x) * 2)) + 1) % 9)))];
            }
          }
        }
      }
    }
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)))] * placeholder_shared[((((int)threadIdx.z) * 9))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 27))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 54))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 81))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 108))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 135))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[((((int)threadIdx.z) * 9))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 27))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 54))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 81))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 108))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 135))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 28))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 55))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 82))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 109))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 136))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 1))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 28))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 55))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 82))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 109))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 136))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 29))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 56))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 83))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 110))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 137))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 2))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 29))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 56))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 83))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 110))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 137))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 3))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 30))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 57))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 84))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 111))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 138))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 30))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 57))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 84))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 111))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 138))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 4))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 31))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 58))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 85))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 112))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 139))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 31))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 58))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 85))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 112))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 139))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 5))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 32))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 59))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 86))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 113))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 140))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 32))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 59))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 86))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 113))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 140))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 33))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 60))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 87))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 114))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 141))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 6))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 33))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 60))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 87))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 114))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 141))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 7))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 34))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 61))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 88))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 115))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 142))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 7))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 34))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 61))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 88))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 115))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 142))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 8))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 35))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 62))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 89))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 116))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 143))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 23))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 8))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 23))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 35))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 23))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 62))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 23))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 89))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 23))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 116))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 23))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 143))]));
  }
  T_add[(((((((int)blockIdx.z) * 1152) + (((int)threadIdx.z) * 64)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)))] = (compute[(0)] + placeholder2[(((((int)blockIdx.z) * 18) + ((int)threadIdx.z)))]);
  T_add[((((((((int)blockIdx.z) * 1152) + (((int)threadIdx.z) * 64)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 192))] = (compute[(2)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 3))]);
  T_add[((((((((int)blockIdx.z) * 1152) + (((int)threadIdx.z) * 64)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 384))] = (compute[(4)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 6))]);
  T_add[((((((((int)blockIdx.z) * 1152) + (((int)threadIdx.z) * 64)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 576))] = (compute[(6)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 9))]);
  T_add[((((((((int)blockIdx.z) * 1152) + (((int)threadIdx.z) * 64)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 768))] = (compute[(8)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 12))]);
  T_add[((((((((int)blockIdx.z) * 1152) + (((int)threadIdx.z) * 64)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 960))] = (compute[(10)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 15))]);
  T_add[((((((((int)blockIdx.z) * 1152) + (((int)threadIdx.z) * 64)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1))] = (compute[(1)] + placeholder2[(((((int)blockIdx.z) * 18) + ((int)threadIdx.z)))]);
  T_add[((((((((int)blockIdx.z) * 1152) + (((int)threadIdx.z) * 64)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 193))] = (compute[(3)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 3))]);
  T_add[((((((((int)blockIdx.z) * 1152) + (((int)threadIdx.z) * 64)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 385))] = (compute[(5)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 6))]);
  T_add[((((((((int)blockIdx.z) * 1152) + (((int)threadIdx.z) * 64)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 577))] = (compute[(7)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 9))]);
  T_add[((((((((int)blockIdx.z) * 1152) + (((int)threadIdx.z) * 64)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 769))] = (compute[(9)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 12))]);
  T_add[((((((((int)blockIdx.z) * 1152) + (((int)threadIdx.z) * 64)) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 961))] = (compute[(11)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 15))]);
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_11_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[360];
  __shared__ float placeholder_shared[18];
  float PaddedInput_shared_local[32];
  float placeholder_shared_local[9];
  float DepthwiseConv2d[8];
  #pragma unroll
  for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 12; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
    if (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 360) {
      if ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 8) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.y)) < 90) {
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 2) + ((int)threadIdx.z)) < 23) {
          PaddedInput_shared[(((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))] = (((((1 <= ((((int)blockIdx.y) * 16) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 180) / 10))) && (((((int)blockIdx.y) * 16) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 180) / 10)) < 129)) && (1 <= ((((int)blockIdx.x) * 8) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 10)))) && (((((int)blockIdx.x) * 8) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 10)) < 129)) ? placeholder[((((((((((int)blockIdx.z) * 32768) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) / 180) * 16384)) + (((int)blockIdx.y) * 2048)) + (((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 180) / 10) * 128)) + (((int)blockIdx.x) * 8)) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 10)) - 129))] : 0.000000e+00f);
        }
      }
    }
  }
  if ((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 18) {
    if (((((int)threadIdx.z) * 4) + ((int)threadIdx.y)) < 5) {
      placeholder_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))] = placeholder1[(((((((int)blockIdx.z) * 18) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))];
    }
  }
  __syncthreads();
  #pragma unroll
  for (int ax2 = 0; ax2 < 4; ++ax2) {
    #pragma unroll
    for (int ax3 = 0; ax3 < 4; ++ax3) {
      PaddedInput_shared_local[(((ax2 * 4) + ax3))] = PaddedInput_shared[((((((((int)threadIdx.z) * 180) + (((int)threadIdx.y) * 20)) + (ax2 * 10)) + (((int)threadIdx.x) * 2)) + ax3))];
      PaddedInput_shared_local[((((ax2 * 4) + ax3) + 16))] = PaddedInput_shared[(((((((((int)threadIdx.z) * 180) + (((int)threadIdx.y) * 20)) + (ax2 * 10)) + (((int)threadIdx.x) * 2)) + ax3) + 80))];
    }
  }
  #pragma unroll
  for (int ax21 = 0; ax21 < 3; ++ax21) {
    #pragma unroll
    for (int ax31 = 0; ax31 < 3; ++ax31) {
      placeholder_shared_local[(((ax21 * 3) + ax31))] = placeholder_shared[((((((int)threadIdx.z) * 9) + (ax21 * 3)) + ax31))];
    }
  }
  #pragma unroll
  for (int i = 0; i < 2; ++i) {
    #pragma unroll
    for (int j = 0; j < 2; ++j) {
      DepthwiseConv2d[(((i * 2) + j))] = 0.000000e+00f;
      DepthwiseConv2d[((((i * 2) + j) + 4))] = 0.000000e+00f;
      #pragma unroll
      for (int di = 0; di < 3; ++di) {
        #pragma unroll
        for (int dj = 0; dj < 3; ++dj) {
          DepthwiseConv2d[(((i * 2) + j))] = (DepthwiseConv2d[(((i * 2) + j))] + (PaddedInput_shared_local[(((((i * 4) + (di * 4)) + j) + dj))] * placeholder_shared_local[(((di * 3) + dj))]));
          DepthwiseConv2d[((((i * 2) + j) + 4))] = (DepthwiseConv2d[((((i * 2) + j) + 4))] + (PaddedInput_shared_local[((((((i * 4) + (di * 4)) + j) + dj) + 16))] * placeholder_shared_local[(((di * 3) + dj))]));
        }
      }
    }
  }
  #pragma unroll
  for (int ax2_inner_inner_inner = 0; ax2_inner_inner_inner < 2; ++ax2_inner_inner_inner) {
    #pragma unroll
    for (int ax3_inner_inner_inner = 0; ax3_inner_inner_inner < 2; ++ax3_inner_inner_inner) {
      T_relu[(((((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 2048)) + (((int)threadIdx.y) * 256)) + (ax2_inner_inner_inner * 128)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner))] = max((DepthwiseConv2d[(((ax2_inner_inner_inner * 2) + ax3_inner_inner_inner))] + placeholder2[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]), 0.000000e+00f);
      T_relu[((((((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 2048)) + (((int)threadIdx.y) * 256)) + (ax2_inner_inner_inner * 128)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 1024))] = max((DepthwiseConv2d[((((ax2_inner_inner_inner * 2) + ax3_inner_inner_inner) + 4))] + placeholder2[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]), 0.000000e+00f);
    }
  }
}

extern "C" __global__ void fused_strided_slice_strided_slice_concatenate_kernel0(float* __restrict__ T_concat, float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ placeholder2) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 36792) {
    T_concat[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((2 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 4) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) - 2))] : ((1 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder1[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 62))] : placeholder2[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 63))]));
  }
}

extern "C" __global__ void fused_vision_non_max_suppression_kernel1(float* __restrict__ argsort_gpu_v0, float* __restrict__ fetch_score, int* __restrict__ argsort_gpu_v1) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 490560) {
    argsort_gpu_v0[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = fetch_score[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))];
    argsort_gpu_v1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x));
  }
}

extern "C" __global__ void fused_nn_conv2d_add_6_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_add, float* __restrict__ placeholder2) {
  float compute[3];
  __shared__ float pad_temp_shared[9];
  __shared__ float placeholder_shared[108];
  compute[(0)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 256; ++rc_outer) {
    __syncthreads();
    if (((int)threadIdx.z) < 3) {
      pad_temp_shared[((((int)threadIdx.z) * 3))] = 0.000000e+00f;
    }
    if (((int)threadIdx.z) < 3) {
      pad_temp_shared[(((((int)threadIdx.z) * 3) + 1))] = (((1 <= ((int)threadIdx.z)) && (((int)threadIdx.z) < 2)) ? placeholder[(((rc_outer + ((int)threadIdx.z)) - 1))] : 0.000000e+00f);
    }
    if (((int)threadIdx.z) < 3) {
      pad_temp_shared[(((((int)threadIdx.z) * 3) + 2))] = 0.000000e+00f;
    }
    placeholder_shared[((((int)threadIdx.z) * 27))] = placeholder1[((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 1))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 1))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 2))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 2))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 3))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 3))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 4))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 4))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 5))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 5))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 6))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 6))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 7))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 7))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 8))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 8))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 9))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 2304))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 10))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 2305))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 11))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 2306))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 12))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 2307))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 13))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 2308))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 14))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 2309))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 15))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 2310))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 16))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 2311))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 17))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 2312))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 18))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 4608))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 19))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 4609))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 20))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 4610))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 21))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 4611))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 22))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 4612))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 23))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 4613))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 24))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 4614))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 25))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 4615))];
    placeholder_shared[(((((int)threadIdx.z) * 27) + 26))] = placeholder1[(((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (rc_outer * 9)) + 4616))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(0)] * placeholder_shared[((((int)threadIdx.z) * 9))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 36))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 72))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 1))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 37))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 73))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 2))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 38))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 74))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 3))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 39))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 75))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 4))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 40))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 76))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 5))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 41))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 77))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 6))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 42))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 78))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 7))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 43))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 79))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(8)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 8))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(8)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 44))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(8)] * placeholder_shared[(((((int)threadIdx.z) * 9) + 80))]));
  }
  T_add[(((((int)blockIdx.z) * 12) + ((int)threadIdx.z)))] = (compute[(0)] + placeholder2[(((((int)blockIdx.z) * 12) + ((int)threadIdx.z)))]);
  T_add[((((((int)blockIdx.z) * 12) + ((int)threadIdx.z)) + 4))] = (compute[(1)] + placeholder2[((((((int)blockIdx.z) * 12) + ((int)threadIdx.z)) + 4))]);
  T_add[((((((int)blockIdx.z) * 12) + ((int)threadIdx.z)) + 8))] = (compute[(2)] + placeholder2[((((((int)blockIdx.z) * 12) + ((int)threadIdx.z)) + 8))]);
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_8_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float compute[16];
  __shared__ float pad_temp_shared[256];
  __shared__ float placeholder_shared[512];
  compute[(0)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 16; ++rc_outer) {
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)))] = placeholder[(((((((rc_outer * 32768) + ((((int)threadIdx.z) >> 1) * 4096)) + (((int)blockIdx.y) * 128)) + ((((int)threadIdx.z) & 1) * 64)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)))];
    pad_temp_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + 1))] = placeholder[((((((((rc_outer * 32768) + ((((int)threadIdx.z) >> 1) * 4096)) + (((int)blockIdx.y) * 128)) + ((((int)threadIdx.z) & 1) * 64)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 1))];
    placeholder_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 4)))] = placeholder1[((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 512)) + ((((int)threadIdx.x) >> 1) * 128)) + (rc_outer * 8)) + ((((int)threadIdx.x) & 1) * 4)))];
    placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 4)) + 1))] = placeholder1[((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 512)) + ((((((int)threadIdx.x) * 4) + 1) >> 3) * 128)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 4) + 1) & 7)))];
    placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 4)) + 2))] = placeholder1[((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 512)) + ((((((int)threadIdx.x) * 4) + 2) >> 3) * 128)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 4) + 2) & 7)))];
    placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 4)) + 3))] = placeholder1[((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 512)) + ((((((int)threadIdx.x) * 4) + 3) >> 3) * 128)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 4) + 3) & 7)))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 32))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 32))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 32))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 32))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 48))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 48))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 48))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 48))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 40))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 40))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 40))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 40))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 64))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 64))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 64))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 64))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 80))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 80))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 80))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 80))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 72))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 72))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 72))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 72))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 88))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 88))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 88))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 88))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 96))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 96))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 96))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 96))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 120))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 120))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 120))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 120))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 128))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 128))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 128))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 128))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 144))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 144))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 144))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 144))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 136))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 136))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 136))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 136))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 152))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 152))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 152))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 152))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 160))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 160))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 160))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 160))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 176))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 176))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 176))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 176))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 184))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 184))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 184))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 184))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 192))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 192))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 192))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 192))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 208))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 208))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 208))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 208))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 200))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 200))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 200))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 200))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 216))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 216))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 216))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 216))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 240))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 240))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 240))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 240))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 232))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 232))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 232))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 232))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 248))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 248))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 248))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 248))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
  }
  T_relu[((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)))] = max((compute[(0)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 65536))] = max((compute[(4)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 131072))] = max((compute[(8)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 196608))] = max((compute[(12)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 64))] = max((compute[(2)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 65600))] = max((compute[(6)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 131136))] = max((compute[(10)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 196672))] = max((compute[(14)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 8))] = max((compute[(1)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 65544))] = max((compute[(5)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 131080))] = max((compute[(9)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 196616))] = max((compute[(13)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 72))] = max((compute[(3)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 65608))] = max((compute[(7)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 131144))] = max((compute[(11)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 196680))] = max((compute[(15)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
}

extern "C" __global__ void fused_nn_conv2d_add_7_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_add, float* __restrict__ placeholder2) {
  float compute[8];
  __shared__ float pad_temp_shared[34];
  __shared__ float placeholder_shared[48];
  compute[(0)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 512; ++rc_outer) {
    __syncthreads();
    if (((((int)threadIdx.z) * 9) + ((int)threadIdx.x)) < 34) {
      if (((int)threadIdx.x) < 9) {
        pad_temp_shared[(((((int)threadIdx.z) * 9) + ((int)threadIdx.x)))] = ((((1 <= ((int)blockIdx.y)) && (1 <= ((((int)threadIdx.z) * 9) + ((int)threadIdx.x)))) && (((((int)threadIdx.z) * 9) + ((int)threadIdx.x)) < 33)) ? placeholder[((((((rc_outer * 1024) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.z) * 9)) + ((int)threadIdx.x)) - 33))] : 0.000000e+00f);
      }
    }
    if (((((int)threadIdx.z) * 4) + (((int)threadIdx.x) / 3)) < 16) {
      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 48) {
        if (((int)threadIdx.x) < 12) {
          placeholder_shared[(((((int)threadIdx.z) * 12) + ((int)threadIdx.x)))] = placeholder1[(((((((int)threadIdx.z) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer * 9)) + (((int)threadIdx.x) % 3)))];
        }
      }
    }
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) * 6))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 24))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[((((int)threadIdx.z) * 6))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 24))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 3))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 27))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 3))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 27))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 1))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 25))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 17))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 1))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 17))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 25))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 4))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 28))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 17))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 4))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 17))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 28))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 2))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 26))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 2))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 26))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 5))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 29))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 5))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 29))]));
    __syncthreads();
    if (((((int)threadIdx.z) * 9) + ((int)threadIdx.x)) < 34) {
      if (((int)threadIdx.x) < 9) {
        pad_temp_shared[(((((int)threadIdx.z) * 9) + ((int)threadIdx.x)))] = (((1 <= ((((int)threadIdx.z) * 9) + ((int)threadIdx.x))) && (((((int)threadIdx.z) * 9) + ((int)threadIdx.x)) < 33)) ? placeholder[((((((rc_outer * 1024) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.z) * 9)) + ((int)threadIdx.x)) - 1))] : 0.000000e+00f);
      }
    }
    if (((((int)threadIdx.z) * 4) + (((int)threadIdx.x) / 3)) < 16) {
      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 48) {
        if (((int)threadIdx.x) < 12) {
          placeholder_shared[(((((int)threadIdx.z) * 12) + ((int)threadIdx.x)))] = placeholder1[((((((((int)threadIdx.z) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer * 9)) + (((int)threadIdx.x) % 3)) + 3))];
        }
      }
    }
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) * 6))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 24))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[((((int)threadIdx.z) * 6))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 24))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 3))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 27))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 3))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 27))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 1))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 25))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 17))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 1))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 17))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 25))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 4))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 28))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 17))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 4))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 17))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 28))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 2))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 26))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 2))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 26))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 5))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 29))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 5))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 29))]));
    __syncthreads();
    if (((((int)threadIdx.z) * 9) + ((int)threadIdx.x)) < 34) {
      if (((int)threadIdx.x) < 9) {
        pad_temp_shared[(((((int)threadIdx.z) * 9) + ((int)threadIdx.x)))] = ((((((int)blockIdx.y) < 31) && (1 <= ((((int)threadIdx.z) * 9) + ((int)threadIdx.x)))) && (((((int)threadIdx.z) * 9) + ((int)threadIdx.x)) < 33)) ? placeholder[((((((rc_outer * 1024) + (((int)blockIdx.y) * 32)) + (((int)threadIdx.z) * 9)) + ((int)threadIdx.x)) + 31))] : 0.000000e+00f);
      }
    }
    if (((((int)threadIdx.z) * 4) + (((int)threadIdx.x) / 3)) < 16) {
      if (((((int)threadIdx.z) * 12) + ((int)threadIdx.x)) < 48) {
        if (((int)threadIdx.x) < 12) {
          placeholder_shared[(((((int)threadIdx.z) * 12) + ((int)threadIdx.x)))] = placeholder1[((((((((int)threadIdx.z) * 18432) + ((((int)threadIdx.x) / 3) * 4608)) + (rc_outer * 9)) + (((int)threadIdx.x) % 3)) + 6))];
        }
      }
    }
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) * 6))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 24))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[((((int)threadIdx.z) * 6))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 24))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 3))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 27))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 3))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 27))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 1))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 25))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 17))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 1))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 17))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 25))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 4))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 28))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 17))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 4))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 17))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 28))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 2))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 26))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 2))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 26))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 5))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 29))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 5))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 29))]));
  }
  T_add[((((((int)threadIdx.z) * 2048) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)))] = (compute[(0)] + placeholder2[((((int)threadIdx.z) * 2))]);
  T_add[(((((((int)threadIdx.z) * 2048) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 8192))] = (compute[(4)] + placeholder2[(((((int)threadIdx.z) * 2) + 8))]);
  T_add[(((((((int)threadIdx.z) * 2048) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 16))] = (compute[(2)] + placeholder2[((((int)threadIdx.z) * 2))]);
  T_add[(((((((int)threadIdx.z) * 2048) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 8208))] = (compute[(6)] + placeholder2[(((((int)threadIdx.z) * 2) + 8))]);
  T_add[(((((((int)threadIdx.z) * 2048) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 1024))] = (compute[(1)] + placeholder2[(((((int)threadIdx.z) * 2) + 1))]);
  T_add[(((((((int)threadIdx.z) * 2048) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 9216))] = (compute[(5)] + placeholder2[(((((int)threadIdx.z) * 2) + 9))]);
  T_add[(((((((int)threadIdx.z) * 2048) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 1040))] = (compute[(3)] + placeholder2[(((((int)threadIdx.z) * 2) + 1))]);
  T_add[(((((((int)threadIdx.z) * 2048) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 9232))] = (compute[(7)] + placeholder2[(((((int)threadIdx.z) * 2) + 9))]);
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_12_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float compute[32];
  __shared__ float pad_temp_shared[512];
  __shared__ float placeholder_shared[512];
  compute[(0)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(16)] = 0.000000e+00f;
  compute[(20)] = 0.000000e+00f;
  compute[(24)] = 0.000000e+00f;
  compute[(28)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(18)] = 0.000000e+00f;
  compute[(22)] = 0.000000e+00f;
  compute[(26)] = 0.000000e+00f;
  compute[(30)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(17)] = 0.000000e+00f;
  compute[(21)] = 0.000000e+00f;
  compute[(25)] = 0.000000e+00f;
  compute[(29)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  compute[(19)] = 0.000000e+00f;
  compute[(23)] = 0.000000e+00f;
  compute[(27)] = 0.000000e+00f;
  compute[(31)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 8; ++rc_outer) {
    __syncthreads();
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      pad_temp_shared[(((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = placeholder[((((((((rc_outer * 131072) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 256)) + ((((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) >> 3) * 128)) + (((int)blockIdx.x) * 8)) + (((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) & 7)))];
    }
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 4; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {
      placeholder_shared[(((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 4)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1))] = placeholder1[(((((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 512)) + (((int)threadIdx.y) * 128)) + ((((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) >> 3) * 64)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 4) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) & 7)))];
    }
    __syncthreads();
    #pragma unroll
    for (int rc_inner = 0; rc_inner < 8; ++rc_inner) {
      compute[(0)] = (compute[(0)] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)))] * placeholder_shared[(((((int)threadIdx.z) * 8) + rc_inner))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 64))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 128))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 192))]));
      compute[(16)] = (compute[(16)] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 256))]));
      compute[(20)] = (compute[(20)] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 320))]));
      compute[(24)] = (compute[(24)] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 384))]));
      compute[(28)] = (compute[(28)] + (pad_temp_shared[((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 448))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 32))] * placeholder_shared[(((((int)threadIdx.z) * 8) + rc_inner))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 32))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 64))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 32))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 128))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 32))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 192))]));
      compute[(18)] = (compute[(18)] + (pad_temp_shared[(((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 32))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 256))]));
      compute[(22)] = (compute[(22)] + (pad_temp_shared[(((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 32))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 320))]));
      compute[(26)] = (compute[(26)] + (pad_temp_shared[(((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 32))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 384))]));
      compute[(30)] = (compute[(30)] + (pad_temp_shared[(((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 32))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 448))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 4))] * placeholder_shared[(((((int)threadIdx.z) * 8) + rc_inner))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 4))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 64))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 4))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 128))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 4))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 192))]));
      compute[(17)] = (compute[(17)] + (pad_temp_shared[(((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 4))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 256))]));
      compute[(21)] = (compute[(21)] + (pad_temp_shared[(((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 4))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 320))]));
      compute[(25)] = (compute[(25)] + (pad_temp_shared[(((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 4))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 384))]));
      compute[(29)] = (compute[(29)] + (pad_temp_shared[(((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 4))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 448))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + rc_inner))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 36))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 64))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 36))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 128))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 36))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 192))]));
      compute[(19)] = (compute[(19)] + (pad_temp_shared[(((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 36))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 256))]));
      compute[(23)] = (compute[(23)] + (pad_temp_shared[(((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 36))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 320))]));
      compute[(27)] = (compute[(27)] + (pad_temp_shared[(((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 36))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 384))]));
      compute[(31)] = (compute[(31)] + (pad_temp_shared[(((((rc_inner * 64) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) + 36))] * placeholder_shared[((((((int)threadIdx.z) * 8) + rc_inner) + 448))]));
    }
  }
  T_relu[(((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)))] = max((compute[(0)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 131072))] = max((compute[(4)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 8))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 262144))] = max((compute[(8)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 393216))] = max((compute[(12)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 24))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 524288))] = max((compute[(16)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 655360))] = max((compute[(20)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 40))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 786432))] = max((compute[(24)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 917504))] = max((compute[(28)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 56))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 512))] = max((compute[(2)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 131584))] = max((compute[(6)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 8))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 262656))] = max((compute[(10)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 393728))] = max((compute[(14)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 24))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 524800))] = max((compute[(18)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 655872))] = max((compute[(22)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 40))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 786944))] = max((compute[(26)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 918016))] = max((compute[(30)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 56))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 4))] = max((compute[(1)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 131076))] = max((compute[(5)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 8))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 262148))] = max((compute[(9)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 393220))] = max((compute[(13)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 24))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 524292))] = max((compute[(17)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 655364))] = max((compute[(21)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 40))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 786436))] = max((compute[(25)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 917508))] = max((compute[(29)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 56))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 516))] = max((compute[(3)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 131588))] = max((compute[(7)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 8))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 262660))] = max((compute[(11)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 393732))] = max((compute[(15)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 24))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 524804))] = max((compute[(19)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 655876))] = max((compute[(23)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 40))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 786948))] = max((compute[(27)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  T_relu[((((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (((int)blockIdx.x) * 8)) + ((int)threadIdx.x)) + 918020))] = max((compute[(31)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 56))]), 0.000000e+00f);
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_25_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float compute[16];
  __shared__ float pad_temp_shared[72];
  __shared__ float placeholder_shared[512];
  compute[(0)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)))] = (((1 <= ((int)threadIdx.x)) && (1 <= ((((int)threadIdx.x) * 5) % 3))) ? placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + (((((int)threadIdx.x) * 5) / 3) * 4)) + ((((int)threadIdx.x) * 5) % 3)) - 5))] : 0.000000e+00f);
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 1))] = (((1 <= ((int)threadIdx.x)) && (1 <= (((((int)threadIdx.x) * 5) + 1) % 3))) ? placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 1) / 3) * 4)) + (((((int)threadIdx.x) * 5) + 1) % 3)) - 5))] : 0.000000e+00f);
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 2))] = (((1 <= ((int)threadIdx.x)) && (1 <= (((((int)threadIdx.x) * 5) + 2) % 3))) ? placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 2) / 3) * 4)) + (((((int)threadIdx.x) * 5) + 2) % 3)) - 5))] : 0.000000e+00f);
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 3))] = ((1 <= ((((int)threadIdx.x) * 5) % 3)) ? placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + (((((int)threadIdx.x) * 5) / 3) * 4)) + ((((int)threadIdx.x) * 5) % 3)) - 1))] : 0.000000e+00f);
    if (((((((int)threadIdx.x) * 5) + 4) / 9) + ((int)threadIdx.z)) < 8) {
      if (((((int)threadIdx.z) * 3) + (((((int)threadIdx.x) * 5) + 4) / 3)) < 24) {
        if (((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) < 68) {
          if (((int)threadIdx.x) < 1) {
            pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 4))] = placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 4) / 3) * 4)) + ((((int)threadIdx.x) * 5) + 1)) - 5))];
          }
        }
      }
    }
    placeholder_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)))] = placeholder1[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 1))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 9))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 2))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 18))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 3))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 27))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 4))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 36))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 5))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 45))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 6))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 54))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 7))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 63))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 8))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2304))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 9))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2313))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 10))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2322))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 11))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2331))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 12))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2340))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 13))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2349))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 14))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2358))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 15))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2367))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 16))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4608))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 17))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4617))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 18))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4626))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 19))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4635))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 20))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4644))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 21))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4653))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 22))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4662))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 23))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4671))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 24))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6912))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 25))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6921))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 26))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6930))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 27))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6939))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 28))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6948))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 29))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6957))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 30))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6966))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 31))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6975))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)))] = ((1 <= ((int)threadIdx.x)) ? placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + (((((int)threadIdx.x) * 5) / 3) * 4)) + ((((int)threadIdx.x) * 5) % 3)) - 4))] : 0.000000e+00f);
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 1))] = ((1 <= ((int)threadIdx.x)) ? placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 1) / 3) * 4)) + (((((int)threadIdx.x) * 5) + 1) % 3)) - 4))] : 0.000000e+00f);
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 2))] = ((1 <= ((int)threadIdx.x)) ? placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 2) / 3) * 4)) + (((((int)threadIdx.x) * 5) + 2) % 3)) - 4))] : 0.000000e+00f);
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 3))] = placeholder[(((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + (((((int)threadIdx.x) * 5) / 3) * 4)) + ((((int)threadIdx.x) * 5) % 3)))];
    if (((((((int)threadIdx.x) * 5) + 4) / 9) + ((int)threadIdx.z)) < 8) {
      if (((((int)threadIdx.z) * 3) + (((((int)threadIdx.x) * 5) + 4) / 3)) < 24) {
        if (((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) < 68) {
          if (((int)threadIdx.x) < 1) {
            pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 4))] = placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 4) / 3) * 4)) + ((((int)threadIdx.x) * 5) + 1)) - 4))];
          }
        }
      }
    }
    placeholder_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 1))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 1))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 10))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 2))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 19))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 3))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 28))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 4))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 37))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 5))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 46))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 6))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 55))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 7))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 64))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 8))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2305))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 9))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2314))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 10))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2323))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 11))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2332))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 12))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2341))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 13))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2350))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 14))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2359))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 15))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2368))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 16))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4609))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 17))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4618))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 18))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4627))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 19))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4636))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 20))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4645))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 21))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4654))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 22))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4663))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 23))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4672))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 24))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6913))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 25))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6922))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 26))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6931))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 27))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6940))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 28))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6949))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 29))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6958))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 30))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6967))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 31))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6976))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)))] = ((1 <= ((int)threadIdx.x)) ? placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + (((((int)threadIdx.x) * 5) / 3) * 4)) + ((((int)threadIdx.x) * 5) % 3)) - 3))] : 0.000000e+00f);
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 1))] = ((1 <= ((int)threadIdx.x)) ? placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 1) / 3) * 4)) + (((((int)threadIdx.x) * 5) + 1) % 3)) - 3))] : 0.000000e+00f);
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 2))] = ((1 <= ((int)threadIdx.x)) ? placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 2) / 3) * 4)) + (((((int)threadIdx.x) * 5) + 2) % 3)) - 3))] : 0.000000e+00f);
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 3))] = placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + (((((int)threadIdx.x) * 5) / 3) * 4)) + ((((int)threadIdx.x) * 5) % 3)) + 1))];
    if (((((((int)threadIdx.x) * 5) + 4) / 9) + ((int)threadIdx.z)) < 8) {
      if (((((int)threadIdx.z) * 3) + (((((int)threadIdx.x) * 5) + 4) / 3)) < 24) {
        if (((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) < 68) {
          if (((int)threadIdx.x) < 1) {
            pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 4))] = placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 4) / 3) * 4)) + ((((int)threadIdx.x) * 5) + 1)) - 3))];
          }
        }
      }
    }
    placeholder_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 1))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 11))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 2))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 20))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 3))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 29))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 4))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 38))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 5))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 47))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 6))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 56))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 7))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 65))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 8))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2306))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 9))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2315))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 10))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2324))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 11))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2333))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 12))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2342))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 13))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2351))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 14))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2360))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 15))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2369))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 16))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4610))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 17))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4619))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 18))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4628))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 19))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4637))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 20))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4646))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 21))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4655))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 22))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4664))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 23))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4673))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 24))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6914))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 25))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6923))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 26))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6932))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 27))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6941))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 28))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6950))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 29))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6959))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 30))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6968))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 31))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6977))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)))] = ((1 <= ((((int)threadIdx.x) * 5) % 3)) ? placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + (((((int)threadIdx.x) * 5) / 3) * 4)) + ((((int)threadIdx.x) * 5) % 3)) - 1))] : 0.000000e+00f);
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 1))] = ((1 <= (((((int)threadIdx.x) * 5) + 1) % 3)) ? placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 1) / 3) * 4)) + (((((int)threadIdx.x) * 5) + 1) % 3)) - 1))] : 0.000000e+00f);
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 2))] = ((1 <= (((((int)threadIdx.x) * 5) + 2) % 3)) ? placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 2) / 3) * 4)) + (((((int)threadIdx.x) * 5) + 2) % 3)) - 1))] : 0.000000e+00f);
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 3))] = ((1 <= ((((int)threadIdx.x) * 5) % 3)) ? placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + (((((int)threadIdx.x) * 5) / 3) * 4)) + ((((int)threadIdx.x) * 5) % 3)) + 3))] : 0.000000e+00f);
    if (((((((int)threadIdx.x) * 5) + 4) / 9) + ((int)threadIdx.z)) < 8) {
      if (((((int)threadIdx.z) * 3) + (((((int)threadIdx.x) * 5) + 4) / 3)) < 24) {
        if (((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) < 68) {
          if (((int)threadIdx.x) < 1) {
            pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 4))] = placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 4) / 3) * 4)) + ((((int)threadIdx.x) * 5) + 1)) - 1))];
          }
        }
      }
    }
    placeholder_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 3))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 1))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 12))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 2))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 21))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 3))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 30))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 4))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 39))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 5))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 48))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 6))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 57))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 7))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 66))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 8))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2307))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 9))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2316))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 10))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2325))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 11))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2334))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 12))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2343))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 13))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2352))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 14))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2361))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 15))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2370))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 16))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4611))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 17))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4620))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 18))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4629))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 19))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4638))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 20))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4647))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 21))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4656))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 22))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4665))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 23))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4674))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 24))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6915))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 25))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6924))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 26))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6933))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 27))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6942))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 28))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6951))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 29))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6960))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 30))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6969))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 31))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6978))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)))] = placeholder[(((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + (((((int)threadIdx.x) * 5) / 3) * 4)) + ((((int)threadIdx.x) * 5) % 3)))];
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 1))] = placeholder[(((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 1) / 3) * 4)) + (((((int)threadIdx.x) * 5) + 1) % 3)))];
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 2))] = placeholder[(((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 2) / 3) * 4)) + (((((int)threadIdx.x) * 5) + 2) % 3)))];
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 3))] = placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + (((((int)threadIdx.x) * 5) / 3) * 4)) + ((((int)threadIdx.x) * 5) % 3)) + 4))];
    if (((((((int)threadIdx.x) * 5) + 4) / 9) + ((int)threadIdx.z)) < 8) {
      if (((((int)threadIdx.z) * 3) + (((((int)threadIdx.x) * 5) + 4) / 3)) < 24) {
        if (((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) < 68) {
          if (((int)threadIdx.x) < 1) {
            pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 4))] = placeholder[(((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 4) / 3) * 4)) + ((((int)threadIdx.x) * 5) + 1)))];
          }
        }
      }
    }
    placeholder_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 1))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 13))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 2))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 22))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 3))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 31))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 4))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 40))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 5))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 49))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 6))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 58))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 7))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 67))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 8))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2308))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 9))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2317))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 10))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2326))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 11))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2335))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 12))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2344))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 13))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2353))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 14))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2362))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 15))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2371))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 16))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4612))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 17))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4621))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 18))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4630))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 19))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4639))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 20))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4648))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 21))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4657))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 22))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4666))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 23))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4675))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 24))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6916))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 25))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6925))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 26))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6934))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 27))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6943))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 28))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6952))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 29))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6961))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 30))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6970))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 31))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6979))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)))] = placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + (((((int)threadIdx.x) * 5) / 3) * 4)) + ((((int)threadIdx.x) * 5) % 3)) + 1))];
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 1))] = placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 1) / 3) * 4)) + (((((int)threadIdx.x) * 5) + 1) % 3)) + 1))];
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 2))] = placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 2) / 3) * 4)) + (((((int)threadIdx.x) * 5) + 2) % 3)) + 1))];
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 3))] = placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + (((((int)threadIdx.x) * 5) / 3) * 4)) + ((((int)threadIdx.x) * 5) % 3)) + 5))];
    if (((((((int)threadIdx.x) * 5) + 4) / 9) + ((int)threadIdx.z)) < 8) {
      if (((((int)threadIdx.z) * 3) + (((((int)threadIdx.x) * 5) + 4) / 3)) < 24) {
        if (((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) < 68) {
          if (((int)threadIdx.x) < 1) {
            pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 4))] = placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 4) / 3) * 4)) + ((((int)threadIdx.x) * 5) + 1)) + 1))];
          }
        }
      }
    }
    placeholder_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 5))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 1))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 14))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 2))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 23))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 3))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 32))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 4))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 41))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 5))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 50))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 6))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 59))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 7))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 68))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 8))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2309))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 9))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2318))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 10))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2327))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 11))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2336))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 12))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2345))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 13))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2354))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 14))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2363))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 15))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2372))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 16))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4613))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 17))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4622))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 18))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4631))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 19))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4640))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 20))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4649))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 21))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4658))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 22))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4667))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 23))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4676))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 24))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6917))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 25))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6926))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 26))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6935))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 27))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6944))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 28))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6953))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 29))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6962))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 30))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6971))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 31))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6980))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)))] = ((1 <= ((((int)threadIdx.x) * 5) % 3)) ? placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + (((((int)threadIdx.x) * 5) / 3) * 4)) + ((((int)threadIdx.x) * 5) % 3)) + 3))] : 0.000000e+00f);
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 1))] = ((1 <= (((((int)threadIdx.x) * 5) + 1) % 3)) ? placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 1) / 3) * 4)) + (((((int)threadIdx.x) * 5) + 1) % 3)) + 3))] : 0.000000e+00f);
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 2))] = ((1 <= (((((int)threadIdx.x) * 5) + 2) % 3)) ? placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 2) / 3) * 4)) + (((((int)threadIdx.x) * 5) + 2) % 3)) + 3))] : 0.000000e+00f);
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 3))] = ((1 <= ((((int)threadIdx.x) * 5) % 3)) ? placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + (((((int)threadIdx.x) * 5) / 3) * 4)) + ((((int)threadIdx.x) * 5) % 3)) + 7))] : 0.000000e+00f);
    if (((((((int)threadIdx.x) * 5) + 4) / 9) + ((int)threadIdx.z)) < 8) {
      if (((((int)threadIdx.z) * 3) + (((((int)threadIdx.x) * 5) + 4) / 3)) < 24) {
        if (((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) < 68) {
          if (((int)threadIdx.x) < 1) {
            pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 4))] = placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 4) / 3) * 4)) + ((((int)threadIdx.x) * 5) + 1)) + 3))];
          }
        }
      }
    }
    placeholder_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 1))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 15))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 2))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 24))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 3))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 33))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 4))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 42))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 5))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 51))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 6))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 60))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 7))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 69))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 8))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2310))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 9))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2319))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 10))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2328))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 11))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2337))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 12))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2346))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 13))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2355))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 14))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2364))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 15))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2373))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 16))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4614))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 17))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4623))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 18))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4632))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 19))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4641))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 20))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4650))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 21))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4659))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 22))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4668))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 23))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4677))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 24))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6918))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 25))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6927))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 26))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6936))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 27))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6945))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 28))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6954))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 29))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6963))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 30))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6972))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 31))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6981))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)))] = placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + (((((int)threadIdx.x) * 5) / 3) * 4)) + ((((int)threadIdx.x) * 5) % 3)) + 4))];
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 1))] = placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 1) / 3) * 4)) + (((((int)threadIdx.x) * 5) + 1) % 3)) + 4))];
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 2))] = placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 2) / 3) * 4)) + (((((int)threadIdx.x) * 5) + 2) % 3)) + 4))];
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 3))] = placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + (((((int)threadIdx.x) * 5) / 3) * 4)) + ((((int)threadIdx.x) * 5) % 3)) + 8))];
    if (((((((int)threadIdx.x) * 5) + 4) / 9) + ((int)threadIdx.z)) < 8) {
      if (((((int)threadIdx.z) * 3) + (((((int)threadIdx.x) * 5) + 4) / 3)) < 24) {
        if (((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) < 68) {
          if (((int)threadIdx.x) < 1) {
            pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 4))] = placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 4) / 3) * 4)) + ((((int)threadIdx.x) * 5) + 1)) + 4))];
          }
        }
      }
    }
    placeholder_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 7))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 1))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 16))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 2))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 25))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 3))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 34))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 4))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 43))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 5))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 52))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 6))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 61))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 7))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 70))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 8))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2311))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 9))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2320))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 10))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2329))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 11))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2338))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 12))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2347))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 13))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2356))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 14))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2365))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 15))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2374))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 16))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4615))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 17))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4624))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 18))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4633))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 19))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4642))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 20))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4651))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 21))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4660))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 22))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4669))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 23))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4678))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 24))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6919))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 25))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6928))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 26))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6937))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 27))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6946))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 28))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6955))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 29))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6964))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 30))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6973))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 31))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6982))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)))] = placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + (((((int)threadIdx.x) * 5) / 3) * 4)) + ((((int)threadIdx.x) * 5) % 3)) + 5))];
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 1))] = placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 1) / 3) * 4)) + (((((int)threadIdx.x) * 5) + 1) % 3)) + 5))];
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 2))] = placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 2) / 3) * 4)) + (((((int)threadIdx.x) * 5) + 2) % 3)) + 5))];
    pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 3))] = placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + (((((int)threadIdx.x) * 5) / 3) * 4)) + ((((int)threadIdx.x) * 5) % 3)) + 9))];
    if (((((((int)threadIdx.x) * 5) + 4) / 9) + ((int)threadIdx.z)) < 8) {
      if (((((int)threadIdx.z) * 3) + (((((int)threadIdx.x) * 5) + 4) / 3)) < 24) {
        if (((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) < 68) {
          if (((int)threadIdx.x) < 1) {
            pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.x) * 5)) + 4))] = placeholder[((((((rc_outer * 128) + (((int)threadIdx.z) * 16)) + ((((((int)threadIdx.x) * 5) + 4) / 3) * 4)) + ((((int)threadIdx.x) * 5) + 1)) + 5))];
          }
        }
      }
    }
    placeholder_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 8))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 1))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 17))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 2))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 26))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 3))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 35))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 4))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 44))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 5))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 53))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 6))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 62))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 7))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 71))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 8))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2312))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 9))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2321))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 10))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2330))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 11))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2339))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 12))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2348))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 13))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2357))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 14))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2366))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 15))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 2375))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 16))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4616))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 17))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4625))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 18))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4634))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 19))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4643))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 20))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4652))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 21))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4661))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 22))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4670))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 23))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 4679))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 24))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6920))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 25))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6929))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 26))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6938))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 27))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6947))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 28))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6956))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 29))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6965))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 30))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6974))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 31))] = placeholder1[((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 9216)) + (rc_outer * 72)) + 6983))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 27))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 33))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 45))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 51))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 54))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 60))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 69))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
  }
  T_relu[((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)))] = max((compute[(0)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 32))] = max((compute[(2)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 8))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 64))] = max((compute[(4)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 96))] = max((compute[(6)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 24))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 128))] = max((compute[(8)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 160))] = max((compute[(10)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 40))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 192))] = max((compute[(12)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 224))] = max((compute[(14)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 56))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 2))] = max((compute[(1)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 34))] = max((compute[(3)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 8))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 66))] = max((compute[(5)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 98))] = max((compute[(7)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 24))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 130))] = max((compute[(9)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 162))] = max((compute[(11)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 40))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 194))] = max((compute[(13)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 226))] = max((compute[(15)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 56))]), 0.000000e+00f);
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_22_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float compute[32];
  __shared__ float pad_temp_shared[64];
  __shared__ float placeholder_shared[128];
  #pragma unroll
  for (int ff_init = 0; ff_init < 2; ++ff_init) {
    compute[(ff_init)] = 0.000000e+00f;
    compute[((ff_init + 4))] = 0.000000e+00f;
    compute[((ff_init + 8))] = 0.000000e+00f;
    compute[((ff_init + 12))] = 0.000000e+00f;
    compute[((ff_init + 16))] = 0.000000e+00f;
    compute[((ff_init + 20))] = 0.000000e+00f;
    compute[((ff_init + 24))] = 0.000000e+00f;
    compute[((ff_init + 28))] = 0.000000e+00f;
    compute[((ff_init + 2))] = 0.000000e+00f;
    compute[((ff_init + 6))] = 0.000000e+00f;
    compute[((ff_init + 10))] = 0.000000e+00f;
    compute[((ff_init + 14))] = 0.000000e+00f;
    compute[((ff_init + 18))] = 0.000000e+00f;
    compute[((ff_init + 22))] = 0.000000e+00f;
    compute[((ff_init + 26))] = 0.000000e+00f;
    compute[((ff_init + 30))] = 0.000000e+00f;
  }
  for (int rc_outer = 0; rc_outer < 512; ++rc_outer) {
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 16) + ((int)threadIdx.x)))] = placeholder[((((((rc_outer * 512) + ((((int)threadIdx.z) >> 1) * 256)) + (((int)blockIdx.y) * 32)) + ((((int)threadIdx.z) & 1) * 16)) + ((int)threadIdx.x)))];
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = placeholder1[((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 16384)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))];
    }
    __syncthreads();
    #pragma unroll
    for (int rc_inner = 0; rc_inner < 2; ++rc_inner) {
      #pragma unroll
      for (int ff = 0; ff < 2; ++ff) {
        compute[(ff)] = (compute[(ff)] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner))]));
        compute[((ff + 4))] = (compute[((ff + 4))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 16))]));
        compute[((ff + 8))] = (compute[((ff + 8))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 32))]));
        compute[((ff + 12))] = (compute[((ff + 12))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 48))]));
        compute[((ff + 16))] = (compute[((ff + 16))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 64))]));
        compute[((ff + 20))] = (compute[((ff + 20))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 80))]));
        compute[((ff + 24))] = (compute[((ff + 24))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 96))]));
        compute[((ff + 28))] = (compute[((ff + 28))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 112))]));
        compute[((ff + 2))] = (compute[((ff + 2))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner))]));
        compute[((ff + 6))] = (compute[((ff + 6))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 16))]));
        compute[((ff + 10))] = (compute[((ff + 10))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 32))]));
        compute[((ff + 14))] = (compute[((ff + 14))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 48))]));
        compute[((ff + 18))] = (compute[((ff + 18))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 64))]));
        compute[((ff + 22))] = (compute[((ff + 22))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 80))]));
        compute[((ff + 26))] = (compute[((ff + 26))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 96))]));
        compute[((ff + 30))] = (compute[((ff + 30))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 112))]));
      }
    }
  }
  #pragma unroll
  for (int ax1_inner_inner_inner = 0; ax1_inner_inner_inner < 2; ++ax1_inner_inner_inner) {
    T_relu[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)))] = max((compute[(ax1_inner_inner_inner)] + placeholder2[((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 2048))] = max((compute[((ax1_inner_inner_inner + 4))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 8))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 4096))] = max((compute[((ax1_inner_inner_inner + 8))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 16))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 6144))] = max((compute[((ax1_inner_inner_inner + 12))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 24))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 8192))] = max((compute[((ax1_inner_inner_inner + 16))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 32))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 10240))] = max((compute[((ax1_inner_inner_inner + 20))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 40))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 12288))] = max((compute[((ax1_inner_inner_inner + 24))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 48))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 14336))] = max((compute[((ax1_inner_inner_inner + 28))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 56))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 16))] = max((compute[((ax1_inner_inner_inner + 2))] + placeholder2[((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 2064))] = max((compute[((ax1_inner_inner_inner + 6))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 8))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 4112))] = max((compute[((ax1_inner_inner_inner + 10))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 16))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 6160))] = max((compute[((ax1_inner_inner_inner + 14))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 24))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 8208))] = max((compute[((ax1_inner_inner_inner + 18))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 32))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 10256))] = max((compute[((ax1_inner_inner_inner + 22))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 40))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 12304))] = max((compute[((ax1_inner_inner_inner + 26))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 48))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 14352))] = max((compute[((ax1_inner_inner_inner + 30))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 56))]), 0.000000e+00f);
  }
}

extern "C" __global__ void fused_vision_non_max_suppression_kernel7(float* __restrict__ nms_output_concat, float* __restrict__ argsort_gpu_v2, float* __restrict__ fetch_score, float* __restrict__ argsort_gpu_v0) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 490560) {
    nms_output_concat[((((((int)blockIdx.x) * 6144) + (((int)threadIdx.x) * 6)) + 2))] = argsort_gpu_v2[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 4)))];
    nms_output_concat[((((((int)blockIdx.x) * 6144) + (((int)threadIdx.x) * 6)) + 3))] = argsort_gpu_v2[((((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 4)) + 1))];
    nms_output_concat[((((((int)blockIdx.x) * 6144) + (((int)threadIdx.x) * 6)) + 4))] = argsort_gpu_v2[((((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 4)) + 2))];
    nms_output_concat[((((((int)blockIdx.x) * 6144) + (((int)threadIdx.x) * 6)) + 5))] = argsort_gpu_v2[((((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 4)) + 3))];
    nms_output_concat[((((((int)blockIdx.x) * 6144) + (((int)threadIdx.x) * 6)) + 1))] = fetch_score[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))];
    nms_output_concat[(((((int)blockIdx.x) * 6144) + (((int)threadIdx.x) * 6)))] = argsort_gpu_v0[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))];
  }
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_13_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[1122];
  __shared__ float placeholder_shared[18];
  float PaddedInput_shared_local[50];
  float placeholder_shared_local[9];
  float DepthwiseConv2d[8];
  #pragma unroll
  for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 36; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
    if (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 1122) {
      if ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 8) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.y)) < 281) {
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 2) + ((int)threadIdx.z)) < 71) {
          PaddedInput_shared[(((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))] = (((1 <= ((((int)blockIdx.y) * 32) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 561) / 17))) && (1 <= ((((int)blockIdx.x) * 16) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 17)))) ? placeholder[((((((((((int)blockIdx.z) * 131072) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) / 561) * 65536)) + (((int)blockIdx.y) * 8192)) + (((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 561) / 17) * 256)) + (((int)blockIdx.x) * 16)) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 17)) - 257))] : 0.000000e+00f);
        }
      }
    }
  }
  if ((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 18) {
    if (((((int)threadIdx.z) * 4) + ((int)threadIdx.y)) < 5) {
      placeholder_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))] = placeholder1[(((((((int)blockIdx.z) * 18) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))];
    }
  }
  __syncthreads();
  #pragma unroll
  for (int ax2 = 0; ax2 < 5; ++ax2) {
    #pragma unroll
    for (int ax3 = 0; ax3 < 5; ++ax3) {
      PaddedInput_shared_local[(((ax2 * 5) + ax3))] = PaddedInput_shared[((((((((int)threadIdx.z) * 561) + (((int)threadIdx.y) * 68)) + (ax2 * 17)) + (((int)threadIdx.x) * 4)) + ax3))];
      PaddedInput_shared_local[((((ax2 * 5) + ax3) + 25))] = PaddedInput_shared[(((((((((int)threadIdx.z) * 561) + (((int)threadIdx.y) * 68)) + (ax2 * 17)) + (((int)threadIdx.x) * 4)) + ax3) + 272))];
    }
  }
  #pragma unroll
  for (int ax21 = 0; ax21 < 3; ++ax21) {
    #pragma unroll
    for (int ax31 = 0; ax31 < 3; ++ax31) {
      placeholder_shared_local[(((ax21 * 3) + ax31))] = placeholder_shared[((((((int)threadIdx.z) * 9) + (ax21 * 3)) + ax31))];
    }
  }
  #pragma unroll
  for (int i = 0; i < 2; ++i) {
    #pragma unroll
    for (int j = 0; j < 2; ++j) {
      DepthwiseConv2d[(((i * 2) + j))] = 0.000000e+00f;
      DepthwiseConv2d[((((i * 2) + j) + 4))] = 0.000000e+00f;
      #pragma unroll
      for (int di = 0; di < 3; ++di) {
        #pragma unroll
        for (int dj = 0; dj < 3; ++dj) {
          DepthwiseConv2d[(((i * 2) + j))] = (DepthwiseConv2d[(((i * 2) + j))] + (PaddedInput_shared_local[(((((i * 10) + (di * 5)) + (j * 2)) + dj))] * placeholder_shared_local[(((di * 3) + dj))]));
          DepthwiseConv2d[((((i * 2) + j) + 4))] = (DepthwiseConv2d[((((i * 2) + j) + 4))] + (PaddedInput_shared_local[((((((i * 10) + (di * 5)) + (j * 2)) + dj) + 25))] * placeholder_shared_local[(((di * 3) + dj))]));
        }
      }
    }
  }
  #pragma unroll
  for (int ax2_inner_inner_inner = 0; ax2_inner_inner_inner < 2; ++ax2_inner_inner_inner) {
    #pragma unroll
    for (int ax3_inner_inner_inner = 0; ax3_inner_inner_inner < 2; ++ax3_inner_inner_inner) {
      T_relu[(((((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 2048)) + (((int)threadIdx.y) * 256)) + (ax2_inner_inner_inner * 128)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner))] = max((DepthwiseConv2d[(((ax2_inner_inner_inner * 2) + ax3_inner_inner_inner))] + placeholder2[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]), 0.000000e+00f);
      T_relu[((((((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 2048)) + (((int)threadIdx.y) * 256)) + (ax2_inner_inner_inner * 128)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 1024))] = max((DepthwiseConv2d[((((ax2_inner_inner_inner * 2) + ax3_inner_inner_inner) + 4))] + placeholder2[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]), 0.000000e+00f);
    }
  }
}

extern "C" __global__ void fused_nn_softmax_kernel2(float* __restrict__ T_softmax_maxelem, float* __restrict__ T_softmax_exp) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 6132) {
    T_softmax_maxelem[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = 0.000000e+00f;
  }
  for (int k = 0; k < 81; ++k) {
    if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 6132) {
      T_softmax_maxelem[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = (T_softmax_maxelem[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] + T_softmax_exp[((((((int)blockIdx.x) * 82944) + (((int)threadIdx.x) * 81)) + k))]);
    }
  }
}

extern "C" __global__ void fused_vision_get_valid_counts_kernel5(float* __restrict__ get_valid_counts_v0, int* __restrict__ get_valid_counts_v1) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 490560) {
    for (int i = 0; i < 6; ++i) {
      get_valid_counts_v0[((((((int)blockIdx.x) * 6144) + (((int)threadIdx.x) * 6)) + i))] = -1.000000e+00f;
    }
    get_valid_counts_v1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = -1;
  }
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_27_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float compute[8];
  __shared__ float pad_temp_shared[8];
  __shared__ float placeholder_shared[512];
  compute[(0)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {
    __syncthreads();
    pad_temp_shared[(((int)threadIdx.z))] = 0.000000e+00f;
    placeholder_shared[((((int)threadIdx.z) * 64))] = placeholder[((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 1))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 2))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 18))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 3))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 27))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 4))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 36))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 5))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 45))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 6))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 54))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 7))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 63))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 8))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2304))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 9))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2313))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 10))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2322))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 11))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2331))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 12))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2340))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 13))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2349))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 14))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2358))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 15))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2367))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 16))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4608))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 17))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4617))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 18))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4626))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 19))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4635))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 20))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4644))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 21))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4653))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 22))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4662))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 23))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4671))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 24))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6912))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 25))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6921))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 26))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6930))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 27))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6939))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 28))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6948))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 29))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6957))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 30))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6966))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 31))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6975))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 32))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9216))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 33))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9225))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 34))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9234))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 35))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9243))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 36))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9252))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 37))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9261))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 38))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9270))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 39))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9279))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 40))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11520))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 41))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11529))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 42))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11538))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 43))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11547))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 44))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11556))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 45))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11565))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 46))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11574))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 47))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11583))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 48))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13824))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 49))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13833))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 50))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13842))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 51))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13851))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 52))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13860))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 53))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13869))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 54))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13878))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 55))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13887))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 56))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16128))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 57))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16137))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 58))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16146))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 59))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16155))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 60))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16164))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 61))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16173))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 62))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16182))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 63))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16191))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(0)] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    __syncthreads();
    pad_temp_shared[(((int)threadIdx.z))] = 0.000000e+00f;
    placeholder_shared[((((int)threadIdx.z) * 64))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 1))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 1))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 10))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 2))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 19))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 3))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 28))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 4))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 37))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 5))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 46))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 6))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 55))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 7))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 64))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 8))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2305))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 9))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2314))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 10))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2323))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 11))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2332))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 12))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2341))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 13))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2350))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 14))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2359))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 15))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2368))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 16))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4609))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 17))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4618))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 18))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4627))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 19))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4636))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 20))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4645))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 21))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4654))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 22))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4663))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 23))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4672))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 24))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6913))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 25))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6922))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 26))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6931))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 27))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6940))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 28))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6949))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 29))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6958))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 30))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6967))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 31))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6976))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 32))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9217))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 33))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9226))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 34))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9235))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 35))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9244))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 36))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9253))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 37))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9262))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 38))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9271))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 39))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9280))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 40))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11521))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 41))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11530))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 42))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11539))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 43))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11548))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 44))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11557))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 45))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11566))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 46))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11575))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 47))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11584))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 48))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13825))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 49))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13834))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 50))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13843))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 51))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13852))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 52))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13861))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 53))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13870))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 54))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13879))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 55))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13888))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 56))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16129))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 57))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16138))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 58))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16147))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 59))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16156))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 60))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16165))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 61))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16174))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 62))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16183))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 63))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16192))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(0)] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    __syncthreads();
    pad_temp_shared[(((int)threadIdx.z))] = 0.000000e+00f;
    placeholder_shared[((((int)threadIdx.z) * 64))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 1))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 2))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 20))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 3))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 29))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 4))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 38))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 5))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 47))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 6))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 56))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 7))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 65))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 8))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2306))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 9))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2315))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 10))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2324))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 11))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2333))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 12))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2342))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 13))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2351))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 14))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2360))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 15))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2369))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 16))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4610))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 17))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4619))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 18))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4628))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 19))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4637))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 20))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4646))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 21))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4655))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 22))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4664))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 23))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4673))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 24))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6914))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 25))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6923))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 26))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6932))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 27))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6941))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 28))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6950))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 29))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6959))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 30))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6968))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 31))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6977))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 32))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9218))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 33))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9227))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 34))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9236))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 35))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9245))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 36))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9254))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 37))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9263))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 38))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9272))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 39))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9281))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 40))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11522))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 41))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11531))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 42))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11540))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 43))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11549))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 44))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11558))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 45))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11567))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 46))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11576))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 47))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11585))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 48))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13826))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 49))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13835))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 50))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13844))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 51))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13853))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 52))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13862))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 53))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13871))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 54))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13880))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 55))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13889))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 56))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16130))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 57))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16139))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 58))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16148))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 59))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16157))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 60))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16166))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 61))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16175))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 62))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16184))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 63))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16193))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(0)] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    __syncthreads();
    pad_temp_shared[(((int)threadIdx.z))] = 0.000000e+00f;
    placeholder_shared[((((int)threadIdx.z) * 64))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 3))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 1))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 12))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 2))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 21))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 3))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 30))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 4))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 39))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 5))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 48))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 6))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 57))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 7))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 66))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 8))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2307))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 9))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2316))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 10))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2325))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 11))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2334))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 12))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2343))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 13))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2352))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 14))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2361))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 15))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2370))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 16))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4611))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 17))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4620))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 18))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4629))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 19))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4638))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 20))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4647))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 21))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4656))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 22))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4665))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 23))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4674))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 24))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6915))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 25))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6924))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 26))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6933))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 27))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6942))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 28))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6951))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 29))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6960))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 30))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6969))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 31))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6978))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 32))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9219))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 33))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9228))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 34))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9237))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 35))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9246))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 36))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9255))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 37))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9264))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 38))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9273))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 39))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9282))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 40))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11523))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 41))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11532))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 42))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11541))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 43))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11550))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 44))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11559))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 45))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11568))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 46))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11577))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 47))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11586))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 48))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13827))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 49))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13836))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 50))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13845))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 51))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13854))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 52))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13863))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 53))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13872))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 54))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13881))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 55))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13890))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 56))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16131))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 57))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16140))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 58))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16149))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 59))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16158))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 60))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16167))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 61))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16176))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 62))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16185))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 63))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16194))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(0)] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    __syncthreads();
    pad_temp_shared[(((int)threadIdx.z))] = placeholder1[(((rc_outer * 32) + (((int)threadIdx.z) * 4)))];
    placeholder_shared[((((int)threadIdx.z) * 64))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 1))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 2))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 22))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 3))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 31))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 4))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 40))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 5))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 49))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 6))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 58))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 7))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 67))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 8))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2308))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 9))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2317))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 10))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2326))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 11))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2335))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 12))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2344))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 13))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2353))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 14))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2362))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 15))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2371))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 16))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4612))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 17))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4621))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 18))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4630))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 19))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4639))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 20))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4648))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 21))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4657))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 22))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4666))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 23))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4675))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 24))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6916))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 25))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6925))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 26))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6934))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 27))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6943))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 28))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6952))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 29))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6961))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 30))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6970))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 31))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6979))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 32))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9220))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 33))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9229))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 34))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9238))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 35))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9247))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 36))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9256))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 37))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9265))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 38))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9274))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 39))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9283))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 40))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11524))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 41))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11533))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 42))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11542))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 43))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11551))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 44))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11560))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 45))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11569))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 46))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11578))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 47))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11587))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 48))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13828))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 49))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13837))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 50))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13846))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 51))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13855))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 52))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13864))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 53))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13873))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 54))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13882))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 55))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13891))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 56))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16132))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 57))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16141))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 58))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16150))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 59))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16159))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 60))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16168))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 61))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16177))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 62))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16186))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 63))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16195))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(0)] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    __syncthreads();
    pad_temp_shared[(((int)threadIdx.z))] = placeholder1[((((rc_outer * 32) + (((int)threadIdx.z) * 4)) + 1))];
    placeholder_shared[((((int)threadIdx.z) * 64))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 5))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 1))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 14))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 2))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 23))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 3))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 32))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 4))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 41))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 5))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 50))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 6))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 59))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 7))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 68))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 8))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2309))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 9))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2318))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 10))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2327))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 11))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2336))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 12))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2345))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 13))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2354))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 14))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2363))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 15))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2372))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 16))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4613))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 17))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4622))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 18))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4631))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 19))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4640))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 20))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4649))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 21))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4658))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 22))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4667))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 23))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4676))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 24))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6917))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 25))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6926))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 26))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6935))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 27))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6944))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 28))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6953))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 29))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6962))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 30))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6971))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 31))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6980))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 32))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9221))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 33))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9230))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 34))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9239))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 35))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9248))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 36))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9257))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 37))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9266))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 38))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9275))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 39))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9284))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 40))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11525))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 41))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11534))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 42))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11543))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 43))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11552))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 44))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11561))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 45))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11570))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 46))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11579))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 47))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11588))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 48))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13829))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 49))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13838))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 50))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13847))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 51))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13856))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 52))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13865))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 53))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13874))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 54))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13883))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 55))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13892))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 56))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16133))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 57))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16142))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 58))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16151))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 59))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16160))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 60))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16169))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 61))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16178))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 62))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16187))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 63))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16196))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(0)] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    __syncthreads();
    pad_temp_shared[(((int)threadIdx.z))] = 0.000000e+00f;
    placeholder_shared[((((int)threadIdx.z) * 64))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 1))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 15))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 2))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 24))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 3))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 33))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 4))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 42))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 5))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 51))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 6))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 60))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 7))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 69))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 8))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2310))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 9))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2319))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 10))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2328))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 11))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2337))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 12))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2346))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 13))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2355))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 14))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2364))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 15))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2373))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 16))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4614))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 17))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4623))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 18))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4632))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 19))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4641))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 20))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4650))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 21))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4659))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 22))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4668))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 23))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4677))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 24))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6918))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 25))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6927))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 26))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6936))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 27))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6945))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 28))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6954))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 29))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6963))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 30))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6972))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 31))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6981))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 32))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9222))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 33))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9231))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 34))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9240))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 35))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9249))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 36))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9258))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 37))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9267))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 38))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9276))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 39))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9285))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 40))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11526))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 41))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11535))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 42))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11544))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 43))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11553))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 44))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11562))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 45))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11571))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 46))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11580))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 47))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11589))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 48))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13830))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 49))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13839))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 50))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13848))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 51))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13857))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 52))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13866))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 53))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13875))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 54))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13884))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 55))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13893))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 56))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16134))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 57))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16143))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 58))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16152))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 59))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16161))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 60))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16170))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 61))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16179))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 62))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16188))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 63))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16197))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(0)] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    __syncthreads();
    pad_temp_shared[(((int)threadIdx.z))] = placeholder1[((((rc_outer * 32) + (((int)threadIdx.z) * 4)) + 2))];
    placeholder_shared[((((int)threadIdx.z) * 64))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 7))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 1))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 2))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 25))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 3))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 34))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 4))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 43))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 5))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 52))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 6))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 61))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 7))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 70))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 8))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2311))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 9))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2320))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 10))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2329))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 11))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2338))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 12))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2347))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 13))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2356))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 14))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2365))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 15))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2374))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 16))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4615))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 17))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4624))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 18))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4633))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 19))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4642))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 20))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4651))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 21))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4660))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 22))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4669))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 23))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4678))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 24))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6919))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 25))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6928))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 26))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6937))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 27))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6946))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 28))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6955))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 29))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6964))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 30))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6973))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 31))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6982))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 32))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9223))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 33))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9232))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 34))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9241))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 35))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9250))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 36))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9259))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 37))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9268))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 38))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9277))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 39))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9286))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 40))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11527))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 41))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11536))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 42))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11545))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 43))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11554))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 44))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11563))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 45))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11572))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 46))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11581))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 47))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11590))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 48))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13831))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 49))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13840))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 50))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13849))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 51))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13858))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 52))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13867))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 53))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13876))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 54))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13885))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 55))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13894))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 56))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16135))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 57))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16144))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 58))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16153))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 59))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16162))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 60))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16171))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 61))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16180))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 62))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16189))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 63))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16198))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(0)] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    __syncthreads();
    pad_temp_shared[(((int)threadIdx.z))] = placeholder1[((((rc_outer * 32) + (((int)threadIdx.z) * 4)) + 3))];
    placeholder_shared[((((int)threadIdx.z) * 64))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 8))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 1))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 17))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 2))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 26))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 3))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 35))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 4))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 44))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 5))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 53))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 6))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 62))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 7))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 71))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 8))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2312))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 9))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2321))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 10))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2330))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 11))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2339))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 12))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2348))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 13))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2357))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 14))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2366))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 15))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 2375))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 16))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4616))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 17))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4625))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 18))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4634))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 19))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4643))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 20))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4652))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 21))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4661))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 22))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4670))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 23))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 4679))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 24))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6920))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 25))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6929))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 26))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6938))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 27))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6947))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 28))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6956))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 29))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6965))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 30))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6974))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 31))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 6983))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 32))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9224))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 33))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9233))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 34))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9242))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 35))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9251))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 36))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9260))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 37))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9269))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 38))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9278))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 39))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 9287))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 40))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11528))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 41))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11537))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 42))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11546))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 43))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11555))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 44))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11564))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 45))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11573))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 46))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11582))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 47))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 11591))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 48))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13832))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 49))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13841))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 50))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13850))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 51))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13859))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 52))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13868))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 53))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13877))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 54))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13886))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 55))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 13895))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 56))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16136))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 57))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16145))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 58))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16154))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 59))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16163))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 60))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16172))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 61))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16181))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 62))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16190))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + 63))] = placeholder[(((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + (rc_outer * 72)) + 16199))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(0)] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(3)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(4)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(5)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(6)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[(7)] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
  }
  T_relu[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))] = max((compute[(0)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 8))] = max((compute[(1)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 8))]), 0.000000e+00f);
  T_relu[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))] = max((compute[(2)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 24))] = max((compute[(3)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 24))]), 0.000000e+00f);
  T_relu[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))] = max((compute[(4)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 40))] = max((compute[(5)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 40))]), 0.000000e+00f);
  T_relu[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))] = max((compute[(6)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  T_relu[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 56))] = max((compute[(7)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 56))]), 0.000000e+00f);
}

extern "C" __global__ void fused_strided_slice_strided_slice_concatenate_10_kernel0(float* __restrict__ T_concat, float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ placeholder2) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 36792) {
    T_concat[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((2 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 4) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) - 2))] : ((1 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder1[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 72))] : placeholder2[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 73))]));
  }
}

extern "C" __global__ void fused_strided_slice_strided_slice_concatenate_strided_slice_strided_slice_concat_13889001601585811865__kernel0(float* __restrict__ T_concat, float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ placeholder2, float* __restrict__ placeholder3, float* __restrict__ placeholder4, float* __restrict__ placeholder5, float* __restrict__ placeholder6, float* __restrict__ placeholder7, float* __restrict__ placeholder8, float* __restrict__ placeholder9, float* __restrict__ placeholder10, float* __restrict__ placeholder11, float* __restrict__ placeholder12, float* __restrict__ placeholder13, float* __restrict__ placeholder14, float* __restrict__ placeholder15, float* __restrict__ placeholder16, float* __restrict__ placeholder17, float* __restrict__ placeholder18, float* __restrict__ placeholder19) {
  for (int ax0_ax1_fused_ax2_fused_outer = 0; ax0_ax1_fused_ax2_fused_outer < 12; ++ax0_ax1_fused_ax2_fused_outer) {
    if ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) < 2943360) {
      T_concat[((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)))] = ((2906568 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? placeholder[(((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) - 2906568))] : ((2869776 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? placeholder1[(((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) - 2869776))] : ((2832984 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? placeholder2[(((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) - 2832984))] : ((2796192 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? placeholder3[(((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) - 2796192))] : ((2759400 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? placeholder4[(((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) - 2759400))] : ((2722608 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? placeholder5[(((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) - 2722608))] : ((2685816 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? placeholder6[(((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) - 2685816))] : ((2649024 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? placeholder7[(((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) - 2649024))] : ((2612232 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? placeholder8[(((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) - 2612232))] : ((2575440 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? placeholder9[(((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) - 2575440))] : ((2538648 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? placeholder10[(((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) - 2538648))] : ((2501856 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? placeholder11[(((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) - 2501856))] : ((2465064 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? placeholder12[(((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) - 2465064))] : ((2428272 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? placeholder13[(((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) - 2428272))] : ((2391480 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? placeholder14[(((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) - 2391480))] : ((2354688 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? placeholder15[(((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) - 2354688))] : ((2317896 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? placeholder16[(((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) - 2317896))] : ((2281104 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1520738))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 30414659))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 30414658))])) : ((2244312 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1496210))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 29924100))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 29924099))])) : ((2207520 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1471682))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 29433541))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 29433540))])) : ((2170728 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1447154))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 28942982))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 28942981))])) : ((2133936 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1422626))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 28452423))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 28452422))])) : ((2097144 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1398098))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 27961864))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 27961863))])) : ((2060352 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1373570))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 27471305))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 27471304))])) : ((2023560 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1349042))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 26980746))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 26980745))])) : ((1986768 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1324514))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 26490187))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 26490186))])) : ((1949976 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1299986))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 25999628))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 25999627))])) : ((1913184 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1275458))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 25509069))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 25509068))])) : ((1876392 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1250930))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 25018510))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 25018509))])) : ((1839600 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1226402))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 24527951))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 24527950))])) : ((1802808 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1201874))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 24037392))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 24037391))])) : ((1766016 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1177346))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 23546833))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 23546832))])) : ((1729224 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1152818))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 23056274))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 23056273))])) : ((1692432 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1128290))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 22565715))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 22565714))])) : ((1655640 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1103762))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 22075156))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 22075155))])) : ((1618848 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1079234))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 21584597))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 21584596))])) : ((1582056 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1054706))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 21094038))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 21094037))])) : ((1545264 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1030178))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 20603479))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 20603478))])) : ((1508472 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1005650))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 20112920))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 20112919))])) : ((1471680 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 981122))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 19622361))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 19622360))])) : ((1434888 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 956594))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 19131802))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 19131801))])) : ((1398096 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 932066))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 18641243))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 18641242))])) : ((1361304 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 907538))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 18150684))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 18150683))])) : ((1324512 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 883010))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 17660125))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 17660124))])) : ((1287720 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 858482))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 17169566))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 17169565))])) : ((1250928 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 833954))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 16679007))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 16679006))])) : ((1214136 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 809426))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 16188448))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 16188447))])) : ((1177344 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 784898))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 15697889))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 15697888))])) : ((1140552 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 760370))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 15207330))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 15207329))])) : ((1103760 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 735842))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 14716771))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 14716770))])) : ((1066968 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 711314))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 14226212))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 14226211))])) : ((1030176 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 686786))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 13735653))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 13735652))])) : ((993384 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 662258))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 13245094))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 13245093))])) : ((956592 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 637730))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 12754535))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 12754534))])) : ((919800 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 613202))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 12263976))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 12263975))])) : ((883008 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 588674))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 11773417))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 11773416))])) : ((846216 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 564146))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 11282858))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 11282857))])) : ((809424 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 539618))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 10792299))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 10792298))])) : ((772632 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 515090))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 10301740))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 10301739))])) : ((735840 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 490562))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 9811181))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 9811180))])) : ((699048 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 466034))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 9320622))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 9320621))])) : ((662256 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 441506))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 8830063))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 8830062))])) : ((625464 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 416978))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 8339504))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 8339503))])) : ((588672 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 392450))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 7848945))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 7848944))])) : ((551880 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 367922))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 7358386))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 7358385))])) : ((515088 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 343394))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 6867827))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 6867826))])) : ((478296 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 318866))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 6377268))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 6377267))])) : ((441504 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 294338))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 5886709))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 5886708))])) : ((404712 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 269810))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 5396150))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 5396149))])) : ((367920 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 245282))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 4905591))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 4905590))])) : ((331128 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 220754))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 4415032))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 4415031))])) : ((294336 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 196226))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 3924473))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 3924472))])) : ((257544 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 171698))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 3433914))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 3433913))])) : ((220752 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 147170))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 2943355))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 2943354))])) : ((183960 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 122642))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 2452796))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 2452795))])) : ((147168 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 98114))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1962237))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1962236))])) : ((110376 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 73586))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1471678))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1471677))])) : ((73584 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 49058))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 981119))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 981118))])) : ((36792 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 24530))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 490560))] : placeholder19[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 490559))])) : ((2 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder17[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 4) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 2))] : ((1 <= ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) ? placeholder18[((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)) - 1))] : placeholder19[(((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 6) * 80) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 6)))])))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
    }
  }
}

extern "C" __global__ void fused_vision_get_valid_counts_kernel3(int* __restrict__ exclusive_scan_v1, int* __restrict__ exclusive_scan_v0) {
  exclusive_scan_v1[(0)] = exclusive_scan_v0[(490559)];
  exclusive_scan_v0[(490559)] = 0;
}

extern "C" __global__ void fused_nn_conv2d_add_12_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_add, float* __restrict__ placeholder2) {
  float compute[4];
  __shared__ float pad_temp_shared[3];
  __shared__ float placeholder_shared[48];
  compute[(0)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 256; ++rc_outer) {
    __syncthreads();
    if (((int)threadIdx.z) < 3) {
      pad_temp_shared[(((int)threadIdx.z))] = 0.000000e+00f;
    }
    placeholder_shared[((((int)threadIdx.z) * 12))] = placeholder[(((((int)threadIdx.z) * 9216) + (rc_outer * 9)))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 1))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 1))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 2))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 2))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 3))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 2304))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 4))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 2305))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 5))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 2306))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 6))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 4608))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 7))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 4609))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 8))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 4610))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 9))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 6912))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 10))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 6913))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 11))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 6914))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(0)] * placeholder_shared[((((int)threadIdx.z) * 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 24))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 27))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 25))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 28))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 26))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 29))]));
    __syncthreads();
    if (((int)threadIdx.z) < 3) {
      pad_temp_shared[(((int)threadIdx.z))] = (((1 <= ((int)threadIdx.z)) && (((int)threadIdx.z) < 2)) ? placeholder1[(((rc_outer + ((int)threadIdx.z)) - 1))] : 0.000000e+00f);
    }
    placeholder_shared[((((int)threadIdx.z) * 12))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 3))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 1))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 4))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 2))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 5))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 3))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 2307))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 4))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 2308))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 5))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 2309))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 6))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 4611))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 7))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 4612))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 8))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 4613))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 9))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 6915))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 10))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 6916))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 11))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 6917))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(0)] * placeholder_shared[((((int)threadIdx.z) * 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 24))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 27))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 25))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 28))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 26))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 29))]));
    __syncthreads();
    if (((int)threadIdx.z) < 3) {
      pad_temp_shared[(((int)threadIdx.z))] = 0.000000e+00f;
    }
    placeholder_shared[((((int)threadIdx.z) * 12))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 6))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 1))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 7))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 2))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 8))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 3))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 2310))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 4))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 2311))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 5))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 2312))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 6))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 4614))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 7))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 4615))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 8))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 4616))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 9))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 6918))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 10))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 6919))];
    placeholder_shared[(((((int)threadIdx.z) * 12) + 11))] = placeholder[((((((int)threadIdx.z) * 9216) + (rc_outer * 9)) + 6920))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(0)] * placeholder_shared[((((int)threadIdx.z) * 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 24))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(0)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 27))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 25))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(1)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 28))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 26))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(2)] * placeholder_shared[(((((int)threadIdx.z) * 6) + 29))]));
  }
  T_add[((((int)threadIdx.z) * 2))] = (compute[(0)] + placeholder2[((((int)threadIdx.z) * 2))]);
  T_add[(((((int)threadIdx.z) * 2) + 8))] = (compute[(2)] + placeholder2[(((((int)threadIdx.z) * 2) + 8))]);
  T_add[(((((int)threadIdx.z) * 2) + 1))] = (compute[(1)] + placeholder2[(((((int)threadIdx.z) * 2) + 1))]);
  T_add[(((((int)threadIdx.z) * 2) + 9))] = (compute[(3)] + placeholder2[(((((int)threadIdx.z) * 2) + 9))]);
}

extern "C" __global__ void fused_strided_slice_1_kernel0(float* __restrict__ T_strided_slice, float* __restrict__ placeholder) {
  T_strided_slice[(((int)threadIdx.x))] = placeholder[(((int)threadIdx.x))];
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_24_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float compute[8];
  __shared__ float pad_temp_shared[128];
  __shared__ float placeholder_shared[512];
  compute[(0)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 64; ++rc_outer) {
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 8) + ((int)threadIdx.x)))] = placeholder[((((((rc_outer * 512) + ((((int)threadIdx.z) >> 1) * 64)) + (((int)blockIdx.y) * 16)) + ((((int)threadIdx.z) & 1) * 8)) + ((int)threadIdx.x)))];
    placeholder_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 4)))] = placeholder1[((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + ((((int)threadIdx.x) >> 1) * 512)) + (rc_outer * 8)) + ((((int)threadIdx.x) & 1) * 4)))];
    placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 4)) + 1))] = placeholder1[((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 4) + 1) >> 3) * 512)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 4) + 1) & 7)))];
    placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 4)) + 2))] = placeholder1[((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 4) + 2) >> 3) * 512)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 4) + 2) & 7)))];
    placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 4)) + 3))] = placeholder1[((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 2048)) + ((((((int)threadIdx.x) * 4) + 3) >> 3) * 512)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 4) + 3) & 7)))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 32))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 32))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 32))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 32))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 40))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 40))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 40))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 40))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 48))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 48))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 48))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 48))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 64))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 64))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 64))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 64))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 72))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 72))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 72))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 72))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 80))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 80))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 80))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 80))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 88))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 88))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 88))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 88))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 96))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 96))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 96))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 96))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 120))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 120))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 120))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 120))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
  }
  T_relu[(((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 16)) + ((int)threadIdx.x)))] = max((compute[(0)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[((((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 16)) + ((int)threadIdx.x)) + 1024))] = max((compute[(2)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[((((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 16)) + ((int)threadIdx.x)) + 2048))] = max((compute[(4)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[((((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 16)) + ((int)threadIdx.x)) + 3072))] = max((compute[(6)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  T_relu[((((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 16)) + ((int)threadIdx.x)) + 8))] = max((compute[(1)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[((((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 16)) + ((int)threadIdx.x)) + 1032))] = max((compute[(3)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[((((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 16)) + ((int)threadIdx.x)) + 2056))] = max((compute[(5)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[((((((((int)blockIdx.z) * 4096) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 16)) + ((int)threadIdx.x)) + 3080))] = max((compute[(7)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
}

extern "C" __global__ void fused_vision_get_valid_counts_kernel2(int* __restrict__ exclusive_scan_v0, int i) {
  int64_t start[1];
  int64_t middle[1];
  int64_t end[1];
  start[(0)] = (((int64_t)2 << ((int64_t)i)) * ((((int64_t)((int)blockIdx.x)) * (int64_t)1024) + ((int64_t)((int)threadIdx.x))));
  if (start[(0)] < (int64_t)490560) {
    middle[(0)] = ((((int64_t)2 << ((int64_t)i)) >> (int64_t)1) + start[(0)]);
    end[(0)] = min((start[(0)] + ((int64_t)2 << ((int64_t)i))), (int64_t)490560);
    if (middle[(0)] < (int64_t)490560) {
      exclusive_scan_v0[((end[(0)] - (int64_t)1))] = (exclusive_scan_v0[((end[(0)] - (int64_t)1))] + exclusive_scan_v0[((middle[(0)] - (int64_t)1))]);
    }
  }
}

extern "C" __global__ void fused_strided_slice_kernel0(float* __restrict__ T_strided_slice, float* __restrict__ placeholder) {
  T_strided_slice[(((int)threadIdx.x))] = placeholder[((((int)threadIdx.x) * 6))];
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_17_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float compute[32];
  __shared__ float pad_temp_shared[64];
  __shared__ float placeholder_shared[128];
  #pragma unroll
  for (int ff_init = 0; ff_init < 2; ++ff_init) {
    compute[(ff_init)] = 0.000000e+00f;
    compute[((ff_init + 4))] = 0.000000e+00f;
    compute[((ff_init + 8))] = 0.000000e+00f;
    compute[((ff_init + 12))] = 0.000000e+00f;
    compute[((ff_init + 16))] = 0.000000e+00f;
    compute[((ff_init + 20))] = 0.000000e+00f;
    compute[((ff_init + 24))] = 0.000000e+00f;
    compute[((ff_init + 28))] = 0.000000e+00f;
    compute[((ff_init + 2))] = 0.000000e+00f;
    compute[((ff_init + 6))] = 0.000000e+00f;
    compute[((ff_init + 10))] = 0.000000e+00f;
    compute[((ff_init + 14))] = 0.000000e+00f;
    compute[((ff_init + 18))] = 0.000000e+00f;
    compute[((ff_init + 22))] = 0.000000e+00f;
    compute[((ff_init + 26))] = 0.000000e+00f;
    compute[((ff_init + 30))] = 0.000000e+00f;
  }
  for (int rc_outer = 0; rc_outer < 512; ++rc_outer) {
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 16) + ((int)threadIdx.x)))] = placeholder[((((((rc_outer * 512) + ((((int)threadIdx.z) >> 1) * 256)) + (((int)blockIdx.y) * 32)) + ((((int)threadIdx.z) & 1) * 16)) + ((int)threadIdx.x)))];
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = placeholder1[((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 16384)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))];
    }
    __syncthreads();
    #pragma unroll
    for (int rc_inner = 0; rc_inner < 2; ++rc_inner) {
      #pragma unroll
      for (int ff = 0; ff < 2; ++ff) {
        compute[(ff)] = (compute[(ff)] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner))]));
        compute[((ff + 4))] = (compute[((ff + 4))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 16))]));
        compute[((ff + 8))] = (compute[((ff + 8))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 32))]));
        compute[((ff + 12))] = (compute[((ff + 12))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 48))]));
        compute[((ff + 16))] = (compute[((ff + 16))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 64))]));
        compute[((ff + 20))] = (compute[((ff + 20))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 80))]));
        compute[((ff + 24))] = (compute[((ff + 24))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 96))]));
        compute[((ff + 28))] = (compute[((ff + 28))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 112))]));
        compute[((ff + 2))] = (compute[((ff + 2))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner))]));
        compute[((ff + 6))] = (compute[((ff + 6))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 16))]));
        compute[((ff + 10))] = (compute[((ff + 10))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 32))]));
        compute[((ff + 14))] = (compute[((ff + 14))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 48))]));
        compute[((ff + 18))] = (compute[((ff + 18))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 64))]));
        compute[((ff + 22))] = (compute[((ff + 22))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 80))]));
        compute[((ff + 26))] = (compute[((ff + 26))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 96))]));
        compute[((ff + 30))] = (compute[((ff + 30))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 112))]));
      }
    }
  }
  #pragma unroll
  for (int ax1_inner_inner_inner = 0; ax1_inner_inner_inner < 2; ++ax1_inner_inner_inner) {
    T_relu[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)))] = max((compute[(ax1_inner_inner_inner)] + placeholder2[((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 2048))] = max((compute[((ax1_inner_inner_inner + 4))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 8))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 4096))] = max((compute[((ax1_inner_inner_inner + 8))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 16))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 6144))] = max((compute[((ax1_inner_inner_inner + 12))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 24))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 8192))] = max((compute[((ax1_inner_inner_inner + 16))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 32))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 10240))] = max((compute[((ax1_inner_inner_inner + 20))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 40))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 12288))] = max((compute[((ax1_inner_inner_inner + 24))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 48))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 14336))] = max((compute[((ax1_inner_inner_inner + 28))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 56))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 16))] = max((compute[((ax1_inner_inner_inner + 2))] + placeholder2[((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 2064))] = max((compute[((ax1_inner_inner_inner + 6))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 8))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 4112))] = max((compute[((ax1_inner_inner_inner + 10))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 16))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 6160))] = max((compute[((ax1_inner_inner_inner + 14))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 24))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 8208))] = max((compute[((ax1_inner_inner_inner + 18))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 32))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 10256))] = max((compute[((ax1_inner_inner_inner + 22))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 40))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 12304))] = max((compute[((ax1_inner_inner_inner + 26))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 48))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 14352))] = max((compute[((ax1_inner_inner_inner + 30))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 56))]), 0.000000e+00f);
  }
}

extern "C" __global__ void fused_strided_slice_strided_slice_concatenate_15_kernel0(float* __restrict__ T_concat, float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ placeholder2) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 36792) {
    T_concat[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((2 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 4) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) - 2))] : ((1 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder1[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 77))] : placeholder2[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 78))]));
  }
}

extern "C" __global__ void fused_nn_conv2d_add_2_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_add, float* __restrict__ placeholder2) {
  float compute[12];
  __shared__ float pad_temp_shared[180];
  __shared__ float placeholder_shared[162];
  compute[(0)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 1024; ++rc_outer) {
    __syncthreads();
    if ((((((int)threadIdx.z) * 60) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) < 180) {
      if (((((int)threadIdx.y) * 8) + ((int)threadIdx.x)) < 60) {
        pad_temp_shared[((((((int)threadIdx.z) * 60) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)))] = (((((1 <= ((((int)blockIdx.y) * 8) + ((((((int)threadIdx.z) * 60) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) / 18))) && (((((int)blockIdx.y) * 8) + ((((((int)threadIdx.z) * 60) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) / 18)) < 17)) && (1 <= ((((((int)threadIdx.z) * 60) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) % 18))) && (((((((int)threadIdx.z) * 60) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) % 18) < 17)) ? placeholder[((((((rc_outer * 256) + (((int)blockIdx.y) * 128)) + (((((((int)threadIdx.z) * 60) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) / 18) * 16)) + ((((((int)threadIdx.z) * 60) + (((int)threadIdx.y) * 8)) + ((int)threadIdx.x)) % 18)) - 17))] : 0.000000e+00f);
      }
    }
    if (((((int)threadIdx.z) * 6) + (((((int)threadIdx.y) * 7) + ((int)threadIdx.x)) / 9)) < 18) {
      if (((((int)threadIdx.z) * 18) + (((((int)threadIdx.y) * 7) + ((int)threadIdx.x)) / 3)) < 54) {
        if ((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) < 162) {
          if (((((int)threadIdx.y) * 7) + ((int)threadIdx.x)) < 54) {
            if (((int)threadIdx.x) < 7) {
              placeholder_shared[((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)))] = placeholder1[((((((((int)blockIdx.z) * 165888) + (((int)threadIdx.z) * 55296)) + ((((((int)threadIdx.y) * 7) + ((int)threadIdx.x)) / 9) * 9216)) + (rc_outer * 9)) + (((((int)threadIdx.y) * 7) + ((int)threadIdx.x)) % 9)))];
            }
          }
        }
      }
    }
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)))] * placeholder_shared[((((int)threadIdx.z) * 9))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 27))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 54))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 81))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 108))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 135))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[((((int)threadIdx.z) * 9))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 27))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 54))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 81))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 108))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 135))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 28))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 55))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 82))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 109))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 136))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 1))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 28))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 55))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 82))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 109))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 136))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 29))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 56))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 83))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 110))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 137))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 2))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 29))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 56))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 83))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 110))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 137))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 3))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 30))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 57))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 84))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 111))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 138))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 30))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 57))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 84))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 111))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 138))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 4))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 31))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 58))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 85))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 112))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 139))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 31))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 58))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 85))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 112))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 139))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 5))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 32))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 59))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 86))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 113))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 140))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 32))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 59))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 86))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 113))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 140))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 33))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 60))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 87))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 114))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 141))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 6))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 33))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 60))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 87))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 114))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 141))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 7))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 34))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 61))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 88))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 115))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 142))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 7))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 34))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 61))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 88))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 115))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 142))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 8))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 35))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 62))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 89))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 116))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 143))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 39))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 8))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 39))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 35))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 39))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 62))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 39))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 89))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 39))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 116))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 39))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 143))]));
  }
  T_add[((((((((int)blockIdx.z) * 4608) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)))] = (compute[(0)] + placeholder2[(((((int)blockIdx.z) * 18) + ((int)threadIdx.z)))]);
  T_add[(((((((((int)blockIdx.z) * 4608) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 768))] = (compute[(2)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 3))]);
  T_add[(((((((((int)blockIdx.z) * 4608) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1536))] = (compute[(4)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 6))]);
  T_add[(((((((((int)blockIdx.z) * 4608) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 2304))] = (compute[(6)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 9))]);
  T_add[(((((((((int)blockIdx.z) * 4608) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 3072))] = (compute[(8)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 12))]);
  T_add[(((((((((int)blockIdx.z) * 4608) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 3840))] = (compute[(10)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 15))]);
  T_add[(((((((((int)blockIdx.z) * 4608) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1))] = (compute[(1)] + placeholder2[(((((int)blockIdx.z) * 18) + ((int)threadIdx.z)))]);
  T_add[(((((((((int)blockIdx.z) * 4608) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 769))] = (compute[(3)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 3))]);
  T_add[(((((((((int)blockIdx.z) * 4608) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1537))] = (compute[(5)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 6))]);
  T_add[(((((((((int)blockIdx.z) * 4608) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 2305))] = (compute[(7)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 9))]);
  T_add[(((((((((int)blockIdx.z) * 4608) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 3073))] = (compute[(9)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 12))]);
  T_add[(((((((((int)blockIdx.z) * 4608) + (((int)threadIdx.z) * 256)) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 3841))] = (compute[(11)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 15))]);
}

extern "C" __global__ void fused_vision_get_valid_counts_kernel1(int* __restrict__ exclusive_scan_v0, int* __restrict__ get_valid_boxes) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 490560) {
    exclusive_scan_v0[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = get_valid_boxes[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))];
  }
}

extern "C" __global__ void fused_strided_slice_4_kernel0(float* __restrict__ T_strided_slice, float* __restrict__ placeholder) {
  T_strided_slice[(((int)threadIdx.x))] = placeholder[(((((((int)threadIdx.x) >> 2) * 6) + (((int)threadIdx.x) & 3)) + 2))];
}

extern "C" __global__ void fused_nn_conv2d_add_10_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_add, float* __restrict__ placeholder2) {
  float compute[12];
  __shared__ float pad_temp_shared[36];
  __shared__ float placeholder_shared[216];
  compute[(0)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 512; ++rc_outer) {
    __syncthreads();
    if ((((((int)threadIdx.z) * 9) + (((int)threadIdx.y) * 3)) + (((int)threadIdx.x) * 2)) < 36) {
      if (((((int)threadIdx.y) * 3) + (((int)threadIdx.x) * 2)) < 9) {
        pad_temp_shared[((((((int)threadIdx.z) * 9) + (((int)threadIdx.y) * 3)) + (((int)threadIdx.x) * 2)))] = (((((6 <= (((((int)threadIdx.z) * 9) + (((int)threadIdx.y) * 3)) + (((int)threadIdx.x) * 2))) && ((((((int)threadIdx.z) * 9) + (((int)threadIdx.y) * 3)) + (((int)threadIdx.x) * 2)) < 30)) && (1 <= ((((((int)threadIdx.z) * 9) + (((int)threadIdx.y) * 3)) + (((int)threadIdx.x) * 2)) % 6))) && (((((((int)threadIdx.z) * 9) + (((int)threadIdx.y) * 3)) + (((int)threadIdx.x) * 2)) % 6) < 5)) ? placeholder[(((((rc_outer * 16) + (((((((int)threadIdx.z) * 9) + (((int)threadIdx.y) * 3)) + (((int)threadIdx.x) * 2)) / 6) * 4)) + ((((((int)threadIdx.z) * 9) + (((int)threadIdx.y) * 3)) + (((int)threadIdx.x) * 2)) % 6)) - 5))] : 0.000000e+00f);
      }
    }
    if ((((((int)threadIdx.z) * 9) + (((int)threadIdx.y) * 3)) + (((int)threadIdx.x) * 2)) < 35) {
      if (((((int)threadIdx.y) * 3) + (((int)threadIdx.x) * 2)) < 8) {
        if (((int)threadIdx.x) < 1) {
          pad_temp_shared[(((((((int)threadIdx.z) * 9) + (((int)threadIdx.y) * 3)) + (((int)threadIdx.x) * 2)) + 1))] = (((((5 <= (((((int)threadIdx.z) * 9) + (((int)threadIdx.y) * 3)) + (((int)threadIdx.x) * 2))) && ((((((int)threadIdx.z) * 9) + (((int)threadIdx.y) * 3)) + (((int)threadIdx.x) * 2)) < 29)) && (1 <= (((((((int)threadIdx.z) * 9) + (((int)threadIdx.y) * 3)) + (((int)threadIdx.x) * 2)) + 1) % 6))) && ((((((((int)threadIdx.z) * 9) + (((int)threadIdx.y) * 3)) + (((int)threadIdx.x) * 2)) + 1) % 6) < 5)) ? placeholder[(((((rc_outer * 16) + ((((((((int)threadIdx.z) * 9) + (((int)threadIdx.y) * 3)) + (((int)threadIdx.x) * 2)) + 1) / 6) * 4)) + (((((((int)threadIdx.z) * 9) + (((int)threadIdx.y) * 3)) + (((int)threadIdx.x) * 2)) + 1) % 6)) - 5))] : 0.000000e+00f);
        }
      }
    }
    placeholder_shared[((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 14)) + (((int)threadIdx.x) * 7)))] = placeholder1[(((((((int)threadIdx.z) * 27648) + ((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) / 9) * 4608)) + (rc_outer * 9)) + (((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) % 9)))];
    placeholder_shared[(((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 14)) + (((int)threadIdx.x) * 7)) + 1))] = placeholder1[(((((((int)threadIdx.z) * 27648) + (((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 1) / 9) * 4608)) + (rc_outer * 9)) + ((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 1) % 9)))];
    placeholder_shared[(((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 14)) + (((int)threadIdx.x) * 7)) + 2))] = placeholder1[(((((((int)threadIdx.z) * 27648) + (((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 2) / 9) * 4608)) + (rc_outer * 9)) + ((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 2) % 9)))];
    placeholder_shared[(((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 14)) + (((int)threadIdx.x) * 7)) + 3))] = placeholder1[(((((((int)threadIdx.z) * 27648) + (((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 3) / 9) * 4608)) + (rc_outer * 9)) + ((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 3) % 9)))];
    placeholder_shared[(((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 14)) + (((int)threadIdx.x) * 7)) + 4))] = placeholder1[(((((((int)threadIdx.z) * 27648) + (((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 4) / 9) * 4608)) + (rc_outer * 9)) + ((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 4) % 9)))];
    if (((((int)threadIdx.z) * 6) + ((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 5) / 9)) < 24) {
      if (((((int)threadIdx.z) * 18) + ((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 5) / 3)) < 72) {
        if ((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 14)) + (((int)threadIdx.x) * 7)) < 211) {
          if (((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) < 49) {
            placeholder_shared[(((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 14)) + (((int)threadIdx.x) * 7)) + 5))] = placeholder1[(((((((int)threadIdx.z) * 27648) + (((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 5) / 9) * 4608)) + (rc_outer * 9)) + ((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 5) % 9)))];
          }
        }
      }
    }
    if (((((int)threadIdx.z) * 6) + ((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 6) / 9)) < 24) {
      if (((((int)threadIdx.z) * 18) + (((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) / 3)) < 70) {
        if ((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 14)) + (((int)threadIdx.x) * 7)) < 210) {
          if (((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) < 48) {
            placeholder_shared[(((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 14)) + (((int)threadIdx.x) * 7)) + 6))] = placeholder1[(((((((int)threadIdx.z) * 27648) + (((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 6) / 9) * 4608)) + (rc_outer * 9)) + ((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 6) % 9)))];
          }
        }
      }
    }
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)))] * placeholder_shared[((((int)threadIdx.z) * 9))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 36))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 72))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 108))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 144))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 180))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[((((int)threadIdx.z) * 9))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 36))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 72))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 108))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 144))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 180))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 37))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 73))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 109))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 145))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 181))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 1))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 37))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 73))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 109))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 145))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 181))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 38))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 74))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 110))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 146))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 182))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 2))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 38))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 74))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 110))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 146))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 182))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 3))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 39))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 75))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 111))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 147))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 183))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 39))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 75))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 111))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 147))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 183))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 4))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 40))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 76))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 112))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 148))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 184))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 40))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 76))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 112))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 148))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 184))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 5))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 41))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 77))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 113))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 149))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 185))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 41))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 77))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 113))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 149))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 185))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 42))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 78))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 114))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 150))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 186))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 6))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 42))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 78))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 114))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 150))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 186))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 7))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 43))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 79))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 115))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 151))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 187))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 7))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 43))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 79))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 115))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 151))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 187))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 8))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 44))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 80))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 116))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 152))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 188))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 8))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 44))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 80))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 116))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 152))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 188))]));
  }
  T_add[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)))] = (compute[(0)] + placeholder2[(((int)threadIdx.z))]);
  T_add[(((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + 64))] = (compute[(2)] + placeholder2[((((int)threadIdx.z) + 4))]);
  T_add[(((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + 128))] = (compute[(4)] + placeholder2[((((int)threadIdx.z) + 8))]);
  T_add[(((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + 192))] = (compute[(6)] + placeholder2[((((int)threadIdx.z) + 12))]);
  T_add[(((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + 256))] = (compute[(8)] + placeholder2[((((int)threadIdx.z) + 16))]);
  T_add[(((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + 320))] = (compute[(10)] + placeholder2[((((int)threadIdx.z) + 20))]);
  T_add[(((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + 1))] = (compute[(1)] + placeholder2[(((int)threadIdx.z))]);
  T_add[(((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + 65))] = (compute[(3)] + placeholder2[((((int)threadIdx.z) + 4))]);
  T_add[(((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + 129))] = (compute[(5)] + placeholder2[((((int)threadIdx.z) + 8))]);
  T_add[(((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + 193))] = (compute[(7)] + placeholder2[((((int)threadIdx.z) + 12))]);
  T_add[(((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + 257))] = (compute[(9)] + placeholder2[((((int)threadIdx.z) + 16))]);
  T_add[(((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + 321))] = (compute[(11)] + placeholder2[((((int)threadIdx.z) + 20))]);
}

extern "C" __global__ void fused_nn_conv2d_add_11_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_add, float* __restrict__ placeholder2) {
  float compute[4];
  __shared__ float pad_temp_shared[4];
  __shared__ float placeholder_shared[48];
  compute[(0)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 256; ++rc_outer) {
    __syncthreads();
    if ((((int)threadIdx.x) + ((int)threadIdx.z)) < 4) {
      if (((int)threadIdx.x) < 1) {
        pad_temp_shared[((((int)threadIdx.x) + ((int)threadIdx.z)))] = ((((1 <= ((int)blockIdx.y)) && (1 <= (((int)threadIdx.x) + ((int)threadIdx.z)))) && ((((int)threadIdx.x) + ((int)threadIdx.z)) < 3)) ? placeholder[((((((rc_outer * 4) + (((int)blockIdx.y) * 2)) + ((int)threadIdx.x)) + ((int)threadIdx.z)) - 3))] : 0.000000e+00f);
      }
    }
    placeholder_shared[(((((int)threadIdx.z) * 12) + (((int)threadIdx.x) * 6)))] = placeholder1[((((((int)threadIdx.z) * 9216) + (((int)threadIdx.x) * 4608)) + (rc_outer * 9)))];
    placeholder_shared[((((((int)threadIdx.z) * 12) + (((int)threadIdx.x) * 6)) + 1))] = placeholder1[(((((((int)threadIdx.z) * 9216) + (((int)threadIdx.x) * 4608)) + (rc_outer * 9)) + 1))];
    placeholder_shared[((((((int)threadIdx.z) * 12) + (((int)threadIdx.x) * 6)) + 2))] = placeholder1[(((((((int)threadIdx.z) * 9216) + (((int)threadIdx.x) * 4608)) + (rc_outer * 9)) + 2))];
    placeholder_shared[((((((int)threadIdx.z) * 12) + (((int)threadIdx.x) * 6)) + 3))] = placeholder1[(((((((int)threadIdx.z) * 9216) + (((int)threadIdx.x) * 4608)) + (rc_outer * 9)) + 2304))];
    placeholder_shared[((((((int)threadIdx.z) * 12) + (((int)threadIdx.x) * 6)) + 4))] = placeholder1[(((((((int)threadIdx.z) * 9216) + (((int)threadIdx.x) * 4608)) + (rc_outer * 9)) + 2305))];
    placeholder_shared[((((((int)threadIdx.z) * 12) + (((int)threadIdx.x) * 6)) + 5))] = placeholder1[(((((((int)threadIdx.z) * 9216) + (((int)threadIdx.x) * 4608)) + (rc_outer * 9)) + 2306))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) * 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 24))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 27))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 25))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 28))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 26))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 29))]));
    __syncthreads();
    if ((((int)threadIdx.x) + ((int)threadIdx.z)) < 4) {
      if (((int)threadIdx.x) < 1) {
        pad_temp_shared[((((int)threadIdx.x) + ((int)threadIdx.z)))] = (((1 <= (((int)threadIdx.x) + ((int)threadIdx.z))) && ((((int)threadIdx.x) + ((int)threadIdx.z)) < 3)) ? placeholder[((((((rc_outer * 4) + (((int)blockIdx.y) * 2)) + ((int)threadIdx.x)) + ((int)threadIdx.z)) - 1))] : 0.000000e+00f);
      }
    }
    placeholder_shared[(((((int)threadIdx.z) * 12) + (((int)threadIdx.x) * 6)))] = placeholder1[(((((((int)threadIdx.z) * 9216) + (((int)threadIdx.x) * 4608)) + (rc_outer * 9)) + 3))];
    placeholder_shared[((((((int)threadIdx.z) * 12) + (((int)threadIdx.x) * 6)) + 1))] = placeholder1[(((((((int)threadIdx.z) * 9216) + (((int)threadIdx.x) * 4608)) + (rc_outer * 9)) + 4))];
    placeholder_shared[((((((int)threadIdx.z) * 12) + (((int)threadIdx.x) * 6)) + 2))] = placeholder1[(((((((int)threadIdx.z) * 9216) + (((int)threadIdx.x) * 4608)) + (rc_outer * 9)) + 5))];
    placeholder_shared[((((((int)threadIdx.z) * 12) + (((int)threadIdx.x) * 6)) + 3))] = placeholder1[(((((((int)threadIdx.z) * 9216) + (((int)threadIdx.x) * 4608)) + (rc_outer * 9)) + 2307))];
    placeholder_shared[((((((int)threadIdx.z) * 12) + (((int)threadIdx.x) * 6)) + 4))] = placeholder1[(((((((int)threadIdx.z) * 9216) + (((int)threadIdx.x) * 4608)) + (rc_outer * 9)) + 2308))];
    placeholder_shared[((((((int)threadIdx.z) * 12) + (((int)threadIdx.x) * 6)) + 5))] = placeholder1[(((((((int)threadIdx.z) * 9216) + (((int)threadIdx.x) * 4608)) + (rc_outer * 9)) + 2309))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) * 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 24))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 27))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 25))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 28))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 26))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 29))]));
    __syncthreads();
    if ((((int)threadIdx.x) + ((int)threadIdx.z)) < 4) {
      if (((int)threadIdx.x) < 1) {
        pad_temp_shared[((((int)threadIdx.x) + ((int)threadIdx.z)))] = ((((((int)blockIdx.y) < 1) && (1 <= (((int)threadIdx.x) + ((int)threadIdx.z)))) && ((((int)threadIdx.x) + ((int)threadIdx.z)) < 3)) ? placeholder[((((((rc_outer * 4) + (((int)blockIdx.y) * 2)) + ((int)threadIdx.x)) + ((int)threadIdx.z)) + 1))] : 0.000000e+00f);
      }
    }
    placeholder_shared[(((((int)threadIdx.z) * 12) + (((int)threadIdx.x) * 6)))] = placeholder1[(((((((int)threadIdx.z) * 9216) + (((int)threadIdx.x) * 4608)) + (rc_outer * 9)) + 6))];
    placeholder_shared[((((((int)threadIdx.z) * 12) + (((int)threadIdx.x) * 6)) + 1))] = placeholder1[(((((((int)threadIdx.z) * 9216) + (((int)threadIdx.x) * 4608)) + (rc_outer * 9)) + 7))];
    placeholder_shared[((((((int)threadIdx.z) * 12) + (((int)threadIdx.x) * 6)) + 2))] = placeholder1[(((((((int)threadIdx.z) * 9216) + (((int)threadIdx.x) * 4608)) + (rc_outer * 9)) + 8))];
    placeholder_shared[((((((int)threadIdx.z) * 12) + (((int)threadIdx.x) * 6)) + 3))] = placeholder1[(((((((int)threadIdx.z) * 9216) + (((int)threadIdx.x) * 4608)) + (rc_outer * 9)) + 2310))];
    placeholder_shared[((((((int)threadIdx.z) * 12) + (((int)threadIdx.x) * 6)) + 4))] = placeholder1[(((((((int)threadIdx.z) * 9216) + (((int)threadIdx.x) * 4608)) + (rc_outer * 9)) + 2311))];
    placeholder_shared[((((((int)threadIdx.z) * 12) + (((int)threadIdx.x) * 6)) + 5))] = placeholder1[(((((((int)threadIdx.z) * 9216) + (((int)threadIdx.x) * 4608)) + (rc_outer * 9)) + 2312))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) * 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 24))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 27))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 25))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 28))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 26))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 6) + 29))]));
  }
  T_add[((((((int)threadIdx.z) * 8) + (((int)blockIdx.y) * 2)) + ((int)threadIdx.x)))] = (compute[(0)] + placeholder2[((((int)threadIdx.z) * 2))]);
  T_add[(((((((int)threadIdx.z) * 8) + (((int)blockIdx.y) * 2)) + ((int)threadIdx.x)) + 32))] = (compute[(2)] + placeholder2[(((((int)threadIdx.z) * 2) + 8))]);
  T_add[(((((((int)threadIdx.z) * 8) + (((int)blockIdx.y) * 2)) + ((int)threadIdx.x)) + 4))] = (compute[(1)] + placeholder2[(((((int)threadIdx.z) * 2) + 1))]);
  T_add[(((((((int)threadIdx.z) * 8) + (((int)blockIdx.y) * 2)) + ((int)threadIdx.x)) + 36))] = (compute[(3)] + placeholder2[(((((int)threadIdx.z) * 2) + 9))]);
}

extern "C" __global__ void fused_strided_slice_strided_slice_concatenate_3_kernel0(float* __restrict__ T_concat, float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ placeholder2) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 36792) {
    T_concat[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((2 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 4) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) - 2))] : ((1 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder1[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 65))] : placeholder2[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 66))]));
  }
}

extern "C" __global__ void fused_transpose_nn_batch_flatten_transpose_nn_batch_flatten_transpose_nn_batch_f_17714381892351096550__kernel0(float* __restrict__ T_concat, float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ placeholder2, float* __restrict__ placeholder3, float* __restrict__ placeholder4, float* __restrict__ placeholder5, float* __restrict__ placeholder6, float* __restrict__ placeholder7, float* __restrict__ placeholder8, float* __restrict__ placeholder9, float* __restrict__ placeholder10, float* __restrict__ placeholder11) {
  if (((((int)blockIdx.x) * 256) + (((int)threadIdx.x) >> 2)) < 6132) {
    if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 24528) {
      T_concat[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((3 <= (((int)threadIdx.x) & 3)) ? ((((((24512 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528)) ? placeholder[(((((int)threadIdx.x) + 14) & 15))] : ((24448 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528)) ? placeholder1[((((((((int)threadIdx.x) + 14) & 15) * 4) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) & 63) >> 5) * 2)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) >> 4) & 1)))] : ((24064 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528)) ? placeholder2[((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 8) % 24) * 16) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 128) % 384) / 96) * 4)) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 32) % 96) / 24)))] : ((22528 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528)) ? placeholder3[((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 8) % 24) * 64) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 512) % 1536) / 192) * 8)) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 128) % 192) / 24)))] : ((16384 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528)) ? placeholder4[((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 8) % 24) * 256) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 2048) % 6144) / 384) * 16)) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 128) % 384) / 24)))] : placeholder5[((((((((int)threadIdx.x) + 14) & 15) * 1024) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) >> 9) * 32)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) >> 4) & 31)))]))))) * 1.000000e-01f) * ((24512 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder6[((((int)threadIdx.x) & 15))] : ((24448 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder7[(((((((int)threadIdx.x) & 63) >> 5) * 256) + (((int)threadIdx.x) & 31)))] : ((24064 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder8[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 384) / 96) * 384) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 32) % 96) / 24) * 24)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24)))] : ((22528 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder9[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 512) % 1536) / 192) * 768) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 192) / 24) * 24)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24)))] : ((16384 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder10[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2048) % 6144) / 384) * 1536) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 384) / 24) * 24)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24)))] : placeholder11[((((((int)blockIdx.x) * 4096) + ((((int)threadIdx.x) >> 9) * 2048)) + (((int)threadIdx.x) & 511)))])))))) + ((24512 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528)) ? placeholder6[(((((int)threadIdx.x) + 14) & 15))] : ((24448 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528)) ? placeholder7[((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) & 63) >> 5) * 256) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) >> 4) & 1) * 16)) + ((((int)threadIdx.x) + 14) & 15)))] : ((24064 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528)) ? placeholder8[(((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 128) % 384) / 96) * 384) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 32) % 96) / 24) * 24)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 8) % 24)))] : ((22528 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528)) ? placeholder9[(((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 512) % 1536) / 192) * 768) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 128) % 192) / 24) * 24)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 8) % 24)))] : ((16384 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528)) ? placeholder10[(((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 2048) % 6144) / 384) * 1536) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 128) % 384) / 24) * 24)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 8) % 24)))] : placeholder11[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) >> 9) * 2048) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) >> 4) & 31) * 16)) + ((((int)threadIdx.x) + 14) & 15)))])))))) + ((__expf((((24512 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder[((((int)threadIdx.x) & 15))] : ((24448 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder1[((((((int)threadIdx.x) & 15) * 4) + ((((int)threadIdx.x) & 63) >> 4)))] : ((24064 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder2[((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24) * 16) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 384) / 96) * 4)) + (((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 32) % 96) / 24)))] : ((22528 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder3[((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24) * 64) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 512) % 1536) / 192) * 8)) + (((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 192) / 24)))] : ((16384 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder4[((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24) * 256) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2048) % 6144) / 384) * 16)) + (((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 384) / 24)))] : placeholder5[(((((((int)threadIdx.x) & 15) * 1024) + (((int)blockIdx.x) * 64)) + (((int)threadIdx.x) >> 4)))]))))) * 2.000000e-01f)) * ((24512 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder6[((((int)threadIdx.x) & 15))] : ((24448 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder7[(((((((int)threadIdx.x) & 63) >> 5) * 256) + (((int)threadIdx.x) & 31)))] : ((24064 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder8[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 384) / 96) * 384) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 32) % 96) / 24) * 24)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24)))] : ((22528 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder9[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 512) % 1536) / 192) * 768) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 192) / 24) * 24)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24)))] : ((16384 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder10[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2048) % 6144) / 384) * 1536) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 384) / 24) * 24)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24)))] : placeholder11[((((((int)blockIdx.x) * 4096) + ((((int)threadIdx.x) >> 9) * 2048)) + (((int)threadIdx.x) & 511)))])))))) * 5.000000e-01f)) : ((2 <= (((int)threadIdx.x) & 3)) ? ((((((24512 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528)) ? placeholder[(((((int)threadIdx.x) + 14) & 15))] : ((24448 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528)) ? placeholder1[((((((((int)threadIdx.x) + 14) & 15) * 4) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) & 63) >> 5) * 2)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) >> 4) & 1)))] : ((24064 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528)) ? placeholder2[((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 8) % 24) * 16) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 128) % 384) / 96) * 4)) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 32) % 96) / 24)))] : ((22528 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528)) ? placeholder3[((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 8) % 24) * 64) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 512) % 1536) / 192) * 8)) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 128) % 192) / 24)))] : ((16384 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528)) ? placeholder4[((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 8) % 24) * 256) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 2048) % 6144) / 384) * 16)) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 128) % 384) / 24)))] : placeholder5[((((((((int)threadIdx.x) + 14) & 15) * 1024) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) >> 9) * 32)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) >> 4) & 31)))]))))) * 1.000000e-01f) * ((24512 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder6[((((int)threadIdx.x) & 15))] : ((24448 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder7[(((((((int)threadIdx.x) & 63) >> 5) * 256) + (((int)threadIdx.x) & 31)))] : ((24064 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder8[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 384) / 96) * 384) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 32) % 96) / 24) * 24)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24)))] : ((22528 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder9[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 512) % 1536) / 192) * 768) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 192) / 24) * 24)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24)))] : ((16384 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder10[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2048) % 6144) / 384) * 1536) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 384) / 24) * 24)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24)))] : placeholder11[((((((int)blockIdx.x) * 4096) + ((((int)threadIdx.x) >> 9) * 2048)) + (((int)threadIdx.x) & 511)))])))))) + ((24512 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528)) ? placeholder6[(((((int)threadIdx.x) + 14) & 15))] : ((24448 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528)) ? placeholder7[((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) & 63) >> 5) * 256) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) >> 4) & 1) * 16)) + ((((int)threadIdx.x) + 14) & 15)))] : ((24064 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528)) ? placeholder8[(((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 128) % 384) / 96) * 384) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 32) % 96) / 24) * 24)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 8) % 24)))] : ((22528 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528)) ? placeholder9[(((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 512) % 1536) / 192) * 768) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 128) % 192) / 24) * 24)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 8) % 24)))] : ((16384 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528)) ? placeholder10[(((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 2048) % 6144) / 384) * 1536) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 128) % 384) / 24) * 24)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) + 8) % 24)))] : placeholder11[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) >> 9) * 2048) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 24526) % 24528) >> 4) & 31) * 16)) + ((((int)threadIdx.x) + 14) & 15)))])))))) + ((__expf((((24512 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder[((((int)threadIdx.x) & 15))] : ((24448 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder1[((((((int)threadIdx.x) & 15) * 4) + ((((int)threadIdx.x) & 63) >> 4)))] : ((24064 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder2[((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24) * 16) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 384) / 96) * 4)) + (((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 32) % 96) / 24)))] : ((22528 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder3[((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24) * 64) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 512) % 1536) / 192) * 8)) + (((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 192) / 24)))] : ((16384 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder4[((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24) * 256) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2048) % 6144) / 384) * 16)) + (((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 384) / 24)))] : placeholder5[(((((((int)threadIdx.x) & 15) * 1024) + (((int)blockIdx.x) * 64)) + (((int)threadIdx.x) >> 4)))]))))) * 2.000000e-01f)) * ((24512 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder6[((((int)threadIdx.x) & 15))] : ((24448 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder7[(((((((int)threadIdx.x) & 63) >> 5) * 256) + (((int)threadIdx.x) & 31)))] : ((24064 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder8[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 384) / 96) * 384) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 32) % 96) / 24) * 24)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24)))] : ((22528 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder9[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 512) % 1536) / 192) * 768) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 192) / 24) * 24)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24)))] : ((16384 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder10[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2048) % 6144) / 384) * 1536) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 384) / 24) * 24)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24)))] : placeholder11[((((((int)blockIdx.x) * 4096) + ((((int)threadIdx.x) >> 9) * 2048)) + (((int)threadIdx.x) & 511)))])))))) * 5.000000e-01f)) : ((1 <= (((int)threadIdx.x) & 3)) ? ((((((24512 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder[((((int)threadIdx.x) & 15))] : ((24448 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder1[((((((int)threadIdx.x) & 15) * 4) + ((((int)threadIdx.x) & 63) >> 4)))] : ((24064 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder2[((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24) * 16) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 384) / 96) * 4)) + (((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 32) % 96) / 24)))] : ((22528 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder3[((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24) * 64) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 512) % 1536) / 192) * 8)) + (((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 192) / 24)))] : ((16384 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder4[((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24) * 256) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2048) % 6144) / 384) * 16)) + (((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 384) / 24)))] : placeholder5[(((((((int)threadIdx.x) & 15) * 1024) + (((int)blockIdx.x) * 64)) + (((int)threadIdx.x) >> 4)))]))))) * 1.000000e-01f) * ((24512 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder6[(((((int)threadIdx.x) + 2) & 15))] : ((24448 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder7[((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) & 63) >> 5) * 256) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) >> 4) & 1) * 16)) + ((((int)threadIdx.x) + 2) & 15)))] : ((24064 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder8[(((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 128) % 384) / 96) * 384) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 32) % 96) / 24) * 24)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 8) % 24)))] : ((22528 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder9[(((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 512) % 1536) / 192) * 768) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 128) % 192) / 24) * 24)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 8) % 24)))] : ((16384 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder10[(((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 2048) % 6144) / 384) * 1536) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 128) % 384) / 24) * 24)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 8) % 24)))] : placeholder11[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) >> 9) * 2048) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) >> 4) & 31) * 16)) + ((((int)threadIdx.x) + 2) & 15)))])))))) + ((24512 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder6[((((int)threadIdx.x) & 15))] : ((24448 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder7[(((((((int)threadIdx.x) & 63) >> 5) * 256) + (((int)threadIdx.x) & 31)))] : ((24064 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder8[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 384) / 96) * 384) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 32) % 96) / 24) * 24)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24)))] : ((22528 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder9[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 512) % 1536) / 192) * 768) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 192) / 24) * 24)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24)))] : ((16384 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder10[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2048) % 6144) / 384) * 1536) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 384) / 24) * 24)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24)))] : placeholder11[((((((int)blockIdx.x) * 4096) + ((((int)threadIdx.x) >> 9) * 2048)) + (((int)threadIdx.x) & 511)))])))))) - ((__expf((((24512 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder[(((((int)threadIdx.x) + 2) & 15))] : ((24448 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder1[((((((((int)threadIdx.x) + 2) & 15) * 4) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) & 63) >> 5) * 2)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) >> 4) & 1)))] : ((24064 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder2[((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 8) % 24) * 16) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 128) % 384) / 96) * 4)) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 32) % 96) / 24)))] : ((22528 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder3[((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 8) % 24) * 64) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 512) % 1536) / 192) * 8)) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 128) % 192) / 24)))] : ((16384 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder4[((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 8) % 24) * 256) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 2048) % 6144) / 384) * 16)) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 128) % 384) / 24)))] : placeholder5[((((((((int)threadIdx.x) + 2) & 15) * 1024) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) >> 9) * 32)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) >> 4) & 31)))]))))) * 2.000000e-01f)) * ((24512 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder6[(((((int)threadIdx.x) + 2) & 15))] : ((24448 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder7[((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) & 63) >> 5) * 256) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) >> 4) & 1) * 16)) + ((((int)threadIdx.x) + 2) & 15)))] : ((24064 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder8[(((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 128) % 384) / 96) * 384) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 32) % 96) / 24) * 24)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 8) % 24)))] : ((22528 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder9[(((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 512) % 1536) / 192) * 768) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 128) % 192) / 24) * 24)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 8) % 24)))] : ((16384 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder10[(((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 2048) % 6144) / 384) * 1536) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 128) % 384) / 24) * 24)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 8) % 24)))] : placeholder11[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) >> 9) * 2048) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) >> 4) & 31) * 16)) + ((((int)threadIdx.x) + 2) & 15)))])))))) * 5.000000e-01f)) : ((((((24512 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder[((((int)threadIdx.x) & 15))] : ((24448 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder1[((((((int)threadIdx.x) & 15) * 4) + ((((int)threadIdx.x) & 63) >> 4)))] : ((24064 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder2[((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24) * 16) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 384) / 96) * 4)) + (((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 32) % 96) / 24)))] : ((22528 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder3[((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24) * 64) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 512) % 1536) / 192) * 8)) + (((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 192) / 24)))] : ((16384 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder4[((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24) * 256) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2048) % 6144) / 384) * 16)) + (((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 384) / 24)))] : placeholder5[(((((((int)threadIdx.x) & 15) * 1024) + (((int)blockIdx.x) * 64)) + (((int)threadIdx.x) >> 4)))]))))) * 1.000000e-01f) * ((24512 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder6[(((((int)threadIdx.x) + 2) & 15))] : ((24448 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder7[((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) & 63) >> 5) * 256) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) >> 4) & 1) * 16)) + ((((int)threadIdx.x) + 2) & 15)))] : ((24064 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder8[(((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 128) % 384) / 96) * 384) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 32) % 96) / 24) * 24)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 8) % 24)))] : ((22528 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder9[(((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 512) % 1536) / 192) * 768) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 128) % 192) / 24) * 24)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 8) % 24)))] : ((16384 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder10[(((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 2048) % 6144) / 384) * 1536) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 128) % 384) / 24) * 24)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 8) % 24)))] : placeholder11[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) >> 9) * 2048) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) >> 4) & 31) * 16)) + ((((int)threadIdx.x) + 2) & 15)))])))))) + ((24512 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder6[((((int)threadIdx.x) & 15))] : ((24448 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder7[(((((((int)threadIdx.x) & 63) >> 5) * 256) + (((int)threadIdx.x) & 31)))] : ((24064 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder8[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 384) / 96) * 384) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 32) % 96) / 24) * 24)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24)))] : ((22528 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder9[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 512) % 1536) / 192) * 768) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 192) / 24) * 24)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24)))] : ((16384 <= ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x))) ? placeholder10[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2048) % 6144) / 384) * 1536) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 128) % 384) / 24) * 24)) + ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 8) % 24)))] : placeholder11[((((((int)blockIdx.x) * 4096) + ((((int)threadIdx.x) >> 9) * 2048)) + (((int)threadIdx.x) & 511)))])))))) - ((__expf((((24512 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder[(((((int)threadIdx.x) + 2) & 15))] : ((24448 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder1[((((((((int)threadIdx.x) + 2) & 15) * 4) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) & 63) >> 5) * 2)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) >> 4) & 1)))] : ((24064 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder2[((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 8) % 24) * 16) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 128) % 384) / 96) * 4)) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 32) % 96) / 24)))] : ((22528 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder3[((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 8) % 24) * 64) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 512) % 1536) / 192) * 8)) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 128) % 192) / 24)))] : ((16384 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder4[((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 8) % 24) * 256) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 2048) % 6144) / 384) * 16)) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 128) % 384) / 24)))] : placeholder5[((((((((int)threadIdx.x) + 2) & 15) * 1024) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) >> 9) * 32)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) >> 4) & 31)))]))))) * 2.000000e-01f)) * ((24512 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder6[(((((int)threadIdx.x) + 2) & 15))] : ((24448 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder7[((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) & 63) >> 5) * 256) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) >> 4) & 1) * 16)) + ((((int)threadIdx.x) + 2) & 15)))] : ((24064 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder8[(((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 128) % 384) / 96) * 384) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 32) % 96) / 24) * 24)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 8) % 24)))] : ((22528 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder9[(((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 512) % 1536) / 192) * 768) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 128) % 192) / 24) * 24)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 8) % 24)))] : ((16384 <= ((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528)) ? placeholder10[(((((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 2048) % 6144) / 384) * 1536) + ((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 128) % 384) / 24) * 24)) + ((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) + 8) % 24)))] : placeholder11[(((((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) >> 9) * 2048) + (((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) + 2) % 24528) >> 4) & 31) * 16)) + ((((int)threadIdx.x) + 2) & 15)))])))))) * 5.000000e-01f)))));
    }
  }
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_3_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[360];
  __shared__ float placeholder_shared[18];
  float PaddedInput_shared_local[32];
  float placeholder_shared_local[9];
  float DepthwiseConv2d[8];
  #pragma unroll
  for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 12; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
    if (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 360) {
      if ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 8) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.y)) < 90) {
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 2) + ((int)threadIdx.z)) < 23) {
          PaddedInput_shared[(((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))] = (((((1 <= ((((int)blockIdx.y) * 16) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 180) / 10))) && (((((int)blockIdx.y) * 16) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 180) / 10)) < 33)) && (1 <= ((((int)blockIdx.x) * 8) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 10)))) && (((((int)blockIdx.x) * 8) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 10)) < 33)) ? placeholder[((((((((((int)blockIdx.z) * 2048) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) / 180) * 1024)) + (((int)blockIdx.y) * 512)) + (((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 180) / 10) * 32)) + (((int)blockIdx.x) * 8)) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 10)) - 33))] : 0.000000e+00f);
        }
      }
    }
  }
  if ((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 18) {
    if (((((int)threadIdx.z) * 4) + ((int)threadIdx.y)) < 5) {
      placeholder_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))] = placeholder1[(((((((int)blockIdx.z) * 18) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))];
    }
  }
  __syncthreads();
  #pragma unroll
  for (int ax2 = 0; ax2 < 4; ++ax2) {
    #pragma unroll
    for (int ax3 = 0; ax3 < 4; ++ax3) {
      PaddedInput_shared_local[(((ax2 * 4) + ax3))] = PaddedInput_shared[((((((((int)threadIdx.z) * 180) + (((int)threadIdx.y) * 20)) + (ax2 * 10)) + (((int)threadIdx.x) * 2)) + ax3))];
      PaddedInput_shared_local[((((ax2 * 4) + ax3) + 16))] = PaddedInput_shared[(((((((((int)threadIdx.z) * 180) + (((int)threadIdx.y) * 20)) + (ax2 * 10)) + (((int)threadIdx.x) * 2)) + ax3) + 80))];
    }
  }
  #pragma unroll
  for (int ax21 = 0; ax21 < 3; ++ax21) {
    #pragma unroll
    for (int ax31 = 0; ax31 < 3; ++ax31) {
      placeholder_shared_local[(((ax21 * 3) + ax31))] = placeholder_shared[((((((int)threadIdx.z) * 9) + (ax21 * 3)) + ax31))];
    }
  }
  #pragma unroll
  for (int i = 0; i < 2; ++i) {
    #pragma unroll
    for (int j = 0; j < 2; ++j) {
      DepthwiseConv2d[(((i * 2) + j))] = 0.000000e+00f;
      DepthwiseConv2d[((((i * 2) + j) + 4))] = 0.000000e+00f;
      #pragma unroll
      for (int di = 0; di < 3; ++di) {
        #pragma unroll
        for (int dj = 0; dj < 3; ++dj) {
          DepthwiseConv2d[(((i * 2) + j))] = (DepthwiseConv2d[(((i * 2) + j))] + (PaddedInput_shared_local[(((((i * 4) + (di * 4)) + j) + dj))] * placeholder_shared_local[(((di * 3) + dj))]));
          DepthwiseConv2d[((((i * 2) + j) + 4))] = (DepthwiseConv2d[((((i * 2) + j) + 4))] + (PaddedInput_shared_local[((((((i * 4) + (di * 4)) + j) + dj) + 16))] * placeholder_shared_local[(((di * 3) + dj))]));
        }
      }
    }
  }
  #pragma unroll
  for (int ax2_inner_inner_inner = 0; ax2_inner_inner_inner < 2; ++ax2_inner_inner_inner) {
    #pragma unroll
    for (int ax3_inner_inner_inner = 0; ax3_inner_inner_inner < 2; ++ax3_inner_inner_inner) {
      T_relu[(((((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 512)) + (((int)threadIdx.y) * 64)) + (ax2_inner_inner_inner * 32)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner))] = max((DepthwiseConv2d[(((ax2_inner_inner_inner * 2) + ax3_inner_inner_inner))] + placeholder2[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]), 0.000000e+00f);
      T_relu[((((((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 512)) + (((int)threadIdx.y) * 64)) + (ax2_inner_inner_inner * 32)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 256))] = max((DepthwiseConv2d[((((ax2_inner_inner_inner * 2) + ax3_inner_inner_inner) + 4))] + placeholder2[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]), 0.000000e+00f);
    }
  }
}

extern "C" __global__ void fused_strided_slice_strided_slice_concatenate_4_kernel0(float* __restrict__ T_concat, float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ placeholder2) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 36792) {
    T_concat[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((2 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 4) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) - 2))] : ((1 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder1[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 66))] : placeholder2[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 67))]));
  }
}

extern "C" __global__ void fused_strided_slice_strided_slice_concatenate_16_kernel0(float* __restrict__ T_concat, float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ placeholder2) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 36792) {
    T_concat[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((2 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 4) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) - 2))] : ((1 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder1[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 78))] : placeholder2[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 79))]));
  }
}

extern "C" __global__ void fused_greater_kernel0(signed char* __restrict__ T_greater, float* __restrict__ placeholder) {
  for (int ax0_ax1_fused_ax2_fused_outer = 0; ax0_ax1_fused_ax2_fused_outer < 2; ++ax0_ax1_fused_ax2_fused_outer) {
    if ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) < 490560) {
      T_greater[((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)))] = ((signed char)(1.000000e-02f < placeholder[((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)))]));
    }
  }
}

extern "C" __global__ void fused_nn_conv2d_add_9_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_add, float* __restrict__ placeholder2) {
  float compute[12];
  __shared__ float pad_temp_shared[100];
  __shared__ float placeholder_shared[216];
  compute[(0)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 512; ++rc_outer) {
    __syncthreads();
    if ((((((int)threadIdx.z) * 25) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 100) {
      if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 25) {
        pad_temp_shared[((((((int)threadIdx.z) * 25) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))] = (((((10 <= (((((int)threadIdx.z) * 25) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x))) && ((((((int)threadIdx.z) * 25) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 90)) && (1 <= ((((((int)threadIdx.z) * 25) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 10))) && (((((((int)threadIdx.z) * 25) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 10) < 9)) ? placeholder[(((((rc_outer * 64) + (((((((int)threadIdx.z) * 25) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) / 10) * 8)) + ((((((int)threadIdx.z) * 25) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 10)) - 9))] : 0.000000e+00f);
      }
    }
    if (((((int)threadIdx.z) * 6) + (((((int)threadIdx.y) * 7) + (((int)threadIdx.x) * 2)) / 9)) < 24) {
      if (((((int)threadIdx.z) * 18) + (((((int)threadIdx.y) * 7) + (((int)threadIdx.x) * 2)) / 3)) < 72) {
        if ((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 7)) + (((int)threadIdx.x) * 2)) < 216) {
          if (((((int)threadIdx.y) * 7) + (((int)threadIdx.x) * 2)) < 54) {
            placeholder_shared[((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 7)) + (((int)threadIdx.x) * 2)))] = placeholder1[(((((((int)threadIdx.z) * 27648) + ((((((int)threadIdx.y) * 7) + (((int)threadIdx.x) * 2)) / 9) * 4608)) + (rc_outer * 9)) + (((((int)threadIdx.y) * 7) + (((int)threadIdx.x) * 2)) % 9)))];
          }
        }
      }
    }
    if (((((int)threadIdx.z) * 6) + ((((((int)threadIdx.y) * 7) + (((int)threadIdx.x) * 2)) + 1) / 9)) < 24) {
      if (((((int)threadIdx.z) * 18) + ((((((int)threadIdx.y) * 7) + (((int)threadIdx.x) * 2)) + 1) / 3)) < 72) {
        if ((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 7)) + (((int)threadIdx.x) * 2)) < 215) {
          if (((((int)threadIdx.y) * 7) + (((int)threadIdx.x) * 2)) < 53) {
            if (((int)threadIdx.x) < 3) {
              placeholder_shared[(((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 7)) + (((int)threadIdx.x) * 2)) + 1))] = placeholder1[(((((((int)threadIdx.z) * 27648) + (((((((int)threadIdx.y) * 7) + (((int)threadIdx.x) * 2)) + 1) / 9) * 4608)) + (rc_outer * 9)) + ((((((int)threadIdx.y) * 7) + (((int)threadIdx.x) * 2)) + 1) % 9)))];
            }
          }
        }
      }
    }
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)))] * placeholder_shared[((((int)threadIdx.z) * 9))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 36))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 72))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 108))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 144))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 180))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[((((int)threadIdx.z) * 9))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 36))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 72))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 108))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 144))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 180))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 37))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 73))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 109))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 145))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 181))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 1))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 37))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 73))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 109))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 145))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 181))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 38))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 74))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 110))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 146))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 182))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 2))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 38))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 74))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 110))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 146))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 182))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 3))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 39))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 75))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 111))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 147))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 183))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 39))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 75))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 111))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 147))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 183))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 4))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 40))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 76))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 112))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 148))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 184))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 40))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 76))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 112))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 148))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 184))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 5))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 41))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 77))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 113))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 149))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 185))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 41))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 77))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 113))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 149))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 185))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 42))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 78))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 114))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 150))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 186))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 6))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 42))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 78))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 114))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 150))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 186))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 7))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 43))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 79))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 115))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 151))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 187))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 7))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 43))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 79))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 115))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 151))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 187))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 8))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 44))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 80))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 116))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 152))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 188))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 23))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 8))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 23))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 44))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 23))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 80))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 23))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 116))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 23))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 152))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 10) + (((int)threadIdx.x) * 2)) + 23))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 188))]));
  }
  T_add[((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)))] = (compute[(0)] + placeholder2[(((int)threadIdx.z))]);
  T_add[(((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 256))] = (compute[(2)] + placeholder2[((((int)threadIdx.z) + 4))]);
  T_add[(((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 512))] = (compute[(4)] + placeholder2[((((int)threadIdx.z) + 8))]);
  T_add[(((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 768))] = (compute[(6)] + placeholder2[((((int)threadIdx.z) + 12))]);
  T_add[(((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1024))] = (compute[(8)] + placeholder2[((((int)threadIdx.z) + 16))]);
  T_add[(((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1280))] = (compute[(10)] + placeholder2[((((int)threadIdx.z) + 20))]);
  T_add[(((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1))] = (compute[(1)] + placeholder2[(((int)threadIdx.z))]);
  T_add[(((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 257))] = (compute[(3)] + placeholder2[((((int)threadIdx.z) + 4))]);
  T_add[(((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 513))] = (compute[(5)] + placeholder2[((((int)threadIdx.z) + 8))]);
  T_add[(((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 769))] = (compute[(7)] + placeholder2[((((int)threadIdx.z) + 12))]);
  T_add[(((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1025))] = (compute[(9)] + placeholder2[((((int)threadIdx.z) + 16))]);
  T_add[(((((((int)threadIdx.z) * 64) + (((int)threadIdx.y) * 8)) + (((int)threadIdx.x) * 2)) + 1281))] = (compute[(11)] + placeholder2[((((int)threadIdx.z) + 20))]);
}

extern "C" __global__ void fused_nn_conv2d_add_1_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_add, float* __restrict__ placeholder2) {
  float compute[6];
  __shared__ float pad_temp_shared[180];
  __shared__ float placeholder_shared[108];
  compute[(0)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 512; ++rc_outer) {
    __syncthreads();
    if ((((((int)threadIdx.z) * 45) + (((int)threadIdx.y) * 6)) + ((int)threadIdx.x)) < 180) {
      if (((((int)threadIdx.y) * 6) + ((int)threadIdx.x)) < 45) {
        if (((int)threadIdx.x) < 6) {
          pad_temp_shared[((((((int)threadIdx.z) * 45) + (((int)threadIdx.y) * 6)) + ((int)threadIdx.x)))] = (((((1 <= ((((int)blockIdx.y) * 8) + ((((((int)threadIdx.z) * 45) + (((int)threadIdx.y) * 6)) + ((int)threadIdx.x)) / 18))) && (((((int)blockIdx.y) * 8) + ((((((int)threadIdx.z) * 45) + (((int)threadIdx.y) * 6)) + ((int)threadIdx.x)) / 18)) < 33)) && (1 <= ((((int)blockIdx.x) * 16) + ((((((int)threadIdx.z) * 45) + (((int)threadIdx.y) * 6)) + ((int)threadIdx.x)) % 18)))) && (((((int)blockIdx.x) * 16) + ((((((int)threadIdx.z) * 45) + (((int)threadIdx.y) * 6)) + ((int)threadIdx.x)) % 18)) < 33)) ? placeholder[(((((((rc_outer * 1024) + (((int)blockIdx.y) * 256)) + (((((((int)threadIdx.z) * 45) + (((int)threadIdx.y) * 6)) + ((int)threadIdx.x)) / 18) * 32)) + (((int)blockIdx.x) * 16)) + ((((((int)threadIdx.z) * 45) + (((int)threadIdx.y) * 6)) + ((int)threadIdx.x)) % 18)) - 33))] : 0.000000e+00f);
        }
      }
    }
    if (((((int)threadIdx.z) * 3) + (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) / 9)) < 12) {
      if (((((int)threadIdx.z) * 9) + (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) / 3)) < 36) {
        if ((((((int)threadIdx.z) * 27) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 108) {
          if (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) < 27) {
            if (((int)threadIdx.x) < 4) {
              placeholder_shared[((((((int)threadIdx.z) * 27) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))] = placeholder1[((((((((int)blockIdx.z) * 55296) + (((int)threadIdx.z) * 13824)) + ((((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) / 9) * 4608)) + (rc_outer * 9)) + (((((int)threadIdx.y) * 4) + ((int)threadIdx.x)) % 9)))];
            }
          }
        }
      }
    }
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)))] * placeholder_shared[((((int)threadIdx.z) * 9))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 36))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 72))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[((((int)threadIdx.z) * 9))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 36))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 72))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 37))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 73))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 1))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 37))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 73))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 38))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 74))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 2))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 38))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 74))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 3))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 39))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 75))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 39))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 75))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 4))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 40))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 76))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 40))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 76))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 5))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 41))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 77))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 41))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 77))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 42))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 78))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 6))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 42))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 78))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 7))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 43))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 79))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 7))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 43))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 79))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 8))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 44))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 80))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 39))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 8))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 39))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 44))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 39))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 80))]));
  }
  T_add[(((((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 256)) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)))] = (compute[(0)] + placeholder2[(((((int)blockIdx.z) * 12) + ((int)threadIdx.z)))]);
  T_add[((((((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 256)) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 4096))] = (compute[(2)] + placeholder2[((((((int)blockIdx.z) * 12) + ((int)threadIdx.z)) + 4))]);
  T_add[((((((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 256)) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 8192))] = (compute[(4)] + placeholder2[((((((int)blockIdx.z) * 12) + ((int)threadIdx.z)) + 8))]);
  T_add[((((((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 256)) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 1))] = (compute[(1)] + placeholder2[(((((int)blockIdx.z) * 12) + ((int)threadIdx.z)))]);
  T_add[((((((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 256)) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 4097))] = (compute[(3)] + placeholder2[((((((int)blockIdx.z) * 12) + ((int)threadIdx.z)) + 4))]);
  T_add[((((((((((int)blockIdx.z) * 12288) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 256)) + (((int)threadIdx.y) * 32)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 8193))] = (compute[(5)] + placeholder2[((((((int)blockIdx.z) * 12) + ((int)threadIdx.z)) + 8))]);
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_14_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float compute[32];
  __shared__ float pad_temp_shared[64];
  __shared__ float placeholder_shared[128];
  #pragma unroll
  for (int ff_init = 0; ff_init < 2; ++ff_init) {
    compute[(ff_init)] = 0.000000e+00f;
    compute[((ff_init + 4))] = 0.000000e+00f;
    compute[((ff_init + 8))] = 0.000000e+00f;
    compute[((ff_init + 12))] = 0.000000e+00f;
    compute[((ff_init + 16))] = 0.000000e+00f;
    compute[((ff_init + 20))] = 0.000000e+00f;
    compute[((ff_init + 24))] = 0.000000e+00f;
    compute[((ff_init + 28))] = 0.000000e+00f;
    compute[((ff_init + 2))] = 0.000000e+00f;
    compute[((ff_init + 6))] = 0.000000e+00f;
    compute[((ff_init + 10))] = 0.000000e+00f;
    compute[((ff_init + 14))] = 0.000000e+00f;
    compute[((ff_init + 18))] = 0.000000e+00f;
    compute[((ff_init + 22))] = 0.000000e+00f;
    compute[((ff_init + 26))] = 0.000000e+00f;
    compute[((ff_init + 30))] = 0.000000e+00f;
  }
  for (int rc_outer = 0; rc_outer < 16; ++rc_outer) {
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 16) + ((int)threadIdx.x)))] = placeholder[(((((((rc_outer * 131072) + ((((int)threadIdx.z) >> 1) * 65536)) + (((int)blockIdx.y) * 512)) + ((((int)threadIdx.z) & 1) * 256)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)))];
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = placeholder1[(((((((int)threadIdx.z) * 512) + (((int)threadIdx.x) * 32)) + (rc_outer * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))];
    }
    __syncthreads();
    #pragma unroll
    for (int rc_inner = 0; rc_inner < 2; ++rc_inner) {
      #pragma unroll
      for (int ff = 0; ff < 2; ++ff) {
        compute[(ff)] = (compute[(ff)] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner))]));
        compute[((ff + 4))] = (compute[((ff + 4))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 16))]));
        compute[((ff + 8))] = (compute[((ff + 8))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 32))]));
        compute[((ff + 12))] = (compute[((ff + 12))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 48))]));
        compute[((ff + 16))] = (compute[((ff + 16))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 64))]));
        compute[((ff + 20))] = (compute[((ff + 20))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 80))]));
        compute[((ff + 24))] = (compute[((ff + 24))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 96))]));
        compute[((ff + 28))] = (compute[((ff + 28))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 112))]));
        compute[((ff + 2))] = (compute[((ff + 2))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner))]));
        compute[((ff + 6))] = (compute[((ff + 6))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 16))]));
        compute[((ff + 10))] = (compute[((ff + 10))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 32))]));
        compute[((ff + 14))] = (compute[((ff + 14))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 48))]));
        compute[((ff + 18))] = (compute[((ff + 18))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 64))]));
        compute[((ff + 22))] = (compute[((ff + 22))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 80))]));
        compute[((ff + 26))] = (compute[((ff + 26))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 96))]));
        compute[((ff + 30))] = (compute[((ff + 30))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 112))]));
      }
    }
  }
  #pragma unroll
  for (int ax1_inner_inner_inner = 0; ax1_inner_inner_inner < 2; ++ax1_inner_inner_inner) {
    T_relu[((((((((int)threadIdx.z) * 131072) + (ax1_inner_inner_inner * 65536)) + (((int)blockIdx.y) * 512)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)))] = max((compute[(ax1_inner_inner_inner)] + placeholder2[(((((int)threadIdx.z) * 2) + ax1_inner_inner_inner))]), 0.000000e+00f);
    T_relu[(((((((((int)threadIdx.z) * 131072) + (ax1_inner_inner_inner * 65536)) + (((int)blockIdx.y) * 512)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 524288))] = max((compute[((ax1_inner_inner_inner + 4))] + placeholder2[((((((int)threadIdx.z) * 2) + ax1_inner_inner_inner) + 8))]), 0.000000e+00f);
    T_relu[(((((((((int)threadIdx.z) * 131072) + (ax1_inner_inner_inner * 65536)) + (((int)blockIdx.y) * 512)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 1048576))] = max((compute[((ax1_inner_inner_inner + 8))] + placeholder2[((((((int)threadIdx.z) * 2) + ax1_inner_inner_inner) + 16))]), 0.000000e+00f);
    T_relu[(((((((((int)threadIdx.z) * 131072) + (ax1_inner_inner_inner * 65536)) + (((int)blockIdx.y) * 512)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 1572864))] = max((compute[((ax1_inner_inner_inner + 12))] + placeholder2[((((((int)threadIdx.z) * 2) + ax1_inner_inner_inner) + 24))]), 0.000000e+00f);
    T_relu[(((((((((int)threadIdx.z) * 131072) + (ax1_inner_inner_inner * 65536)) + (((int)blockIdx.y) * 512)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 2097152))] = max((compute[((ax1_inner_inner_inner + 16))] + placeholder2[((((((int)threadIdx.z) * 2) + ax1_inner_inner_inner) + 32))]), 0.000000e+00f);
    T_relu[(((((((((int)threadIdx.z) * 131072) + (ax1_inner_inner_inner * 65536)) + (((int)blockIdx.y) * 512)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 2621440))] = max((compute[((ax1_inner_inner_inner + 20))] + placeholder2[((((((int)threadIdx.z) * 2) + ax1_inner_inner_inner) + 40))]), 0.000000e+00f);
    T_relu[(((((((((int)threadIdx.z) * 131072) + (ax1_inner_inner_inner * 65536)) + (((int)blockIdx.y) * 512)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 3145728))] = max((compute[((ax1_inner_inner_inner + 24))] + placeholder2[((((((int)threadIdx.z) * 2) + ax1_inner_inner_inner) + 48))]), 0.000000e+00f);
    T_relu[(((((((((int)threadIdx.z) * 131072) + (ax1_inner_inner_inner * 65536)) + (((int)blockIdx.y) * 512)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 3670016))] = max((compute[((ax1_inner_inner_inner + 28))] + placeholder2[((((((int)threadIdx.z) * 2) + ax1_inner_inner_inner) + 56))]), 0.000000e+00f);
    T_relu[(((((((((int)threadIdx.z) * 131072) + (ax1_inner_inner_inner * 65536)) + (((int)blockIdx.y) * 512)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 256))] = max((compute[((ax1_inner_inner_inner + 2))] + placeholder2[(((((int)threadIdx.z) * 2) + ax1_inner_inner_inner))]), 0.000000e+00f);
    T_relu[(((((((((int)threadIdx.z) * 131072) + (ax1_inner_inner_inner * 65536)) + (((int)blockIdx.y) * 512)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 524544))] = max((compute[((ax1_inner_inner_inner + 6))] + placeholder2[((((((int)threadIdx.z) * 2) + ax1_inner_inner_inner) + 8))]), 0.000000e+00f);
    T_relu[(((((((((int)threadIdx.z) * 131072) + (ax1_inner_inner_inner * 65536)) + (((int)blockIdx.y) * 512)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 1048832))] = max((compute[((ax1_inner_inner_inner + 10))] + placeholder2[((((((int)threadIdx.z) * 2) + ax1_inner_inner_inner) + 16))]), 0.000000e+00f);
    T_relu[(((((((((int)threadIdx.z) * 131072) + (ax1_inner_inner_inner * 65536)) + (((int)blockIdx.y) * 512)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 1573120))] = max((compute[((ax1_inner_inner_inner + 14))] + placeholder2[((((((int)threadIdx.z) * 2) + ax1_inner_inner_inner) + 24))]), 0.000000e+00f);
    T_relu[(((((((((int)threadIdx.z) * 131072) + (ax1_inner_inner_inner * 65536)) + (((int)blockIdx.y) * 512)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 2097408))] = max((compute[((ax1_inner_inner_inner + 18))] + placeholder2[((((((int)threadIdx.z) * 2) + ax1_inner_inner_inner) + 32))]), 0.000000e+00f);
    T_relu[(((((((((int)threadIdx.z) * 131072) + (ax1_inner_inner_inner * 65536)) + (((int)blockIdx.y) * 512)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 2621696))] = max((compute[((ax1_inner_inner_inner + 22))] + placeholder2[((((((int)threadIdx.z) * 2) + ax1_inner_inner_inner) + 40))]), 0.000000e+00f);
    T_relu[(((((((((int)threadIdx.z) * 131072) + (ax1_inner_inner_inner * 65536)) + (((int)blockIdx.y) * 512)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 3145984))] = max((compute[((ax1_inner_inner_inner + 26))] + placeholder2[((((((int)threadIdx.z) * 2) + ax1_inner_inner_inner) + 48))]), 0.000000e+00f);
    T_relu[(((((((((int)threadIdx.z) * 131072) + (ax1_inner_inner_inner * 65536)) + (((int)blockIdx.y) * 512)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 3670272))] = max((compute[((ax1_inner_inner_inner + 30))] + placeholder2[((((((int)threadIdx.z) * 2) + ax1_inner_inner_inner) + 56))]), 0.000000e+00f);
  }
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_19_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float compute[32];
  __shared__ float pad_temp_shared[64];
  __shared__ float placeholder_shared[128];
  #pragma unroll
  for (int ff_init = 0; ff_init < 2; ++ff_init) {
    compute[(ff_init)] = 0.000000e+00f;
    compute[((ff_init + 4))] = 0.000000e+00f;
    compute[((ff_init + 8))] = 0.000000e+00f;
    compute[((ff_init + 12))] = 0.000000e+00f;
    compute[((ff_init + 16))] = 0.000000e+00f;
    compute[((ff_init + 20))] = 0.000000e+00f;
    compute[((ff_init + 24))] = 0.000000e+00f;
    compute[((ff_init + 28))] = 0.000000e+00f;
    compute[((ff_init + 2))] = 0.000000e+00f;
    compute[((ff_init + 6))] = 0.000000e+00f;
    compute[((ff_init + 10))] = 0.000000e+00f;
    compute[((ff_init + 14))] = 0.000000e+00f;
    compute[((ff_init + 18))] = 0.000000e+00f;
    compute[((ff_init + 22))] = 0.000000e+00f;
    compute[((ff_init + 26))] = 0.000000e+00f;
    compute[((ff_init + 30))] = 0.000000e+00f;
  }
  for (int rc_outer = 0; rc_outer < 256; ++rc_outer) {
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 16) + ((int)threadIdx.x)))] = placeholder[((((((rc_outer * 512) + ((((int)threadIdx.z) >> 1) * 256)) + (((int)blockIdx.y) * 32)) + ((((int)threadIdx.z) & 1) * 16)) + ((int)threadIdx.x)))];
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = placeholder1[((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 8192)) + (((int)threadIdx.x) * 512)) + (rc_outer * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))];
    }
    __syncthreads();
    #pragma unroll
    for (int rc_inner = 0; rc_inner < 2; ++rc_inner) {
      #pragma unroll
      for (int ff = 0; ff < 2; ++ff) {
        compute[(ff)] = (compute[(ff)] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner))]));
        compute[((ff + 4))] = (compute[((ff + 4))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 16))]));
        compute[((ff + 8))] = (compute[((ff + 8))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 32))]));
        compute[((ff + 12))] = (compute[((ff + 12))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 48))]));
        compute[((ff + 16))] = (compute[((ff + 16))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 64))]));
        compute[((ff + 20))] = (compute[((ff + 20))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 80))]));
        compute[((ff + 24))] = (compute[((ff + 24))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 96))]));
        compute[((ff + 28))] = (compute[((ff + 28))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 112))]));
        compute[((ff + 2))] = (compute[((ff + 2))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner))]));
        compute[((ff + 6))] = (compute[((ff + 6))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 16))]));
        compute[((ff + 10))] = (compute[((ff + 10))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 32))]));
        compute[((ff + 14))] = (compute[((ff + 14))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 48))]));
        compute[((ff + 18))] = (compute[((ff + 18))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 64))]));
        compute[((ff + 22))] = (compute[((ff + 22))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 80))]));
        compute[((ff + 26))] = (compute[((ff + 26))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 96))]));
        compute[((ff + 30))] = (compute[((ff + 30))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 112))]));
      }
    }
  }
  #pragma unroll
  for (int ax1_inner_inner_inner = 0; ax1_inner_inner_inner < 2; ++ax1_inner_inner_inner) {
    T_relu[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)))] = max((compute[(ax1_inner_inner_inner)] + placeholder2[((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 2048))] = max((compute[((ax1_inner_inner_inner + 4))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 8))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 4096))] = max((compute[((ax1_inner_inner_inner + 8))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 16))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 6144))] = max((compute[((ax1_inner_inner_inner + 12))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 24))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 8192))] = max((compute[((ax1_inner_inner_inner + 16))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 32))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 10240))] = max((compute[((ax1_inner_inner_inner + 20))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 40))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 12288))] = max((compute[((ax1_inner_inner_inner + 24))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 48))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 14336))] = max((compute[((ax1_inner_inner_inner + 28))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 56))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 16))] = max((compute[((ax1_inner_inner_inner + 2))] + placeholder2[((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 2064))] = max((compute[((ax1_inner_inner_inner + 6))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 8))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 4112))] = max((compute[((ax1_inner_inner_inner + 10))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 16))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 6160))] = max((compute[((ax1_inner_inner_inner + 14))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 24))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 8208))] = max((compute[((ax1_inner_inner_inner + 18))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 32))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 10256))] = max((compute[((ax1_inner_inner_inner + 22))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 40))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 12304))] = max((compute[((ax1_inner_inner_inner + 26))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 48))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 512)) + (ax1_inner_inner_inner * 256)) + (((int)blockIdx.y) * 32)) + ((int)threadIdx.x)) + 14352))] = max((compute[((ax1_inner_inner_inner + 30))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 56))]), 0.000000e+00f);
  }
}

extern "C" __global__ void fused_vision_non_max_suppression_kernel2(float* __restrict__ argsort_gpu_v0, int* __restrict__ argsort_gpu_v1, float* __restrict__ argsort_gpu_v2, int* __restrict__ argsort_gpu_v3) {
  __shared__ float temp_keys_swap[128];
  __shared__ int temp_values_swap[128];
  float temp_cond1[1];
  float temp_cond2[1];
  float temp_keys[1];
  int temp_values[1];
  for (int i = 0; i < 2; ++i) {
    if ((((((int)blockIdx.x) * 128) + (((int)threadIdx.x) * 2)) + i) < 490560) {
      temp_keys_swap[(((((int)threadIdx.x) * 2) + i))] = argsort_gpu_v0[((((((int)blockIdx.x) * 128) + (((int)threadIdx.x) * 2)) + i))];
      temp_values_swap[(((((int)threadIdx.x) * 2) + i))] = argsort_gpu_v1[((((((int)blockIdx.x) * 128) + (((int)threadIdx.x) * 2)) + i))];
    }
  }
  __syncthreads();
  for (int j = 0; j < min(128, (490560 - (((int)blockIdx.x) * 128))); ++j) {
    if (((((int)threadIdx.x) * 2) + (j & 1)) < (min(128, (490560 - (((int)blockIdx.x) * 128))) - 1)) {
      temp_cond1[(0)] = temp_keys_swap[(((((int)threadIdx.x) * 2) + (j & 1)))];
      temp_cond2[(0)] = temp_keys_swap[((((((int)threadIdx.x) * 2) + (j & 1)) + 1))];
      if (temp_cond1[(0)] < temp_cond2[(0)]) {
        temp_keys[(0)] = temp_keys_swap[(((((int)threadIdx.x) * 2) + (j & 1)))];
        temp_keys_swap[(((((int)threadIdx.x) * 2) + (j & 1)))] = temp_keys_swap[((((((int)threadIdx.x) * 2) + (j & 1)) + 1))];
        temp_keys_swap[((((((int)threadIdx.x) * 2) + (j & 1)) + 1))] = temp_keys[(0)];
        temp_values[(0)] = temp_values_swap[(((((int)threadIdx.x) * 2) + (j & 1)))];
        temp_values_swap[(((((int)threadIdx.x) * 2) + (j & 1)))] = temp_values_swap[((((((int)threadIdx.x) * 2) + (j & 1)) + 1))];
        temp_values_swap[((((((int)threadIdx.x) * 2) + (j & 1)) + 1))] = temp_values[(0)];
      }
    }
    __syncthreads();
  }
  for (int k = 0; k < 2; ++k) {
    if ((((((int)blockIdx.x) * 128) + (((int)threadIdx.x) * 2)) + k) < 490560) {
      argsort_gpu_v0[((((((int)blockIdx.x) * 128) + (((int)threadIdx.x) * 2)) + k))] = temp_keys_swap[(((((int)threadIdx.x) * 2) + k))];
      argsort_gpu_v2[((((((int)blockIdx.x) * 128) + (((int)threadIdx.x) * 2)) + k))] = temp_keys_swap[(((((int)threadIdx.x) * 2) + k))];
      argsort_gpu_v1[((((((int)blockIdx.x) * 128) + (((int)threadIdx.x) * 2)) + k))] = temp_values_swap[(((((int)threadIdx.x) * 2) + k))];
      argsort_gpu_v3[((((((int)blockIdx.x) * 128) + (((int)threadIdx.x) * 2)) + k))] = temp_values_swap[(((((int)threadIdx.x) * 2) + k))];
    }
  }
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_28_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float compute[16];
  __shared__ float pad_temp_shared[32];
  __shared__ float placeholder_shared[512];
  compute[(0)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 4) + (((int)threadIdx.x) * 2)))] = placeholder[((((rc_outer * 32) + (((int)threadIdx.z) * 4)) + (((int)threadIdx.x) * 2)))];
    pad_temp_shared[((((((int)threadIdx.z) * 4) + (((int)threadIdx.x) * 2)) + 1))] = placeholder[(((((rc_outer * 32) + (((int)threadIdx.z) * 4)) + (((int)threadIdx.x) * 2)) + 1))];
    placeholder_shared[(((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)))] = placeholder1[(((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 1))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 1))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 2))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 2))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 3))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 3))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 4))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 4))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 5))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 5))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 6))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 6))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 7))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 7))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 8))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 256))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 9))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 257))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 10))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 258))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 11))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 259))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 12))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 260))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 13))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 261))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 14))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 262))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 15))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 263))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 16))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 512))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 17))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 513))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 18))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 514))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 19))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 515))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 20))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 516))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 21))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 517))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 22))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 518))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 23))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 519))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 24))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 768))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 25))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 769))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 26))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 770))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 27))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 771))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 28))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 772))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 29))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 773))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 30))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 774))];
    placeholder_shared[((((((int)threadIdx.z) * 64) + (((int)threadIdx.x) * 32)) + 31))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 2048)) + (((int)threadIdx.x) * 1024)) + (rc_outer * 8)) + 775))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 64))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 192))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 320))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 448))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 4))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 4))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 4))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 4))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 4))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 4))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 4))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 4))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 65))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 193))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 321))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 449))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 66))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 194))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 322))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 450))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 67))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 195))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 323))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 451))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 68))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 196))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 324))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 452))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 69))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 197))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 325))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 22))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 453))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 26))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 26))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 70))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 26))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 26))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 198))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 26))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 26))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 326))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 26))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 26))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 454))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 30))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 30))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 71))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 30))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 30))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 199))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 30))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 30))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 327))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 30))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 30))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 455))]));
  }
  T_relu[((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)))] = max((compute[(0)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 32))] = max((compute[(2)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 8))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 64))] = max((compute[(4)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 96))] = max((compute[(6)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 24))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 128))] = max((compute[(8)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 160))] = max((compute[(10)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 40))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 192))] = max((compute[(12)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 224))] = max((compute[(14)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 56))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 2))] = max((compute[(1)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 34))] = max((compute[(3)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 8))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 66))] = max((compute[(5)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 98))] = max((compute[(7)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 24))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 130))] = max((compute[(9)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 162))] = max((compute[(11)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 40))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 194))] = max((compute[(13)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 256) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.x)) + 226))] = max((compute[(15)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 56))]), 0.000000e+00f);
}

extern "C" __global__ void fused_strided_slice_strided_slice_concatenate_5_kernel0(float* __restrict__ T_concat, float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ placeholder2) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 36792) {
    T_concat[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((2 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 4) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) - 2))] : ((1 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder1[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 67))] : placeholder2[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 68))]));
  }
}

extern "C" __global__ void fused_nn_softmax_kernel0(float* __restrict__ T_softmax_maxelem, float* __restrict__ placeholder) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 6132) {
    T_softmax_maxelem[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = -3.402823e+38f;
  }
  for (int k = 0; k < 81; ++k) {
    if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 6132) {
      T_softmax_maxelem[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = max(T_softmax_maxelem[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))], placeholder[((((((int)blockIdx.x) * 82944) + (((int)threadIdx.x) * 81)) + k))]);
    }
  }
}

extern "C" __global__ void fused_nn_softmax_kernel3(float* __restrict__ T_softmax_norm, float* __restrict__ T_softmax_exp, float* __restrict__ T_softmax_maxelem) {
  for (int i0_i1_fused_i2_fused_outer = 0; i0_i1_fused_i2_fused_outer < 2; ++i0_i1_fused_i2_fused_outer) {
    if ((((i0_i1_fused_i2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) < 496692) {
      T_softmax_norm[((((i0_i1_fused_i2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)))] = (T_softmax_exp[((((i0_i1_fused_i2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)))] / T_softmax_maxelem[(((((i0_i1_fused_i2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 81))]);
    }
  }
}

extern "C" __global__ void fused_cast_zeros_add_ones_multiply_where_kernel0(float* __restrict__ T_where, signed char* __restrict__ placeholder, float* __restrict__ placeholder1) {
  for (int ax0_ax1_fused_ax2_fused_outer = 0; ax0_ax1_fused_ax2_fused_outer < 2; ++ax0_ax1_fused_ax2_fused_outer) {
    if ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) < 490560) {
      T_where[((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)))] = ((((float)((bool)placeholder[((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)))])) != 0.000000e+00f) ? placeholder1[(((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 80))] : -1.000000e+00f);
    }
  }
}

extern "C" __global__ void fused_strided_slice_strided_slice_concatenate_7_kernel0(float* __restrict__ T_concat, float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ placeholder2) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 36792) {
    T_concat[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((2 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 4) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) - 2))] : ((1 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder1[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 69))] : placeholder2[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 70))]));
  }
}

extern "C" __global__ void fused_vision_get_valid_counts_kernel6(int* __restrict__ get_valid_boxes, float* __restrict__ get_valid_counts_v0, float* __restrict__ placeholder, int* __restrict__ exclusive_scan_v0, int* __restrict__ get_valid_counts_v1) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 490560) {
    if (0 < get_valid_boxes[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]) {
      for (int j = 0; j < 6; ++j) {
        get_valid_counts_v0[(((exclusive_scan_v0[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] * 6) + j))] = placeholder[((((((int)blockIdx.x) * 6144) + (((int)threadIdx.x) * 6)) + j))];
      }
      get_valid_counts_v1[(exclusive_scan_v0[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))])] = ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x));
    }
  }
}

extern "C" __global__ void fused_strided_slice_strided_slice_concatenate_2_kernel0(float* __restrict__ T_concat, float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ placeholder2) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 36792) {
    T_concat[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((2 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 4) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) - 2))] : ((1 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder1[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 64))] : placeholder2[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 65))]));
  }
}

extern "C" __global__ void fused_vision_get_valid_counts_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, int* __restrict__ get_valid_boxes) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 490560) {
    if ((placeholder[(0)] < placeholder1[((((((int)blockIdx.x) * 6144) + (((int)threadIdx.x) * 6)) + 1))]) && (0.000000e+00f <= placeholder1[(((((int)blockIdx.x) * 6144) + (((int)threadIdx.x) * 6)))])) {
      get_valid_boxes[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = 1;
    } else {
      get_valid_boxes[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = 0;
    }
  }
}

extern "C" __global__ void fused_strided_slice_strided_slice_concatenate_9_kernel0(float* __restrict__ T_concat, float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ placeholder2) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 36792) {
    T_concat[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((2 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 4) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) - 2))] : ((1 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder1[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 71))] : placeholder2[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 72))]));
  }
}

extern "C" __global__ void fused_vision_get_valid_counts_kernel4(int* __restrict__ exclusive_scan_v0, int j) {
  int64_t start[1];
  int64_t middle[1];
  int64_t end[1];
  int end1[1];
  start[(0)] = (((int64_t)2 << ((((int64_t)((int)ceil(log2(4.905600e+05)))) - ((int64_t)j)) - (int64_t)1)) * ((((int64_t)((int)blockIdx.x)) * (int64_t)1024) + ((int64_t)((int)threadIdx.x))));
  if (start[(0)] < (int64_t)490560) {
    middle[(0)] = ((((int64_t)2 << ((((int64_t)((int)ceil(log2(4.905600e+05)))) - ((int64_t)j)) - (int64_t)1)) >> (int64_t)1) + start[(0)]);
    end[(0)] = min((start[(0)] + ((int64_t)2 << ((((int64_t)((int)ceil(log2(4.905600e+05)))) - ((int64_t)j)) - (int64_t)1))), (int64_t)490560);
    if (middle[(0)] < (int64_t)490560) {
      end1[(0)] = exclusive_scan_v0[((middle[(0)] - (int64_t)1))];
      exclusive_scan_v0[((middle[(0)] - (int64_t)1))] = exclusive_scan_v0[((end[(0)] - (int64_t)1))];
      exclusive_scan_v0[((end[(0)] - (int64_t)1))] = (exclusive_scan_v0[((end[(0)] - (int64_t)1))] + end1[(0)]);
    }
  }
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_6_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float compute[16];
  __shared__ float pad_temp_shared[256];
  __shared__ float placeholder_shared[512];
  compute[(0)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 32; ++rc_outer) {
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)))] = placeholder[(((((((rc_outer * 32768) + ((((int)threadIdx.z) >> 1) * 4096)) + (((int)blockIdx.y) * 128)) + ((((int)threadIdx.z) & 1) * 64)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)))];
    pad_temp_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + 1))] = placeholder[((((((((rc_outer * 32768) + ((((int)threadIdx.z) >> 1) * 4096)) + (((int)blockIdx.y) * 128)) + ((((int)threadIdx.z) & 1) * 64)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 1))];
    placeholder_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 4)))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + ((((int)threadIdx.x) >> 1) * 256)) + (rc_outer * 8)) + ((((int)threadIdx.x) & 1) * 4)))];
    placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 4)) + 1))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + ((((((int)threadIdx.x) * 4) + 1) >> 3) * 256)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 4) + 1) & 7)))];
    placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 4)) + 2))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + ((((((int)threadIdx.x) * 4) + 2) >> 3) * 256)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 4) + 2) & 7)))];
    placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 4)) + 3))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 1024)) + ((((((int)threadIdx.x) * 4) + 3) >> 3) * 256)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 4) + 3) & 7)))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 32))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 32))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 32))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 32))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 48))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 48))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 48))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 48))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 40))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 40))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 40))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 40))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 64))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 64))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 64))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 64))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 80))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 80))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 80))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 80))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 72))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 72))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 72))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 72))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 88))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 88))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 88))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 88))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 96))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 96))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 96))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 96))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 120))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 120))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 120))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 120))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 128))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 128))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 128))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 128))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 144))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 144))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 144))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 144))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 136))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 136))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 136))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 136))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 152))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 152))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 152))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 152))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 160))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 160))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 160))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 160))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 176))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 176))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 176))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 176))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 184))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 184))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 184))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 184))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 192))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 192))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 192))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 192))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 208))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 208))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 208))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 208))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 200))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 200))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 200))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 200))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 216))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 216))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 216))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 216))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 240))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 240))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 240))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 240))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 232))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 232))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 232))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 232))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 248))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 248))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 248))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 248))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
  }
  T_relu[((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)))] = max((compute[(0)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 65536))] = max((compute[(4)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 131072))] = max((compute[(8)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 196608))] = max((compute[(12)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 64))] = max((compute[(2)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 65600))] = max((compute[(6)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 131136))] = max((compute[(10)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 196672))] = max((compute[(14)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 8))] = max((compute[(1)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 65544))] = max((compute[(5)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 131080))] = max((compute[(9)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 196616))] = max((compute[(13)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 72))] = max((compute[(3)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 65608))] = max((compute[(7)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 131144))] = max((compute[(11)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 262144) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 128)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 196680))] = max((compute[(15)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_16_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float compute[16];
  __shared__ float pad_temp_shared[891];
  __shared__ float placeholder_shared[864];
  for (int yy_init = 0; yy_init < 2; ++yy_init) {
    compute[(yy_init)] = 0.000000e+00f;
    compute[((yy_init + 4))] = 0.000000e+00f;
    compute[((yy_init + 8))] = 0.000000e+00f;
    compute[((yy_init + 12))] = 0.000000e+00f;
    compute[((yy_init + 2))] = 0.000000e+00f;
    compute[((yy_init + 6))] = 0.000000e+00f;
    compute[((yy_init + 10))] = 0.000000e+00f;
    compute[((yy_init + 14))] = 0.000000e+00f;
  }
  for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 7; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
    if ((((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 7)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 891) {
      pad_temp_shared[((((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 7)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = (((1 <= ((((int)blockIdx.y) * 8) + (((((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 7)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 297) / 33))) && (1 <= ((((int)blockIdx.x) * 32) + ((((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 7)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 33)))) ? placeholder[(((((((((((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 7)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 297) * 262144) + (((int)blockIdx.y) * 4096)) + ((((((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 7)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 297) / 33) * 512)) + (((int)blockIdx.x) * 32)) + ((((((int)threadIdx.z) * 112) + (((int)threadIdx.x) * 7)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 33)) - 513))] : 0.000000e+00f);
    }
  }
  for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 7; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {
    if (((((int)threadIdx.z) * 4) + (((((int)threadIdx.x) * 7) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 27)) < 32) {
      if (((((int)threadIdx.z) * 12) + (((((int)threadIdx.x) * 7) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 9)) < 96) {
        if (((((int)threadIdx.z) * 36) + (((((int)threadIdx.x) * 7) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) / 3)) < 288) {
          if ((((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 7)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 864) {
            if (((((int)threadIdx.x) * 7) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) < 108) {
              placeholder_shared[((((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 7)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1))] = placeholder1[((((((int)threadIdx.z) * 108) + (((int)threadIdx.x) * 7)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1))];
            }
          }
        }
      }
    }
  }
  __syncthreads();
  for (int rc_inner = 0; rc_inner < 3; ++rc_inner) {
    for (int ry_inner = 0; ry_inner < 3; ++ry_inner) {
      for (int rx_inner = 0; rx_inner < 3; ++rx_inner) {
        for (int yy = 0; yy < 2; ++yy) {
          compute[(yy)] = (compute[(yy)] + (pad_temp_shared[((((((rc_inner * 297) + (yy * 66)) + (ry_inner * 33)) + (((int)threadIdx.x) * 2)) + rx_inner))] * placeholder_shared[(((((((int)threadIdx.z) * 27) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner))]));
          compute[((yy + 4))] = (compute[((yy + 4))] + (pad_temp_shared[((((((rc_inner * 297) + (yy * 66)) + (ry_inner * 33)) + (((int)threadIdx.x) * 2)) + rx_inner))] * placeholder_shared[((((((((int)threadIdx.z) * 27) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner) + 216))]));
          compute[((yy + 8))] = (compute[((yy + 8))] + (pad_temp_shared[((((((rc_inner * 297) + (yy * 66)) + (ry_inner * 33)) + (((int)threadIdx.x) * 2)) + rx_inner))] * placeholder_shared[((((((((int)threadIdx.z) * 27) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner) + 432))]));
          compute[((yy + 12))] = (compute[((yy + 12))] + (pad_temp_shared[((((((rc_inner * 297) + (yy * 66)) + (ry_inner * 33)) + (((int)threadIdx.x) * 2)) + rx_inner))] * placeholder_shared[((((((((int)threadIdx.z) * 27) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner) + 648))]));
          compute[((yy + 2))] = (compute[((yy + 2))] + (pad_temp_shared[(((((((rc_inner * 297) + (yy * 66)) + (ry_inner * 33)) + (((int)threadIdx.x) * 2)) + rx_inner) + 132))] * placeholder_shared[(((((((int)threadIdx.z) * 27) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner))]));
          compute[((yy + 6))] = (compute[((yy + 6))] + (pad_temp_shared[(((((((rc_inner * 297) + (yy * 66)) + (ry_inner * 33)) + (((int)threadIdx.x) * 2)) + rx_inner) + 132))] * placeholder_shared[((((((((int)threadIdx.z) * 27) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner) + 216))]));
          compute[((yy + 10))] = (compute[((yy + 10))] + (pad_temp_shared[(((((((rc_inner * 297) + (yy * 66)) + (ry_inner * 33)) + (((int)threadIdx.x) * 2)) + rx_inner) + 132))] * placeholder_shared[((((((((int)threadIdx.z) * 27) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner) + 432))]));
          compute[((yy + 14))] = (compute[((yy + 14))] + (pad_temp_shared[(((((((rc_inner * 297) + (yy * 66)) + (ry_inner * 33)) + (((int)threadIdx.x) * 2)) + rx_inner) + 132))] * placeholder_shared[((((((((int)threadIdx.z) * 27) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner) + 648))]));
        }
      }
    }
  }
  for (int ax2_inner_inner_inner = 0; ax2_inner_inner_inner < 2; ++ax2_inner_inner_inner) {
    T_relu[((((((((int)threadIdx.z) * 65536) + (((int)blockIdx.y) * 1024)) + (ax2_inner_inner_inner * 256)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)))] = max((compute[(ax2_inner_inner_inner)] + placeholder2[(((int)threadIdx.z))]), 0.000000e+00f);
    T_relu[(((((((((int)threadIdx.z) * 65536) + (((int)blockIdx.y) * 1024)) + (ax2_inner_inner_inner * 256)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 524288))] = max((compute[((ax2_inner_inner_inner + 4))] + placeholder2[((((int)threadIdx.z) + 8))]), 0.000000e+00f);
    T_relu[(((((((((int)threadIdx.z) * 65536) + (((int)blockIdx.y) * 1024)) + (ax2_inner_inner_inner * 256)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 1048576))] = max((compute[((ax2_inner_inner_inner + 8))] + placeholder2[((((int)threadIdx.z) + 16))]), 0.000000e+00f);
    T_relu[(((((((((int)threadIdx.z) * 65536) + (((int)blockIdx.y) * 1024)) + (ax2_inner_inner_inner * 256)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 1572864))] = max((compute[((ax2_inner_inner_inner + 12))] + placeholder2[((((int)threadIdx.z) + 24))]), 0.000000e+00f);
    T_relu[(((((((((int)threadIdx.z) * 65536) + (((int)blockIdx.y) * 1024)) + (ax2_inner_inner_inner * 256)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 512))] = max((compute[((ax2_inner_inner_inner + 2))] + placeholder2[(((int)threadIdx.z))]), 0.000000e+00f);
    T_relu[(((((((((int)threadIdx.z) * 65536) + (((int)blockIdx.y) * 1024)) + (ax2_inner_inner_inner * 256)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 524800))] = max((compute[((ax2_inner_inner_inner + 6))] + placeholder2[((((int)threadIdx.z) + 8))]), 0.000000e+00f);
    T_relu[(((((((((int)threadIdx.z) * 65536) + (((int)blockIdx.y) * 1024)) + (ax2_inner_inner_inner * 256)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 1049088))] = max((compute[((ax2_inner_inner_inner + 10))] + placeholder2[((((int)threadIdx.z) + 16))]), 0.000000e+00f);
    T_relu[(((((((((int)threadIdx.z) * 65536) + (((int)blockIdx.y) * 1024)) + (ax2_inner_inner_inner * 256)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 1573376))] = max((compute[((ax2_inner_inner_inner + 14))] + placeholder2[((((int)threadIdx.z) + 24))]), 0.000000e+00f);
  }
}

extern "C" __global__ void fused_vision_non_max_suppression_kernel4(float* __restrict__ argsort_gpu_v0, float* __restrict__ argsort_gpu_v2, int* __restrict__ argsort_gpu_v1, int* __restrict__ argsort_gpu_v3) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 490560) {
    argsort_gpu_v0[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = argsort_gpu_v2[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))];
    argsort_gpu_v1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = argsort_gpu_v3[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))];
  }
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_20_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[1122];
  __shared__ float placeholder_shared[18];
  float PaddedInput_shared_local[50];
  float placeholder_shared_local[9];
  float DepthwiseConv2d[8];
  #pragma unroll
  for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 36; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
    if (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 1122) {
      if ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 8) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.y)) < 281) {
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 2) + ((int)threadIdx.z)) < 71) {
          PaddedInput_shared[(((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))] = (((17 <= (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 561)) && (1 <= ((((int)blockIdx.x) * 16) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 17)))) ? placeholder[(((((((((int)blockIdx.z) * 2048) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) / 561) * 1024)) + (((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 561) / 17) * 32)) + (((int)blockIdx.x) * 16)) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 17)) - 33))] : 0.000000e+00f);
        }
      }
    }
  }
  if ((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 18) {
    if (((((int)threadIdx.z) * 4) + ((int)threadIdx.y)) < 5) {
      placeholder_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))] = placeholder1[(((((((int)blockIdx.z) * 18) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))];
    }
  }
  __syncthreads();
  #pragma unroll
  for (int ax2 = 0; ax2 < 5; ++ax2) {
    #pragma unroll
    for (int ax3 = 0; ax3 < 5; ++ax3) {
      PaddedInput_shared_local[(((ax2 * 5) + ax3))] = PaddedInput_shared[((((((((int)threadIdx.z) * 561) + (((int)threadIdx.y) * 68)) + (ax2 * 17)) + (((int)threadIdx.x) * 4)) + ax3))];
      PaddedInput_shared_local[((((ax2 * 5) + ax3) + 25))] = PaddedInput_shared[(((((((((int)threadIdx.z) * 561) + (((int)threadIdx.y) * 68)) + (ax2 * 17)) + (((int)threadIdx.x) * 4)) + ax3) + 272))];
    }
  }
  #pragma unroll
  for (int ax21 = 0; ax21 < 3; ++ax21) {
    #pragma unroll
    for (int ax31 = 0; ax31 < 3; ++ax31) {
      placeholder_shared_local[(((ax21 * 3) + ax31))] = placeholder_shared[((((((int)threadIdx.z) * 9) + (ax21 * 3)) + ax31))];
    }
  }
  #pragma unroll
  for (int i = 0; i < 2; ++i) {
    #pragma unroll
    for (int j = 0; j < 2; ++j) {
      DepthwiseConv2d[(((i * 2) + j))] = 0.000000e+00f;
      DepthwiseConv2d[((((i * 2) + j) + 4))] = 0.000000e+00f;
      #pragma unroll
      for (int di = 0; di < 3; ++di) {
        #pragma unroll
        for (int dj = 0; dj < 3; ++dj) {
          DepthwiseConv2d[(((i * 2) + j))] = (DepthwiseConv2d[(((i * 2) + j))] + (PaddedInput_shared_local[(((((i * 10) + (di * 5)) + (j * 2)) + dj))] * placeholder_shared_local[(((di * 3) + dj))]));
          DepthwiseConv2d[((((i * 2) + j) + 4))] = (DepthwiseConv2d[((((i * 2) + j) + 4))] + (PaddedInput_shared_local[((((((i * 10) + (di * 5)) + (j * 2)) + dj) + 25))] * placeholder_shared_local[(((di * 3) + dj))]));
        }
      }
    }
  }
  #pragma unroll
  for (int ax2_inner_inner_inner = 0; ax2_inner_inner_inner < 2; ++ax2_inner_inner_inner) {
    #pragma unroll
    for (int ax3_inner_inner_inner = 0; ax3_inner_inner_inner < 2; ++ax3_inner_inner_inner) {
      T_relu[((((((((((int)blockIdx.z) * 512) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 32)) + (ax2_inner_inner_inner * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner))] = max((DepthwiseConv2d[(((ax2_inner_inner_inner * 2) + ax3_inner_inner_inner))] + placeholder2[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]), 0.000000e+00f);
      T_relu[(((((((((((int)blockIdx.z) * 512) + (((int)threadIdx.z) * 256)) + (((int)threadIdx.y) * 32)) + (ax2_inner_inner_inner * 16)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 128))] = max((DepthwiseConv2d[((((ax2_inner_inner_inner * 2) + ax3_inner_inner_inner) + 4))] + placeholder2[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]), 0.000000e+00f);
    }
  }
}

extern "C" __global__ void fused_nn_conv2d_add_5_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_add, float* __restrict__ placeholder2) {
  float compute[6];
  __shared__ float pad_temp_shared[16];
  __shared__ float placeholder_shared[108];
  compute[(0)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 256; ++rc_outer) {
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 4) + (((int)threadIdx.y) * 2)))] = ((((1 <= ((int)threadIdx.z)) && (((int)threadIdx.z) < 3)) && (1 <= ((int)threadIdx.y))) ? placeholder[(((((rc_outer * 4) + (((int)threadIdx.z) * 2)) + (((int)threadIdx.y) * 2)) - 3))] : 0.000000e+00f);
    pad_temp_shared[((((((int)threadIdx.z) * 4) + (((int)threadIdx.y) * 2)) + 1))] = ((((1 <= ((int)threadIdx.z)) && (((int)threadIdx.z) < 3)) && (((int)threadIdx.y) < 1)) ? placeholder[(((((rc_outer * 4) + (((int)threadIdx.z) * 2)) + (((int)threadIdx.y) * 2)) - 2))] : 0.000000e+00f);
    placeholder_shared[(((((int)threadIdx.z) * 27) + (((int)threadIdx.y) * 14)))] = placeholder1[((((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (((((int)threadIdx.y) * 14) / 9) * 2304)) + (rc_outer * 9)) + ((((int)threadIdx.y) * 14) % 9)))];
    placeholder_shared[((((((int)threadIdx.z) * 27) + (((int)threadIdx.y) * 14)) + 1))] = placeholder1[((((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + ((((((int)threadIdx.y) * 14) + 1) / 9) * 2304)) + (rc_outer * 9)) + (((((int)threadIdx.y) * 14) + 1) % 9)))];
    placeholder_shared[((((((int)threadIdx.z) * 27) + (((int)threadIdx.y) * 14)) + 2))] = placeholder1[((((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + ((((((int)threadIdx.y) * 14) + 2) / 9) * 2304)) + (rc_outer * 9)) + (((((int)threadIdx.y) * 14) + 2) % 9)))];
    placeholder_shared[((((((int)threadIdx.z) * 27) + (((int)threadIdx.y) * 14)) + 3))] = placeholder1[((((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + ((((((int)threadIdx.y) * 14) + 3) / 9) * 2304)) + (rc_outer * 9)) + (((((int)threadIdx.y) * 14) + 3) % 9)))];
    placeholder_shared[((((((int)threadIdx.z) * 27) + (((int)threadIdx.y) * 14)) + 4))] = placeholder1[((((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + ((((((int)threadIdx.y) * 14) + 4) / 9) * 2304)) + (rc_outer * 9)) + (((((int)threadIdx.y) * 14) + 4) % 9)))];
    placeholder_shared[((((((int)threadIdx.z) * 27) + (((int)threadIdx.y) * 14)) + 5))] = placeholder1[((((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + ((((((int)threadIdx.y) * 14) + 5) / 9) * 2304)) + (rc_outer * 9)) + (((((int)threadIdx.y) * 14) + 5) % 9)))];
    placeholder_shared[((((((int)threadIdx.z) * 27) + (((int)threadIdx.y) * 14)) + 6))] = placeholder1[((((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + ((((((int)threadIdx.y) * 14) + 6) / 9) * 2304)) + (rc_outer * 9)) + (((((int)threadIdx.y) * 14) + 6) % 9)))];
    placeholder_shared[((((((int)threadIdx.z) * 27) + (((int)threadIdx.y) * 14)) + 7))] = placeholder1[((((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + ((((((int)threadIdx.y) * 14) + 7) / 9) * 2304)) + (rc_outer * 9)) + (((((int)threadIdx.y) * 14) + 7) % 9)))];
    placeholder_shared[((((((int)threadIdx.z) * 27) + (((int)threadIdx.y) * 14)) + 8))] = placeholder1[((((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + ((((((int)threadIdx.y) * 14) + 8) / 9) * 2304)) + (rc_outer * 9)) + (((((int)threadIdx.y) * 14) + 8) % 9)))];
    placeholder_shared[((((((int)threadIdx.z) * 27) + (((int)threadIdx.y) * 14)) + 9))] = placeholder1[(((((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + (((((int)threadIdx.y) * 14) / 9) * 2304)) + (rc_outer * 9)) + ((((int)threadIdx.y) * 14) % 9)) + 2304))];
    placeholder_shared[((((((int)threadIdx.z) * 27) + (((int)threadIdx.y) * 14)) + 10))] = placeholder1[((((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + ((((((int)threadIdx.y) * 14) + 10) / 9) * 2304)) + (rc_outer * 9)) + (((((int)threadIdx.y) * 14) + 1) % 9)))];
    placeholder_shared[((((((int)threadIdx.z) * 27) + (((int)threadIdx.y) * 14)) + 11))] = placeholder1[((((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + ((((((int)threadIdx.y) * 14) + 11) / 9) * 2304)) + (rc_outer * 9)) + (((((int)threadIdx.y) * 14) + 2) % 9)))];
    placeholder_shared[((((((int)threadIdx.z) * 27) + (((int)threadIdx.y) * 14)) + 12))] = placeholder1[((((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + ((((((int)threadIdx.y) * 14) + 12) / 9) * 2304)) + (rc_outer * 9)) + (((((int)threadIdx.y) * 14) + 3) % 9)))];
    if (((((int)threadIdx.z) * 3) + (((((int)threadIdx.y) * 14) + 13) / 9)) < 12) {
      if (((((int)threadIdx.z) * 9) + (((((int)threadIdx.y) * 14) + 13) / 3)) < 36) {
        if (((((int)threadIdx.z) * 27) + (((int)threadIdx.y) * 14)) < 95) {
          if (((int)threadIdx.y) < 1) {
            placeholder_shared[((((((int)threadIdx.z) * 27) + (((int)threadIdx.y) * 14)) + 13))] = placeholder1[((((((((int)blockIdx.z) * 27648) + (((int)threadIdx.z) * 6912)) + ((((((int)threadIdx.y) * 14) + 13) / 9) * 2304)) + (rc_outer * 9)) + ((((int)threadIdx.y) * 14) + 4)))];
          }
        }
      }
    }
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.y) * 4))] * placeholder_shared[((((int)threadIdx.z) * 9))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.y) * 4))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 36))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.y) * 4))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 72))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 1))] * placeholder_shared[((((int)threadIdx.z) * 9))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 36))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 72))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 37))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 73))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 1))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 37))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 73))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 38))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 74))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 2))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 38))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 74))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 4))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 3))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 4))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 39))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 4))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 75))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 5))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 5))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 39))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 5))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 75))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 5))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 4))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 5))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 40))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 5))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 76))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 40))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 76))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 5))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 41))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 77))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 41))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 77))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 42))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 78))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 6))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 42))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 78))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 7))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 43))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 79))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 7))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 43))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 79))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 8))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 44))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 10))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 80))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 8))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 44))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.y) * 4) + 11))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 80))]));
  }
  T_add[((((((int)blockIdx.z) * 48) + (((int)threadIdx.z) * 4)) + (((int)threadIdx.y) * 2)))] = (compute[(0)] + placeholder2[(((((int)blockIdx.z) * 12) + ((int)threadIdx.z)))]);
  T_add[(((((((int)blockIdx.z) * 48) + (((int)threadIdx.z) * 4)) + (((int)threadIdx.y) * 2)) + 16))] = (compute[(2)] + placeholder2[((((((int)blockIdx.z) * 12) + ((int)threadIdx.z)) + 4))]);
  T_add[(((((((int)blockIdx.z) * 48) + (((int)threadIdx.z) * 4)) + (((int)threadIdx.y) * 2)) + 32))] = (compute[(4)] + placeholder2[((((((int)blockIdx.z) * 12) + ((int)threadIdx.z)) + 8))]);
  T_add[(((((((int)blockIdx.z) * 48) + (((int)threadIdx.z) * 4)) + (((int)threadIdx.y) * 2)) + 1))] = (compute[(1)] + placeholder2[(((((int)blockIdx.z) * 12) + ((int)threadIdx.z)))]);
  T_add[(((((((int)blockIdx.z) * 48) + (((int)threadIdx.z) * 4)) + (((int)threadIdx.y) * 2)) + 17))] = (compute[(3)] + placeholder2[((((((int)blockIdx.z) * 12) + ((int)threadIdx.z)) + 4))]);
  T_add[(((((((int)blockIdx.z) * 48) + (((int)threadIdx.z) * 4)) + (((int)threadIdx.y) * 2)) + 33))] = (compute[(5)] + placeholder2[((((((int)blockIdx.z) * 12) + ((int)threadIdx.z)) + 8))]);
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_10_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float compute[16];
  __shared__ float pad_temp_shared[256];
  __shared__ float placeholder_shared[512];
  compute[(0)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 16; ++rc_outer) {
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)))] = placeholder[(((((((rc_outer * 131072) + ((((int)threadIdx.z) >> 1) * 16384)) + (((int)blockIdx.y) * 256)) + ((((int)threadIdx.z) & 1) * 128)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)))];
    pad_temp_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 2)) + 1))] = placeholder[((((((((rc_outer * 131072) + ((((int)threadIdx.z) >> 1) * 16384)) + (((int)blockIdx.y) * 256)) + ((((int)threadIdx.z) & 1) * 128)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + 1))];
    placeholder_shared[(((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 4)))] = placeholder1[((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 512)) + ((((int)threadIdx.x) >> 1) * 128)) + (rc_outer * 8)) + ((((int)threadIdx.x) & 1) * 4)))];
    placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 4)) + 1))] = placeholder1[((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 512)) + ((((((int)threadIdx.x) * 4) + 1) >> 3) * 128)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 4) + 1) & 7)))];
    placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 4)) + 2))] = placeholder1[((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 512)) + ((((((int)threadIdx.x) * 4) + 2) >> 3) * 128)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 4) + 2) & 7)))];
    placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 4)) + 3))] = placeholder1[((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 512)) + ((((((int)threadIdx.x) * 4) + 3) >> 3) * 128)) + (rc_outer * 8)) + (((((int)threadIdx.x) * 4) + 3) & 7)))];
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[(((int)threadIdx.x))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 16))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[((((int)threadIdx.z) * 8))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 128))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 256))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 24))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 384))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 32))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 32))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 32))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 32))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 48))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 48))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 48))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 48))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 40))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 40))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 40))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 40))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 1))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 129))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 257))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 56))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 385))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 64))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 64))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 64))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 64))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 80))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 80))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 80))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 80))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 72))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 72))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 72))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 72))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 88))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 2))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 88))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 130))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 88))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 258))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 88))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 386))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 96))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 96))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 96))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 96))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 104))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 120))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 3))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 120))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 131))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 120))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 259))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 120))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 387))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 128))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 128))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 128))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 128))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 144))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 144))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 144))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 144))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 136))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 136))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 136))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 136))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 152))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 4))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 152))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 132))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 152))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 260))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 152))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 388))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 160))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 160))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 160))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 160))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 176))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 176))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 176))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 176))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 168))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 184))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 5))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 184))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 133))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 184))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 261))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 184))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 389))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 192))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 192))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 192))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 192))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 208))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 208))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 208))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 208))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 200))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 200))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 200))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 200))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 216))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 6))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 216))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 134))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 216))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 262))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 216))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 390))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) + 224))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((int)threadIdx.x) + 240))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((int)threadIdx.x) + 240))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((int)threadIdx.x) + 240))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(14)] = (compute[(14)] + (pad_temp_shared[((((int)threadIdx.x) + 240))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((int)threadIdx.x) + 232))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((int)threadIdx.x) + 232))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((int)threadIdx.x) + 232))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(13)] = (compute[(13)] + (pad_temp_shared[((((int)threadIdx.x) + 232))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((int)threadIdx.x) + 248))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 7))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((int)threadIdx.x) + 248))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 135))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((int)threadIdx.x) + 248))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 263))]));
    compute[(15)] = (compute[(15)] + (pad_temp_shared[((((int)threadIdx.x) + 248))] * placeholder_shared[(((((int)threadIdx.z) * 8) + 391))]));
  }
  T_relu[((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 256)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)))] = max((compute[(0)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 256)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 262144))] = max((compute[(4)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 256)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 524288))] = max((compute[(8)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 256)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 786432))] = max((compute[(12)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 256)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 128))] = max((compute[(2)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 256)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 262272))] = max((compute[(6)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 256)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 524416))] = max((compute[(10)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 256)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 786560))] = max((compute[(14)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 256)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 8))] = max((compute[(1)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 256)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 262152))] = max((compute[(5)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 256)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 524296))] = max((compute[(9)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 256)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 786440))] = max((compute[(13)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 256)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 136))] = max((compute[(3)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 256)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 262280))] = max((compute[(7)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 256)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 524424))] = max((compute[(11)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[(((((((((int)blockIdx.z) * 1048576) + (((int)threadIdx.z) * 16384)) + (((int)blockIdx.y) * 256)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 786568))] = max((compute[(15)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_23_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float compute[16];
  __shared__ float pad_temp_shared[196];
  __shared__ float placeholder_shared[256];
  compute[(0)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(12)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(13)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(14)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  compute[(15)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 128; ++rc_outer) {
    for (int ry_outer = 0; ry_outer < 3; ++ry_outer) {
      __syncthreads();
      if (((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) < 196) {
        pad_temp_shared[(((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)))] = (((1 <= (((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) % 49) / 7) + ry_outer)) && (1 <= (((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) % 7))) ? placeholder[(((((((rc_outer * 256) + ((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) / 49) * 64)) + (((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) % 49) / 7) * 8)) + (ry_outer * 8)) + (((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) % 7)) - 9))] : 0.000000e+00f);
      }
      if (((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) < 195) {
        if (((int)threadIdx.x) < 3) {
          pad_temp_shared[((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 1))] = (((1 <= ((((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 1) % 49) / 7) + ry_outer)) && (1 <= ((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 1) % 7))) ? placeholder[(((((((rc_outer * 256) + (((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 1) / 49) * 64)) + ((((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 1) % 49) / 7) * 8)) + (ry_outer * 8)) + ((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 1) % 7)) - 9))] : 0.000000e+00f);
        }
      }
      if (((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) < 194) {
        if (((int)threadIdx.x) < 3) {
          pad_temp_shared[((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 2))] = (((1 <= ((((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 2) % 49) / 7) + ry_outer)) && (1 <= ((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 2) % 7))) ? placeholder[(((((((rc_outer * 256) + (((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 2) / 49) * 64)) + ((((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 2) % 49) / 7) * 8)) + (ry_outer * 8)) + ((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 2) % 7)) - 9))] : 0.000000e+00f);
        }
      }
      if (((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) < 193) {
        if (((int)threadIdx.x) < 3) {
          pad_temp_shared[((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 3))] = (((1 <= ((((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 3) % 49) / 7) + ry_outer)) && (1 <= ((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 3) % 7))) ? placeholder[(((((((rc_outer * 256) + (((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 3) / 49) * 64)) + ((((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 3) % 49) / 7) * 8)) + (ry_outer * 8)) + ((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 3) % 7)) - 9))] : 0.000000e+00f);
        }
      }
      placeholder_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 4)))] = placeholder1[((((((((int)blockIdx.z) * 294912) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 4608)) + (rc_outer * 36)) + (ry_outer * 3)))];
      placeholder_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 4)) + 1))] = placeholder1[(((((((((int)blockIdx.z) * 294912) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 4608)) + (rc_outer * 36)) + (ry_outer * 3)) + 9))];
      placeholder_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 4)) + 2))] = placeholder1[(((((((((int)blockIdx.z) * 294912) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 4608)) + (rc_outer * 36)) + (ry_outer * 3)) + 18))];
      placeholder_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 4)) + 3))] = placeholder1[(((((((((int)blockIdx.z) * 294912) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 4608)) + (rc_outer * 36)) + (ry_outer * 3)) + 27))];
      __syncthreads();
      compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[((((int)threadIdx.z) * 4))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 64))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 128))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 192))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 14))] * placeholder_shared[((((int)threadIdx.z) * 4))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 64))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 128))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 192))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 28))] * placeholder_shared[((((int)threadIdx.z) * 4))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 64))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 128))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 192))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[((((int)threadIdx.z) * 4))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 64))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 128))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 192))]));
      compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 49))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 1))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 49))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 65))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 49))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 129))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 49))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 193))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 1))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 65))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 129))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 193))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 77))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 1))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 77))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 65))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 77))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 129))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 77))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 193))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 91))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 1))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 91))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 65))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 91))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 129))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 91))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 193))]));
      compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 2))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 66))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 130))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 194))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 2))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 66))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 130))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 194))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 2))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 66))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 130))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 194))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 2))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 66))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 130))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 194))]));
      compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 147))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 3))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 147))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 67))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 147))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 131))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 147))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 195))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 161))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 3))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 161))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 67))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 161))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 131))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 161))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 195))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 175))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 3))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 175))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 67))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 175))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 131))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 175))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 195))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 189))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 3))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 189))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 67))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 189))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 131))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 189))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 195))]));
      __syncthreads();
      if (((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) < 196) {
        pad_temp_shared[(((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)))] = ((1 <= (((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) % 49) / 7) + ry_outer)) ? placeholder[(((((((rc_outer * 256) + ((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) / 49) * 64)) + (((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) % 49) / 7) * 8)) + (ry_outer * 8)) + (((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) % 7)) - 8))] : 0.000000e+00f);
      }
      if (((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) < 195) {
        if (((int)threadIdx.x) < 3) {
          pad_temp_shared[((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 1))] = ((1 <= ((((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 1) % 49) / 7) + ry_outer)) ? placeholder[(((((((rc_outer * 256) + (((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 1) / 49) * 64)) + ((((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 1) % 49) / 7) * 8)) + (ry_outer * 8)) + ((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 1) % 7)) - 8))] : 0.000000e+00f);
        }
      }
      if (((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) < 194) {
        if (((int)threadIdx.x) < 3) {
          pad_temp_shared[((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 2))] = ((1 <= ((((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 2) % 49) / 7) + ry_outer)) ? placeholder[(((((((rc_outer * 256) + (((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 2) / 49) * 64)) + ((((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 2) % 49) / 7) * 8)) + (ry_outer * 8)) + ((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 2) % 7)) - 8))] : 0.000000e+00f);
        }
      }
      if (((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) < 193) {
        if (((int)threadIdx.x) < 3) {
          pad_temp_shared[((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 3))] = ((1 <= ((((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 3) % 49) / 7) + ry_outer)) ? placeholder[(((((((rc_outer * 256) + (((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 3) / 49) * 64)) + ((((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 3) % 49) / 7) * 8)) + (ry_outer * 8)) + ((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 3) % 7)) - 8))] : 0.000000e+00f);
        }
      }
      placeholder_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 4)))] = placeholder1[(((((((((int)blockIdx.z) * 294912) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 4608)) + (rc_outer * 36)) + (ry_outer * 3)) + 1))];
      placeholder_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 4)) + 1))] = placeholder1[(((((((((int)blockIdx.z) * 294912) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 4608)) + (rc_outer * 36)) + (ry_outer * 3)) + 10))];
      placeholder_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 4)) + 2))] = placeholder1[(((((((((int)blockIdx.z) * 294912) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 4608)) + (rc_outer * 36)) + (ry_outer * 3)) + 19))];
      placeholder_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 4)) + 3))] = placeholder1[(((((((((int)blockIdx.z) * 294912) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 4608)) + (rc_outer * 36)) + (ry_outer * 3)) + 28))];
      __syncthreads();
      compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[((((int)threadIdx.z) * 4))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 64))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 128))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 192))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 14))] * placeholder_shared[((((int)threadIdx.z) * 4))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 64))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 128))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 192))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 28))] * placeholder_shared[((((int)threadIdx.z) * 4))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 64))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 128))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 192))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[((((int)threadIdx.z) * 4))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 64))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 128))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 192))]));
      compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 49))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 1))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 49))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 65))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 49))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 129))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 49))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 193))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 1))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 65))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 129))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 193))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 77))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 1))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 77))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 65))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 77))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 129))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 77))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 193))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 91))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 1))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 91))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 65))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 91))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 129))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 91))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 193))]));
      compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 2))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 66))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 130))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 194))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 2))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 66))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 130))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 194))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 2))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 66))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 130))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 194))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 2))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 66))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 130))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 194))]));
      compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 147))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 3))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 147))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 67))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 147))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 131))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 147))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 195))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 161))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 3))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 161))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 67))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 161))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 131))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 161))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 195))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 175))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 3))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 175))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 67))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 175))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 131))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 175))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 195))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 189))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 3))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 189))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 67))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 189))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 131))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 189))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 195))]));
      __syncthreads();
      if (((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) < 196) {
        pad_temp_shared[(((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)))] = ((1 <= (((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) % 49) / 7) + ry_outer)) ? placeholder[(((((((rc_outer * 256) + ((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) / 49) * 64)) + (((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) % 49) / 7) * 8)) + (ry_outer * 8)) + (((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) % 7)) - 7))] : 0.000000e+00f);
      }
      if (((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) < 195) {
        if (((int)threadIdx.x) < 3) {
          pad_temp_shared[((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 1))] = ((1 <= ((((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 1) % 49) / 7) + ry_outer)) ? placeholder[(((((((rc_outer * 256) + (((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 1) / 49) * 64)) + ((((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 1) % 49) / 7) * 8)) + (ry_outer * 8)) + ((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 1) % 7)) - 7))] : 0.000000e+00f);
        }
      }
      if (((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) < 194) {
        if (((int)threadIdx.x) < 3) {
          pad_temp_shared[((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 2))] = ((1 <= ((((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 2) % 49) / 7) + ry_outer)) ? placeholder[(((((((rc_outer * 256) + (((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 2) / 49) * 64)) + ((((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 2) % 49) / 7) * 8)) + (ry_outer * 8)) + ((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 2) % 7)) - 7))] : 0.000000e+00f);
        }
      }
      if (((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) < 193) {
        if (((int)threadIdx.x) < 3) {
          pad_temp_shared[((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 3))] = ((1 <= ((((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 3) % 49) / 7) + ry_outer)) ? placeholder[(((((((rc_outer * 256) + (((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 3) / 49) * 64)) + ((((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 3) % 49) / 7) * 8)) + (ry_outer * 8)) + ((((((int)threadIdx.z) * 13) + (((int)threadIdx.x) * 4)) + 3) % 7)) - 7))] : 0.000000e+00f);
        }
      }
      placeholder_shared[(((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 4)))] = placeholder1[(((((((((int)blockIdx.z) * 294912) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 4608)) + (rc_outer * 36)) + (ry_outer * 3)) + 2))];
      placeholder_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 4)) + 1))] = placeholder1[(((((((((int)blockIdx.z) * 294912) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 4608)) + (rc_outer * 36)) + (ry_outer * 3)) + 11))];
      placeholder_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 4)) + 2))] = placeholder1[(((((((((int)blockIdx.z) * 294912) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 4608)) + (rc_outer * 36)) + (ry_outer * 3)) + 20))];
      placeholder_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.x) * 4)) + 3))] = placeholder1[(((((((((int)blockIdx.z) * 294912) + (((int)threadIdx.z) * 18432)) + (((int)threadIdx.x) * 4608)) + (rc_outer * 36)) + (ry_outer * 3)) + 29))];
      __syncthreads();
      compute[(0)] = (compute[(0)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[((((int)threadIdx.z) * 4))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 64))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 128))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[((((int)threadIdx.x) * 2))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 192))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 14))] * placeholder_shared[((((int)threadIdx.z) * 4))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 64))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 128))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 192))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 28))] * placeholder_shared[((((int)threadIdx.z) * 4))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 64))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 128))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 28))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 192))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[((((int)threadIdx.z) * 4))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 64))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 128))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 42))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 192))]));
      compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 49))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 1))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 49))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 65))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 49))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 129))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 49))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 193))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 1))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 65))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 129))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 63))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 193))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 77))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 1))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 77))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 65))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 77))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 129))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 77))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 193))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 91))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 1))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 91))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 65))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 91))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 129))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 91))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 193))]));
      compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 2))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 66))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 130))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 98))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 194))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 2))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 66))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 130))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 112))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 194))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 2))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 66))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 130))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 126))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 194))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 2))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 66))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 130))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 140))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 194))]));
      compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 147))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 3))]));
      compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 147))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 67))]));
      compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 147))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 131))]));
      compute[(12)] = (compute[(12)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 147))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 195))]));
      compute[(1)] = (compute[(1)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 161))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 3))]));
      compute[(5)] = (compute[(5)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 161))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 67))]));
      compute[(9)] = (compute[(9)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 161))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 131))]));
      compute[(13)] = (compute[(13)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 161))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 195))]));
      compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 175))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 3))]));
      compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 175))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 67))]));
      compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 175))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 131))]));
      compute[(14)] = (compute[(14)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 175))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 195))]));
      compute[(3)] = (compute[(3)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 189))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 3))]));
      compute[(7)] = (compute[(7)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 189))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 67))]));
      compute[(11)] = (compute[(11)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 189))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 131))]));
      compute[(15)] = (compute[(15)] + (pad_temp_shared[(((((int)threadIdx.x) * 2) + 189))] * placeholder_shared[(((((int)threadIdx.z) * 4) + 195))]));
    }
  }
  T_relu[((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)))] = max((compute[(0)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 256))] = max((compute[(4)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 512))] = max((compute[(8)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 768))] = max((compute[(12)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 4))] = max((compute[(1)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 260))] = max((compute[(5)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 516))] = max((compute[(9)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 772))] = max((compute[(13)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 8))] = max((compute[(2)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 264))] = max((compute[(6)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 520))] = max((compute[(10)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 776))] = max((compute[(14)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 12))] = max((compute[(3)] + placeholder2[(((((int)blockIdx.z) * 64) + ((int)threadIdx.z)))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 268))] = max((compute[(7)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 524))] = max((compute[(11)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 32))]), 0.000000e+00f);
  T_relu[(((((((int)blockIdx.z) * 1024) + (((int)threadIdx.z) * 16)) + ((int)threadIdx.x)) + 780))] = max((compute[(15)] + placeholder2[((((((int)blockIdx.z) * 64) + ((int)threadIdx.z)) + 48))]), 0.000000e+00f);
}

extern "C" __global__ void fused_nn_conv2d_add_4_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_add, float* __restrict__ placeholder2) {
  float compute[12];
  __shared__ float pad_temp_shared[36];
  __shared__ float placeholder_shared[162];
  compute[(0)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 512; ++rc_outer) {
    __syncthreads();
    pad_temp_shared[((((((int)threadIdx.z) * 12) + (((int)threadIdx.y) * 3)) + (((int)threadIdx.x) * 2)))] = (((((1 <= ((((int)threadIdx.z) * 2) + (((((int)threadIdx.y) * 3) + (((int)threadIdx.x) * 2)) / 6))) && (((((int)threadIdx.z) * 2) + (((((int)threadIdx.y) * 3) + (((int)threadIdx.x) * 2)) / 6)) < 5)) && (1 <= (((((int)threadIdx.y) * 3) + (((int)threadIdx.x) * 2)) % 6))) && ((((((int)threadIdx.y) * 3) + (((int)threadIdx.x) * 2)) % 6) < 5)) ? placeholder[((((((rc_outer * 16) + (((int)threadIdx.z) * 8)) + ((((((int)threadIdx.y) * 3) + (((int)threadIdx.x) * 2)) / 6) * 4)) + (((((int)threadIdx.y) * 3) + (((int)threadIdx.x) * 2)) % 6)) - 5))] : 0.000000e+00f);
    if (((((int)threadIdx.z) * 2) + ((((((int)threadIdx.y) * 3) + (((int)threadIdx.x) * 2)) + 1) / 6)) < 6) {
      if ((((((int)threadIdx.z) * 12) + (((int)threadIdx.y) * 3)) + (((int)threadIdx.x) * 2)) < 35) {
        if (((((int)threadIdx.y) * 3) + (((int)threadIdx.x) * 2)) < 11) {
          if (((int)threadIdx.x) < 1) {
            pad_temp_shared[(((((((int)threadIdx.z) * 12) + (((int)threadIdx.y) * 3)) + (((int)threadIdx.x) * 2)) + 1))] = (((((1 <= ((((int)threadIdx.z) * 2) + ((((((int)threadIdx.y) * 3) + (((int)threadIdx.x) * 2)) + 1) / 6))) && (((((int)threadIdx.z) * 2) + ((((((int)threadIdx.y) * 3) + (((int)threadIdx.x) * 2)) + 1) / 6)) < 5)) && (1 <= ((((((int)threadIdx.y) * 3) + (((int)threadIdx.x) * 2)) + 1) % 6))) && (((((((int)threadIdx.y) * 3) + (((int)threadIdx.x) * 2)) + 1) % 6) < 5)) ? placeholder[((((((rc_outer * 16) + (((int)threadIdx.z) * 8)) + (((((((int)threadIdx.y) * 3) + (((int)threadIdx.x) * 2)) + 1) / 6) * 4)) + ((((((int)threadIdx.y) * 3) + (((int)threadIdx.x) * 2)) + 1) % 6)) - 5))] : 0.000000e+00f);
          }
        }
      }
    }
    placeholder_shared[((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 14)) + (((int)threadIdx.x) * 7)))] = placeholder1[((((((((int)blockIdx.z) * 82944) + (((int)threadIdx.z) * 27648)) + ((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) / 9) * 4608)) + (rc_outer * 9)) + (((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) % 9)))];
    placeholder_shared[(((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 14)) + (((int)threadIdx.x) * 7)) + 1))] = placeholder1[((((((((int)blockIdx.z) * 82944) + (((int)threadIdx.z) * 27648)) + (((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 1) / 9) * 4608)) + (rc_outer * 9)) + ((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 1) % 9)))];
    placeholder_shared[(((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 14)) + (((int)threadIdx.x) * 7)) + 2))] = placeholder1[((((((((int)blockIdx.z) * 82944) + (((int)threadIdx.z) * 27648)) + (((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 2) / 9) * 4608)) + (rc_outer * 9)) + ((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 2) % 9)))];
    placeholder_shared[(((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 14)) + (((int)threadIdx.x) * 7)) + 3))] = placeholder1[((((((((int)blockIdx.z) * 82944) + (((int)threadIdx.z) * 27648)) + (((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 3) / 9) * 4608)) + (rc_outer * 9)) + ((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 3) % 9)))];
    placeholder_shared[(((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 14)) + (((int)threadIdx.x) * 7)) + 4))] = placeholder1[((((((((int)blockIdx.z) * 82944) + (((int)threadIdx.z) * 27648)) + (((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 4) / 9) * 4608)) + (rc_outer * 9)) + ((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 4) % 9)))];
    if (((((int)threadIdx.z) * 6) + ((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 5) / 9)) < 18) {
      if (((((int)threadIdx.z) * 18) + ((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 5) / 3)) < 54) {
        if ((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 14)) + (((int)threadIdx.x) * 7)) < 157) {
          if (((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) < 49) {
            placeholder_shared[(((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 14)) + (((int)threadIdx.x) * 7)) + 5))] = placeholder1[((((((((int)blockIdx.z) * 82944) + (((int)threadIdx.z) * 27648)) + (((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 5) / 9) * 4608)) + (rc_outer * 9)) + ((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 5) % 9)))];
          }
        }
      }
    }
    if (((((int)threadIdx.z) * 6) + ((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 6) / 9)) < 18) {
      if (((((int)threadIdx.z) * 18) + (((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) / 3)) < 52) {
        if ((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 14)) + (((int)threadIdx.x) * 7)) < 156) {
          if (((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) < 48) {
            placeholder_shared[(((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 14)) + (((int)threadIdx.x) * 7)) + 6))] = placeholder1[((((((((int)blockIdx.z) * 82944) + (((int)threadIdx.z) * 27648)) + (((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 6) / 9) * 4608)) + (rc_outer * 9)) + ((((((int)threadIdx.y) * 14) + (((int)threadIdx.x) * 7)) + 6) % 9)))];
          }
        }
      }
    }
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)))] * placeholder_shared[((((int)threadIdx.z) * 9))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 27))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 54))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 81))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 108))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 135))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[((((int)threadIdx.z) * 9))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 27))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 54))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 81))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 108))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 135))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 28))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 55))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 82))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 109))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 136))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 1))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 28))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 55))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 82))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 109))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 136))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 29))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 56))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 83))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 110))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 137))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 2))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 29))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 56))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 83))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 110))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 137))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 3))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 30))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 57))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 84))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 111))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 6))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 138))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 30))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 57))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 84))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 111))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 138))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 4))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 31))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 58))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 85))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 112))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 7))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 139))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 31))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 58))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 85))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 112))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 139))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 5))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 32))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 59))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 86))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 113))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 8))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 140))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 32))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 59))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 86))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 113))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 9))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 140))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 33))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 60))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 87))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 114))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 12))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 141))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 6))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 33))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 60))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 87))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 114))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 141))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 7))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 34))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 61))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 88))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 115))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 13))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 142))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 7))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 34))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 61))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 88))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 115))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 142))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 8))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 35))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 62))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 89))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 116))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 14))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 143))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 8))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 35))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 62))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 89))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 116))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 6) + (((int)threadIdx.x) * 2)) + 15))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 143))]));
  }
  T_add[(((((((int)blockIdx.z) * 288) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)))] = (compute[(0)] + placeholder2[(((((int)blockIdx.z) * 18) + ((int)threadIdx.z)))]);
  T_add[((((((((int)blockIdx.z) * 288) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + 48))] = (compute[(2)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 3))]);
  T_add[((((((((int)blockIdx.z) * 288) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + 96))] = (compute[(4)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 6))]);
  T_add[((((((((int)blockIdx.z) * 288) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + 144))] = (compute[(6)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 9))]);
  T_add[((((((((int)blockIdx.z) * 288) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + 192))] = (compute[(8)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 12))]);
  T_add[((((((((int)blockIdx.z) * 288) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + 240))] = (compute[(10)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 15))]);
  T_add[((((((((int)blockIdx.z) * 288) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + 1))] = (compute[(1)] + placeholder2[(((((int)blockIdx.z) * 18) + ((int)threadIdx.z)))]);
  T_add[((((((((int)blockIdx.z) * 288) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + 49))] = (compute[(3)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 3))]);
  T_add[((((((((int)blockIdx.z) * 288) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + 97))] = (compute[(5)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 6))]);
  T_add[((((((((int)blockIdx.z) * 288) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + 145))] = (compute[(7)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 9))]);
  T_add[((((((((int)blockIdx.z) * 288) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + 193))] = (compute[(9)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 12))]);
  T_add[((((((((int)blockIdx.z) * 288) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + (((int)threadIdx.x) * 2)) + 241))] = (compute[(11)] + placeholder2[((((((int)blockIdx.z) * 18) + ((int)threadIdx.z)) + 15))]);
}

extern "C" __global__ void fused_cast_zeros_where_kernel0(float* __restrict__ T_where, signed char* __restrict__ placeholder, float* __restrict__ placeholder1) {
  for (int ax0_ax1_fused_ax2_fused_outer = 0; ax0_ax1_fused_ax2_fused_outer < 2; ++ax0_ax1_fused_ax2_fused_outer) {
    if ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) < 490560) {
      T_where[((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)))] = ((((float)((bool)placeholder[((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)))])) != 0.000000e+00f) ? placeholder1[((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)))] : 0.000000e+00f);
    }
  }
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_9_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[1122];
  __shared__ float placeholder_shared[18];
  float PaddedInput_shared_local[50];
  float placeholder_shared_local[9];
  float DepthwiseConv2d[8];
  #pragma unroll
  for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 36; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
    if (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 1122) {
      if ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 8) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.y)) < 281) {
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 2) + ((int)threadIdx.z)) < 71) {
          PaddedInput_shared[(((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))] = (((1 <= ((((int)blockIdx.y) * 32) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 561) / 17))) && (1 <= ((((int)blockIdx.x) * 16) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 17)))) ? placeholder[((((((((((int)blockIdx.z) * 32768) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) / 561) * 16384)) + (((int)blockIdx.y) * 4096)) + (((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 561) / 17) * 128)) + (((int)blockIdx.x) * 16)) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 17)) - 129))] : 0.000000e+00f);
        }
      }
    }
  }
  if ((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 18) {
    if (((((int)threadIdx.z) * 4) + ((int)threadIdx.y)) < 5) {
      placeholder_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))] = placeholder1[(((((((int)blockIdx.z) * 18) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))];
    }
  }
  __syncthreads();
  #pragma unroll
  for (int ax2 = 0; ax2 < 5; ++ax2) {
    #pragma unroll
    for (int ax3 = 0; ax3 < 5; ++ax3) {
      PaddedInput_shared_local[(((ax2 * 5) + ax3))] = PaddedInput_shared[((((((((int)threadIdx.z) * 561) + (((int)threadIdx.y) * 68)) + (ax2 * 17)) + (((int)threadIdx.x) * 4)) + ax3))];
      PaddedInput_shared_local[((((ax2 * 5) + ax3) + 25))] = PaddedInput_shared[(((((((((int)threadIdx.z) * 561) + (((int)threadIdx.y) * 68)) + (ax2 * 17)) + (((int)threadIdx.x) * 4)) + ax3) + 272))];
    }
  }
  #pragma unroll
  for (int ax21 = 0; ax21 < 3; ++ax21) {
    #pragma unroll
    for (int ax31 = 0; ax31 < 3; ++ax31) {
      placeholder_shared_local[(((ax21 * 3) + ax31))] = placeholder_shared[((((((int)threadIdx.z) * 9) + (ax21 * 3)) + ax31))];
    }
  }
  #pragma unroll
  for (int i = 0; i < 2; ++i) {
    #pragma unroll
    for (int j = 0; j < 2; ++j) {
      DepthwiseConv2d[(((i * 2) + j))] = 0.000000e+00f;
      DepthwiseConv2d[((((i * 2) + j) + 4))] = 0.000000e+00f;
      #pragma unroll
      for (int di = 0; di < 3; ++di) {
        #pragma unroll
        for (int dj = 0; dj < 3; ++dj) {
          DepthwiseConv2d[(((i * 2) + j))] = (DepthwiseConv2d[(((i * 2) + j))] + (PaddedInput_shared_local[(((((i * 10) + (di * 5)) + (j * 2)) + dj))] * placeholder_shared_local[(((di * 3) + dj))]));
          DepthwiseConv2d[((((i * 2) + j) + 4))] = (DepthwiseConv2d[((((i * 2) + j) + 4))] + (PaddedInput_shared_local[((((((i * 10) + (di * 5)) + (j * 2)) + dj) + 25))] * placeholder_shared_local[(((di * 3) + dj))]));
        }
      }
    }
  }
  #pragma unroll
  for (int ax2_inner_inner_inner = 0; ax2_inner_inner_inner < 2; ++ax2_inner_inner_inner) {
    #pragma unroll
    for (int ax3_inner_inner_inner = 0; ax3_inner_inner_inner < 2; ++ax3_inner_inner_inner) {
      T_relu[(((((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (ax2_inner_inner_inner * 64)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner))] = max((DepthwiseConv2d[(((ax2_inner_inner_inner * 2) + ax3_inner_inner_inner))] + placeholder2[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]), 0.000000e+00f);
      T_relu[((((((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (ax2_inner_inner_inner * 64)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 512))] = max((DepthwiseConv2d[((((ax2_inner_inner_inner * 2) + ax3_inner_inner_inner) + 4))] + placeholder2[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]), 0.000000e+00f);
    }
  }
}

extern "C" __global__ void fused_strided_slice_strided_slice_concatenate_8_kernel0(float* __restrict__ T_concat, float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ placeholder2) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 36792) {
    T_concat[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((2 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 4) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) - 2))] : ((1 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder1[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 70))] : placeholder2[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 71))]));
  }
}

extern "C" __global__ void fused_vision_non_max_suppression_kernel5(float* __restrict__ placeholder, int* __restrict__ placeholder1, float* __restrict__ argsort_gpu_v2, float* __restrict__ placeholder2, int* __restrict__ argsort_gpu_v1, float* __restrict__ fetch_score, float* __restrict__ argsort_gpu_v0, int* __restrict__ argsort_gpu_v3) {
  if ((0.000000e+00f < placeholder[(0)]) && (0 < placeholder1[(0)])) {
    if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < ((400 < placeholder1[(0)]) ? 400 : placeholder1[(0)])) {
      argsort_gpu_v2[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 4)))] = placeholder2[(((argsort_gpu_v1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] * 6) + 2))];
      argsort_gpu_v2[((((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 4)) + 1))] = placeholder2[(((argsort_gpu_v1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] * 6) + 3))];
      argsort_gpu_v2[((((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 4)) + 2))] = placeholder2[(((argsort_gpu_v1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] * 6) + 4))];
      argsort_gpu_v2[((((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 4)) + 3))] = placeholder2[(((argsort_gpu_v1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] * 6) + 5))];
      fetch_score[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = placeholder2[(((argsort_gpu_v1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] * 6) + 1))];
      argsort_gpu_v0[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = placeholder2[((argsort_gpu_v1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] * 6))];
    } else {
      if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 490560) {
        argsort_gpu_v2[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 4)))] = -1.000000e+00f;
        argsort_gpu_v2[((((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 4)) + 1))] = -1.000000e+00f;
        argsort_gpu_v2[((((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 4)) + 2))] = -1.000000e+00f;
        argsort_gpu_v2[((((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 4)) + 3))] = -1.000000e+00f;
        fetch_score[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = -1.000000e+00f;
        argsort_gpu_v0[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = -1.000000e+00f;
      }
    }
  } else {
    if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 490560) {
      argsort_gpu_v2[(((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 4)))] = placeholder2[((((((int)blockIdx.x) * 6144) + (((int)threadIdx.x) * 6)) + 2))];
      argsort_gpu_v2[((((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 4)) + 1))] = placeholder2[((((((int)blockIdx.x) * 6144) + (((int)threadIdx.x) * 6)) + 3))];
      argsort_gpu_v2[((((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 4)) + 2))] = placeholder2[((((((int)blockIdx.x) * 6144) + (((int)threadIdx.x) * 6)) + 4))];
      argsort_gpu_v2[((((((int)blockIdx.x) * 4096) + (((int)threadIdx.x) * 4)) + 3))] = placeholder2[((((((int)blockIdx.x) * 6144) + (((int)threadIdx.x) * 6)) + 5))];
      fetch_score[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = placeholder2[((((((int)blockIdx.x) * 6144) + (((int)threadIdx.x) * 6)) + 1))];
      argsort_gpu_v0[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = placeholder2[(((((int)blockIdx.x) * 6144) + (((int)threadIdx.x) * 6)))];
      argsort_gpu_v3[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((((int)blockIdx.x) * 1024) + ((int)threadIdx.x));
    }
  }
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_2_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float compute[32];
  __shared__ float pad_temp_shared[64];
  __shared__ float placeholder_shared[128];
  #pragma unroll
  for (int ff_init = 0; ff_init < 2; ++ff_init) {
    compute[(ff_init)] = 0.000000e+00f;
    compute[((ff_init + 4))] = 0.000000e+00f;
    compute[((ff_init + 8))] = 0.000000e+00f;
    compute[((ff_init + 12))] = 0.000000e+00f;
    compute[((ff_init + 16))] = 0.000000e+00f;
    compute[((ff_init + 20))] = 0.000000e+00f;
    compute[((ff_init + 24))] = 0.000000e+00f;
    compute[((ff_init + 28))] = 0.000000e+00f;
    compute[((ff_init + 2))] = 0.000000e+00f;
    compute[((ff_init + 6))] = 0.000000e+00f;
    compute[((ff_init + 10))] = 0.000000e+00f;
    compute[((ff_init + 14))] = 0.000000e+00f;
    compute[((ff_init + 18))] = 0.000000e+00f;
    compute[((ff_init + 22))] = 0.000000e+00f;
    compute[((ff_init + 26))] = 0.000000e+00f;
    compute[((ff_init + 30))] = 0.000000e+00f;
  }
  for (int rc_outer = 0; rc_outer < 256; ++rc_outer) {
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 16) + ((int)threadIdx.x)))] = placeholder[(((((((rc_outer * 2048) + ((((int)threadIdx.z) >> 1) * 1024)) + (((int)blockIdx.y) * 64)) + ((((int)threadIdx.z) & 1) * 32)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)))];
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = placeholder1[((((((((int)blockIdx.z) * 32768) + (((int)threadIdx.z) * 8192)) + (((int)threadIdx.x) * 512)) + (rc_outer * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))];
    }
    __syncthreads();
    #pragma unroll
    for (int rc_inner = 0; rc_inner < 2; ++rc_inner) {
      #pragma unroll
      for (int ff = 0; ff < 2; ++ff) {
        compute[(ff)] = (compute[(ff)] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner))]));
        compute[((ff + 4))] = (compute[((ff + 4))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 16))]));
        compute[((ff + 8))] = (compute[((ff + 8))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 32))]));
        compute[((ff + 12))] = (compute[((ff + 12))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 48))]));
        compute[((ff + 16))] = (compute[((ff + 16))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 64))]));
        compute[((ff + 20))] = (compute[((ff + 20))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 80))]));
        compute[((ff + 24))] = (compute[((ff + 24))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 96))]));
        compute[((ff + 28))] = (compute[((ff + 28))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 112))]));
        compute[((ff + 2))] = (compute[((ff + 2))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner))]));
        compute[((ff + 6))] = (compute[((ff + 6))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 16))]));
        compute[((ff + 10))] = (compute[((ff + 10))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 32))]));
        compute[((ff + 14))] = (compute[((ff + 14))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 48))]));
        compute[((ff + 18))] = (compute[((ff + 18))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 64))]));
        compute[((ff + 22))] = (compute[((ff + 22))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 80))]));
        compute[((ff + 26))] = (compute[((ff + 26))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 96))]));
        compute[((ff + 30))] = (compute[((ff + 30))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 112))]));
      }
    }
  }
  #pragma unroll
  for (int ax1_inner_inner_inner = 0; ax1_inner_inner_inner < 2; ++ax1_inner_inner_inner) {
    T_relu[(((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)))] = max((compute[(ax1_inner_inner_inner)] + placeholder2[((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 8192))] = max((compute[((ax1_inner_inner_inner + 4))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 8))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 16384))] = max((compute[((ax1_inner_inner_inner + 8))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 16))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 24576))] = max((compute[((ax1_inner_inner_inner + 12))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 24))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 32768))] = max((compute[((ax1_inner_inner_inner + 16))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 32))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 40960))] = max((compute[((ax1_inner_inner_inner + 20))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 40))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 49152))] = max((compute[((ax1_inner_inner_inner + 24))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 48))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 57344))] = max((compute[((ax1_inner_inner_inner + 28))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 56))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 32))] = max((compute[((ax1_inner_inner_inner + 2))] + placeholder2[((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 8224))] = max((compute[((ax1_inner_inner_inner + 6))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 8))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 16416))] = max((compute[((ax1_inner_inner_inner + 10))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 16))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 24608))] = max((compute[((ax1_inner_inner_inner + 14))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 24))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 32800))] = max((compute[((ax1_inner_inner_inner + 18))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 32))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 40992))] = max((compute[((ax1_inner_inner_inner + 22))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 40))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 49184))] = max((compute[((ax1_inner_inner_inner + 26))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 48))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 57376))] = max((compute[((ax1_inner_inner_inner + 30))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 56))]), 0.000000e+00f);
  }
}

extern "C" __global__ void fused_strided_slice_strided_slice_concatenate_1_kernel0(float* __restrict__ T_concat, float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ placeholder2) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 36792) {
    T_concat[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((2 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 4) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) - 2))] : ((1 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder1[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 63))] : placeholder2[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 64))]));
  }
}

extern "C" __global__ void fused_strided_slice_strided_slice_concatenate_6_kernel0(float* __restrict__ T_concat, float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ placeholder2) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 36792) {
    T_concat[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((2 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 4) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) - 2))] : ((1 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder1[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 68))] : placeholder2[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 69))]));
  }
}

extern "C" __global__ void fused_transpose_nn_batch_flatten_transpose_nn_batch_flatten_transpose_nn_batch_f_8810502739128911189__kernel0(float* __restrict__ T_reshape, float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ placeholder2, float* __restrict__ placeholder3, float* __restrict__ placeholder4, float* __restrict__ placeholder5) {
  for (int ax0_ax1_fused_ax2_fused_outer = 0; ax0_ax1_fused_ax2_fused_outer < 2; ++ax0_ax1_fused_ax2_fused_outer) {
    if ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) < 496692) {
      T_reshape[((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)))] = ((496368 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? placeholder[(((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 324))] : ((495072 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? placeholder1[(((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 324) * 4) + (((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 1296) / 324)))] : ((487296 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? placeholder2[(((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) + 162) % 486) * 16) + (((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) + 2592) % 7776) / 1944) * 4)) + ((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) + 648) % 1944) / 486)))] : ((456192 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? placeholder3[(((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) + 162) % 486) * 64) + (((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) + 10368) % 31104) / 3888) * 8)) + ((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) + 2592) % 3888) / 486)))] : ((331776 <= (((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x))) ? placeholder4[(((((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) + 162) % 486) * 256) + (((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) + 41472) % 124416) / 7776) * 16)) + ((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) + 2592) % 7776) / 486)))] : placeholder5[(((((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) % 324) * 1024) + ((((ax0_ax1_fused_ax2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 324)))])))));
    }
  }
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_7_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[360];
  __shared__ float placeholder_shared[18];
  float PaddedInput_shared_local[32];
  float placeholder_shared_local[9];
  float DepthwiseConv2d[8];
  #pragma unroll
  for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 12; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
    if (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 360) {
      if ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 8) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.y)) < 90) {
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 2) + ((int)threadIdx.z)) < 23) {
          PaddedInput_shared[(((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))] = (((((1 <= ((((int)blockIdx.y) * 16) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 180) / 10))) && (((((int)blockIdx.y) * 16) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 180) / 10)) < 65)) && (1 <= ((((int)blockIdx.x) * 8) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 10)))) && (((((int)blockIdx.x) * 8) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 10)) < 65)) ? placeholder[((((((((((int)blockIdx.z) * 8192) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) / 180) * 4096)) + (((int)blockIdx.y) * 1024)) + (((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 180) / 10) * 64)) + (((int)blockIdx.x) * 8)) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 10)) - 65))] : 0.000000e+00f);
        }
      }
    }
  }
  if ((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 18) {
    if (((((int)threadIdx.z) * 4) + ((int)threadIdx.y)) < 5) {
      placeholder_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))] = placeholder1[(((((((int)blockIdx.z) * 18) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))];
    }
  }
  __syncthreads();
  #pragma unroll
  for (int ax2 = 0; ax2 < 4; ++ax2) {
    #pragma unroll
    for (int ax3 = 0; ax3 < 4; ++ax3) {
      PaddedInput_shared_local[(((ax2 * 4) + ax3))] = PaddedInput_shared[((((((((int)threadIdx.z) * 180) + (((int)threadIdx.y) * 20)) + (ax2 * 10)) + (((int)threadIdx.x) * 2)) + ax3))];
      PaddedInput_shared_local[((((ax2 * 4) + ax3) + 16))] = PaddedInput_shared[(((((((((int)threadIdx.z) * 180) + (((int)threadIdx.y) * 20)) + (ax2 * 10)) + (((int)threadIdx.x) * 2)) + ax3) + 80))];
    }
  }
  #pragma unroll
  for (int ax21 = 0; ax21 < 3; ++ax21) {
    #pragma unroll
    for (int ax31 = 0; ax31 < 3; ++ax31) {
      placeholder_shared_local[(((ax21 * 3) + ax31))] = placeholder_shared[((((((int)threadIdx.z) * 9) + (ax21 * 3)) + ax31))];
    }
  }
  #pragma unroll
  for (int i = 0; i < 2; ++i) {
    #pragma unroll
    for (int j = 0; j < 2; ++j) {
      DepthwiseConv2d[(((i * 2) + j))] = 0.000000e+00f;
      DepthwiseConv2d[((((i * 2) + j) + 4))] = 0.000000e+00f;
      #pragma unroll
      for (int di = 0; di < 3; ++di) {
        #pragma unroll
        for (int dj = 0; dj < 3; ++dj) {
          DepthwiseConv2d[(((i * 2) + j))] = (DepthwiseConv2d[(((i * 2) + j))] + (PaddedInput_shared_local[(((((i * 4) + (di * 4)) + j) + dj))] * placeholder_shared_local[(((di * 3) + dj))]));
          DepthwiseConv2d[((((i * 2) + j) + 4))] = (DepthwiseConv2d[((((i * 2) + j) + 4))] + (PaddedInput_shared_local[((((((i * 4) + (di * 4)) + j) + dj) + 16))] * placeholder_shared_local[(((di * 3) + dj))]));
        }
      }
    }
  }
  #pragma unroll
  for (int ax2_inner_inner_inner = 0; ax2_inner_inner_inner < 2; ++ax2_inner_inner_inner) {
    #pragma unroll
    for (int ax3_inner_inner_inner = 0; ax3_inner_inner_inner < 2; ++ax3_inner_inner_inner) {
      T_relu[(((((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (ax2_inner_inner_inner * 64)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner))] = max((DepthwiseConv2d[(((ax2_inner_inner_inner * 2) + ax3_inner_inner_inner))] + placeholder2[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]), 0.000000e+00f);
      T_relu[((((((((((((int)blockIdx.z) * 8192) + (((int)threadIdx.z) * 4096)) + (((int)blockIdx.y) * 1024)) + (((int)threadIdx.y) * 128)) + (ax2_inner_inner_inner * 64)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 512))] = max((DepthwiseConv2d[((((ax2_inner_inner_inner * 2) + ax3_inner_inner_inner) + 4))] + placeholder2[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]), 0.000000e+00f);
    }
  }
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_4_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float compute[32];
  __shared__ float pad_temp_shared[64];
  __shared__ float placeholder_shared[128];
  #pragma unroll
  for (int ff_init = 0; ff_init < 2; ++ff_init) {
    compute[(ff_init)] = 0.000000e+00f;
    compute[((ff_init + 4))] = 0.000000e+00f;
    compute[((ff_init + 8))] = 0.000000e+00f;
    compute[((ff_init + 12))] = 0.000000e+00f;
    compute[((ff_init + 16))] = 0.000000e+00f;
    compute[((ff_init + 20))] = 0.000000e+00f;
    compute[((ff_init + 24))] = 0.000000e+00f;
    compute[((ff_init + 28))] = 0.000000e+00f;
    compute[((ff_init + 2))] = 0.000000e+00f;
    compute[((ff_init + 6))] = 0.000000e+00f;
    compute[((ff_init + 10))] = 0.000000e+00f;
    compute[((ff_init + 14))] = 0.000000e+00f;
    compute[((ff_init + 18))] = 0.000000e+00f;
    compute[((ff_init + 22))] = 0.000000e+00f;
    compute[((ff_init + 26))] = 0.000000e+00f;
    compute[((ff_init + 30))] = 0.000000e+00f;
  }
  for (int rc_outer = 0; rc_outer < 128; ++rc_outer) {
    __syncthreads();
    pad_temp_shared[(((((int)threadIdx.z) * 16) + ((int)threadIdx.x)))] = placeholder[(((((((rc_outer * 2048) + ((((int)threadIdx.z) >> 1) * 1024)) + (((int)blockIdx.y) * 64)) + ((((int)threadIdx.z) & 1) * 32)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)))];
    #pragma unroll
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 2; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      placeholder_shared[((((((int)threadIdx.z) * 32) + (((int)threadIdx.x) * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = placeholder1[((((((((int)blockIdx.z) * 16384) + (((int)threadIdx.z) * 4096)) + (((int)threadIdx.x) * 256)) + (rc_outer * 2)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))];
    }
    __syncthreads();
    #pragma unroll
    for (int rc_inner = 0; rc_inner < 2; ++rc_inner) {
      #pragma unroll
      for (int ff = 0; ff < 2; ++ff) {
        compute[(ff)] = (compute[(ff)] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner))]));
        compute[((ff + 4))] = (compute[((ff + 4))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 16))]));
        compute[((ff + 8))] = (compute[((ff + 8))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 32))]));
        compute[((ff + 12))] = (compute[((ff + 12))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 48))]));
        compute[((ff + 16))] = (compute[((ff + 16))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 64))]));
        compute[((ff + 20))] = (compute[((ff + 20))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 80))]));
        compute[((ff + 24))] = (compute[((ff + 24))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 96))]));
        compute[((ff + 28))] = (compute[((ff + 28))] + (pad_temp_shared[(((rc_inner * 32) + ((int)threadIdx.x)))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 112))]));
        compute[((ff + 2))] = (compute[((ff + 2))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner))]));
        compute[((ff + 6))] = (compute[((ff + 6))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 16))]));
        compute[((ff + 10))] = (compute[((ff + 10))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 32))]));
        compute[((ff + 14))] = (compute[((ff + 14))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 48))]));
        compute[((ff + 18))] = (compute[((ff + 18))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 64))]));
        compute[((ff + 22))] = (compute[((ff + 22))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 80))]));
        compute[((ff + 26))] = (compute[((ff + 26))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 96))]));
        compute[((ff + 30))] = (compute[((ff + 30))] + (pad_temp_shared[((((rc_inner * 32) + ((int)threadIdx.x)) + 16))] * placeholder_shared[(((((((int)threadIdx.z) * 4) + (ff * 2)) + rc_inner) + 112))]));
      }
    }
  }
  #pragma unroll
  for (int ax1_inner_inner_inner = 0; ax1_inner_inner_inner < 2; ++ax1_inner_inner_inner) {
    T_relu[(((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)))] = max((compute[(ax1_inner_inner_inner)] + placeholder2[((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 8192))] = max((compute[((ax1_inner_inner_inner + 4))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 8))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 16384))] = max((compute[((ax1_inner_inner_inner + 8))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 16))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 24576))] = max((compute[((ax1_inner_inner_inner + 12))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 24))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 32768))] = max((compute[((ax1_inner_inner_inner + 16))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 32))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 40960))] = max((compute[((ax1_inner_inner_inner + 20))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 40))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 49152))] = max((compute[((ax1_inner_inner_inner + 24))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 48))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 57344))] = max((compute[((ax1_inner_inner_inner + 28))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 56))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 32))] = max((compute[((ax1_inner_inner_inner + 2))] + placeholder2[((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 8224))] = max((compute[((ax1_inner_inner_inner + 6))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 8))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 16416))] = max((compute[((ax1_inner_inner_inner + 10))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 16))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 24608))] = max((compute[((ax1_inner_inner_inner + 14))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 24))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 32800))] = max((compute[((ax1_inner_inner_inner + 18))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 32))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 40992))] = max((compute[((ax1_inner_inner_inner + 22))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 40))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 49184))] = max((compute[((ax1_inner_inner_inner + 26))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 48))]), 0.000000e+00f);
    T_relu[((((((((((int)blockIdx.z) * 65536) + (((int)threadIdx.z) * 2048)) + (ax1_inner_inner_inner * 1024)) + (((int)blockIdx.y) * 64)) + (((int)blockIdx.x) * 16)) + ((int)threadIdx.x)) + 57376))] = max((compute[((ax1_inner_inner_inner + 30))] + placeholder2[(((((((int)blockIdx.z) * 64) + (((int)threadIdx.z) * 2)) + ax1_inner_inner_inner) + 56))]), 0.000000e+00f);
  }
}

extern "C" __global__ void fused_strided_slice_strided_slice_concatenate_11_kernel0(float* __restrict__ T_concat, float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ placeholder2) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 36792) {
    T_concat[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((2 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 4) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) - 2))] : ((1 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder1[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 73))] : placeholder2[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 74))]));
  }
}

extern "C" __global__ void fused_nn_conv2d_add_8_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_add, float* __restrict__ placeholder2) {
  float compute[12];
  __shared__ float pad_temp_shared[180];
  __shared__ float placeholder_shared[216];
  compute[(0)] = 0.000000e+00f;
  compute[(2)] = 0.000000e+00f;
  compute[(4)] = 0.000000e+00f;
  compute[(6)] = 0.000000e+00f;
  compute[(8)] = 0.000000e+00f;
  compute[(10)] = 0.000000e+00f;
  compute[(1)] = 0.000000e+00f;
  compute[(3)] = 0.000000e+00f;
  compute[(5)] = 0.000000e+00f;
  compute[(7)] = 0.000000e+00f;
  compute[(9)] = 0.000000e+00f;
  compute[(11)] = 0.000000e+00f;
  for (int rc_outer = 0; rc_outer < 1024; ++rc_outer) {
    __syncthreads();
    if ((((((int)threadIdx.z) * 45) + (((int)threadIdx.y) * 6)) + ((int)threadIdx.x)) < 180) {
      if (((((int)threadIdx.y) * 6) + ((int)threadIdx.x)) < 45) {
        if (((int)threadIdx.x) < 6) {
          pad_temp_shared[((((((int)threadIdx.z) * 45) + (((int)threadIdx.y) * 6)) + ((int)threadIdx.x)))] = (((((1 <= ((((int)blockIdx.y) * 8) + ((((((int)threadIdx.z) * 45) + (((int)threadIdx.y) * 6)) + ((int)threadIdx.x)) / 18))) && (((((int)blockIdx.y) * 8) + ((((((int)threadIdx.z) * 45) + (((int)threadIdx.y) * 6)) + ((int)threadIdx.x)) / 18)) < 17)) && (1 <= ((((((int)threadIdx.z) * 45) + (((int)threadIdx.y) * 6)) + ((int)threadIdx.x)) % 18))) && (((((((int)threadIdx.z) * 45) + (((int)threadIdx.y) * 6)) + ((int)threadIdx.x)) % 18) < 17)) ? placeholder[((((((rc_outer * 256) + (((int)blockIdx.y) * 128)) + (((((((int)threadIdx.z) * 45) + (((int)threadIdx.y) * 6)) + ((int)threadIdx.x)) / 18) * 16)) + ((((((int)threadIdx.z) * 45) + (((int)threadIdx.y) * 6)) + ((int)threadIdx.x)) % 18)) - 17))] : 0.000000e+00f);
        }
      }
    }
    if (((((int)threadIdx.z) * 6) + (((((int)threadIdx.y) * 7) + ((int)threadIdx.x)) / 9)) < 24) {
      if (((((int)threadIdx.z) * 18) + (((((int)threadIdx.y) * 7) + ((int)threadIdx.x)) / 3)) < 72) {
        if ((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)) < 216) {
          if (((((int)threadIdx.y) * 7) + ((int)threadIdx.x)) < 54) {
            if (((int)threadIdx.x) < 7) {
              placeholder_shared[((((((int)threadIdx.z) * 54) + (((int)threadIdx.y) * 7)) + ((int)threadIdx.x)))] = placeholder1[(((((((int)threadIdx.z) * 55296) + ((((((int)threadIdx.y) * 7) + ((int)threadIdx.x)) / 9) * 9216)) + (rc_outer * 9)) + (((((int)threadIdx.y) * 7) + ((int)threadIdx.x)) % 9)))];
            }
          }
        }
      }
    }
    __syncthreads();
    compute[(0)] = (compute[(0)] + (pad_temp_shared[(((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)))] * placeholder_shared[((((int)threadIdx.z) * 9))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[(((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 36))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[(((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 72))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[(((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 108))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[(((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 144))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[(((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 180))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[((((int)threadIdx.z) * 9))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 36))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 72))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 108))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 144))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 180))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 1))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 37))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 73))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 109))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 145))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 1))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 181))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 1))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 37))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 73))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 109))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 145))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 181))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 2))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 38))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 74))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 110))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 146))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 2))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 182))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 2))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 38))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 74))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 110))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 146))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 3))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 182))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 3))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 39))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 75))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 111))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 147))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 18))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 183))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 3))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 39))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 75))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 111))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 147))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 183))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 4))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 40))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 76))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 112))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 148))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 19))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 184))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 4))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 40))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 76))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 112))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 148))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 184))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 5))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 41))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 77))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 113))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 149))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 20))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 185))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 5))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 41))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 77))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 113))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 149))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 21))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 185))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 6))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 42))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 78))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 114))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 150))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 36))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 186))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 6))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 42))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 78))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 114))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 150))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 186))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 7))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 43))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 79))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 115))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 151))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 37))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 187))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 7))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 43))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 79))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 115))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 151))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 187))]));
    compute[(0)] = (compute[(0)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 8))]));
    compute[(2)] = (compute[(2)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 44))]));
    compute[(4)] = (compute[(4)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 80))]));
    compute[(6)] = (compute[(6)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 116))]));
    compute[(8)] = (compute[(8)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 152))]));
    compute[(10)] = (compute[(10)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 38))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 188))]));
    compute[(1)] = (compute[(1)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 39))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 8))]));
    compute[(3)] = (compute[(3)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 39))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 44))]));
    compute[(5)] = (compute[(5)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 39))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 80))]));
    compute[(7)] = (compute[(7)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 39))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 116))]));
    compute[(9)] = (compute[(9)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 39))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 152))]));
    compute[(11)] = (compute[(11)] + (pad_temp_shared[((((((int)threadIdx.y) * 18) + (((int)threadIdx.x) * 2)) + 39))] * placeholder_shared[(((((int)threadIdx.z) * 9) + 188))]));
  }
  T_add[(((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)))] = (compute[(0)] + placeholder2[(((int)threadIdx.z))]);
  T_add[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1024))] = (compute[(2)] + placeholder2[((((int)threadIdx.z) + 4))]);
  T_add[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 2048))] = (compute[(4)] + placeholder2[((((int)threadIdx.z) + 8))]);
  T_add[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 3072))] = (compute[(6)] + placeholder2[((((int)threadIdx.z) + 12))]);
  T_add[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 4096))] = (compute[(8)] + placeholder2[((((int)threadIdx.z) + 16))]);
  T_add[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 5120))] = (compute[(10)] + placeholder2[((((int)threadIdx.z) + 20))]);
  T_add[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1))] = (compute[(1)] + placeholder2[(((int)threadIdx.z))]);
  T_add[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 1025))] = (compute[(3)] + placeholder2[((((int)threadIdx.z) + 4))]);
  T_add[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 2049))] = (compute[(5)] + placeholder2[((((int)threadIdx.z) + 8))]);
  T_add[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 3073))] = (compute[(7)] + placeholder2[((((int)threadIdx.z) + 12))]);
  T_add[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 4097))] = (compute[(9)] + placeholder2[((((int)threadIdx.z) + 16))]);
  T_add[((((((((int)threadIdx.z) * 256) + (((int)blockIdx.y) * 128)) + (((int)threadIdx.y) * 16)) + (((int)threadIdx.x) * 2)) + 5121))] = (compute[(11)] + placeholder2[((((int)threadIdx.z) + 20))]);
}

extern "C" __global__ void fused_strided_slice_strided_slice_concatenate_14_kernel0(float* __restrict__ T_concat, float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ placeholder2) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 36792) {
    T_concat[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((2 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 4) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) - 2))] : ((1 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder1[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 76))] : placeholder2[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 77))]));
  }
}

extern "C" __global__ void fused_strided_slice_strided_slice_concatenate_12_kernel0(float* __restrict__ T_concat, float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ placeholder2) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 36792) {
    T_concat[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = ((2 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 4) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) - 2))] : ((1 <= (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) ? placeholder1[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 74))] : placeholder2[(((((((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) / 6) * 80) + (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) % 6)) + 75))]));
  }
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_5_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  __shared__ float PaddedInput_shared[1122];
  __shared__ float placeholder_shared[18];
  float PaddedInput_shared_local[50];
  float placeholder_shared_local[9];
  float DepthwiseConv2d[8];
  #pragma unroll
  for (int ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer = 0; ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer < 36; ++ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer) {
    if (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 1122) {
      if ((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 8) + (((int)threadIdx.z) * 4)) + ((int)threadIdx.y)) < 281) {
        if (((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 2) + ((int)threadIdx.z)) < 71) {
          PaddedInput_shared[(((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))] = (((1 <= ((((int)blockIdx.y) * 32) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 561) / 17))) && (1 <= ((((int)blockIdx.x) * 16) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 17)))) ? placeholder[((((((((((int)blockIdx.z) * 8192) + ((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) / 561) * 4096)) + (((int)blockIdx.y) * 2048)) + (((((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 561) / 17) * 64)) + (((int)blockIdx.x) * 16)) + (((((ax0_ax1_fused_ax2_fused_ax3_fused_outer_outer_outer * 32) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) % 17)) - 65))] : 0.000000e+00f);
        }
      }
    }
  }
  if ((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)) < 18) {
    if (((((int)threadIdx.z) * 4) + ((int)threadIdx.y)) < 5) {
      placeholder_shared[((((((int)threadIdx.z) * 16) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))] = placeholder1[(((((((int)blockIdx.z) * 18) + (((int)threadIdx.z) * 16)) + (((int)threadIdx.y) * 4)) + ((int)threadIdx.x)))];
    }
  }
  __syncthreads();
  #pragma unroll
  for (int ax2 = 0; ax2 < 5; ++ax2) {
    #pragma unroll
    for (int ax3 = 0; ax3 < 5; ++ax3) {
      PaddedInput_shared_local[(((ax2 * 5) + ax3))] = PaddedInput_shared[((((((((int)threadIdx.z) * 561) + (((int)threadIdx.y) * 68)) + (ax2 * 17)) + (((int)threadIdx.x) * 4)) + ax3))];
      PaddedInput_shared_local[((((ax2 * 5) + ax3) + 25))] = PaddedInput_shared[(((((((((int)threadIdx.z) * 561) + (((int)threadIdx.y) * 68)) + (ax2 * 17)) + (((int)threadIdx.x) * 4)) + ax3) + 272))];
    }
  }
  #pragma unroll
  for (int ax21 = 0; ax21 < 3; ++ax21) {
    #pragma unroll
    for (int ax31 = 0; ax31 < 3; ++ax31) {
      placeholder_shared_local[(((ax21 * 3) + ax31))] = placeholder_shared[((((((int)threadIdx.z) * 9) + (ax21 * 3)) + ax31))];
    }
  }
  #pragma unroll
  for (int i = 0; i < 2; ++i) {
    #pragma unroll
    for (int j = 0; j < 2; ++j) {
      DepthwiseConv2d[(((i * 2) + j))] = 0.000000e+00f;
      DepthwiseConv2d[((((i * 2) + j) + 4))] = 0.000000e+00f;
      #pragma unroll
      for (int di = 0; di < 3; ++di) {
        #pragma unroll
        for (int dj = 0; dj < 3; ++dj) {
          DepthwiseConv2d[(((i * 2) + j))] = (DepthwiseConv2d[(((i * 2) + j))] + (PaddedInput_shared_local[(((((i * 10) + (di * 5)) + (j * 2)) + dj))] * placeholder_shared_local[(((di * 3) + dj))]));
          DepthwiseConv2d[((((i * 2) + j) + 4))] = (DepthwiseConv2d[((((i * 2) + j) + 4))] + (PaddedInput_shared_local[((((((i * 10) + (di * 5)) + (j * 2)) + dj) + 25))] * placeholder_shared_local[(((di * 3) + dj))]));
        }
      }
    }
  }
  #pragma unroll
  for (int ax2_inner_inner_inner = 0; ax2_inner_inner_inner < 2; ++ax2_inner_inner_inner) {
    #pragma unroll
    for (int ax3_inner_inner_inner = 0; ax3_inner_inner_inner < 2; ++ax3_inner_inner_inner) {
      T_relu[(((((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 512)) + (((int)threadIdx.y) * 64)) + (ax2_inner_inner_inner * 32)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner))] = max((DepthwiseConv2d[(((ax2_inner_inner_inner * 2) + ax3_inner_inner_inner))] + placeholder2[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]), 0.000000e+00f);
      T_relu[((((((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 1024)) + (((int)blockIdx.y) * 512)) + (((int)threadIdx.y) * 64)) + (ax2_inner_inner_inner * 32)) + (((int)blockIdx.x) * 8)) + (((int)threadIdx.x) * 2)) + ax3_inner_inner_inner) + 256))] = max((DepthwiseConv2d[((((ax2_inner_inner_inner * 2) + ax3_inner_inner_inner) + 4))] + placeholder2[(((((int)blockIdx.z) * 2) + ((int)threadIdx.z)))]), 0.000000e+00f);
    }
  }
}

extern "C" __global__ void fused_nn_softmax_kernel1(float* __restrict__ T_softmax_exp, float* __restrict__ placeholder, float* __restrict__ T_softmax_maxelem) {
  for (int i0_i1_fused_i2_fused_outer = 0; i0_i1_fused_i2_fused_outer < 2; ++i0_i1_fused_i2_fused_outer) {
    if ((((i0_i1_fused_i2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) < 496692) {
      T_softmax_exp[((((i0_i1_fused_i2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)))] = __expf((placeholder[((((i0_i1_fused_i2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)))] - T_softmax_maxelem[(((((i0_i1_fused_i2_fused_outer * 262144) + (((int)blockIdx.x) * 1024)) + ((int)threadIdx.x)) / 81))]));
    }
  }
}

extern "C" __global__ void fused_nn_conv2d_add_nn_relu_21_kernel0(float* __restrict__ placeholder, float* __restrict__ placeholder1, float* __restrict__ T_relu, float* __restrict__ placeholder2) {
  float compute[16];
  __shared__ float pad_temp_shared[306];
  __shared__ float placeholder_shared[576];
  for (int yy_init = 0; yy_init < 2; ++yy_init) {
    compute[(yy_init)] = 0.000000e+00f;
    compute[((yy_init + 4))] = 0.000000e+00f;
    compute[((yy_init + 8))] = 0.000000e+00f;
    compute[((yy_init + 12))] = 0.000000e+00f;
    compute[((yy_init + 2))] = 0.000000e+00f;
    compute[((yy_init + 6))] = 0.000000e+00f;
    compute[((yy_init + 10))] = 0.000000e+00f;
    compute[((yy_init + 14))] = 0.000000e+00f;
  }
  for (int rc_outer = 0; rc_outer < 256; ++rc_outer) {
    __syncthreads();
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 5; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      if ((((((int)threadIdx.z) * 39) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 306) {
        if (((((int)threadIdx.x) * 5) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 39) {
          pad_temp_shared[((((((int)threadIdx.z) * 39) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = (((1 <= ((((int)blockIdx.y) * 8) + (((((((int)threadIdx.z) * 39) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 153) / 17))) && (1 <= ((((((int)threadIdx.z) * 39) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 17))) ? placeholder[(((((((rc_outer * 512) + (((((((int)threadIdx.z) * 39) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 153) * 256)) + (((int)blockIdx.y) * 128)) + ((((((((int)threadIdx.z) * 39) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 153) / 17) * 16)) + ((((((int)threadIdx.z) * 39) + (((int)threadIdx.x) * 5)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 17)) - 17))] : 0.000000e+00f);
        }
      }
    }
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 9; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {
      placeholder_shared[((((((int)threadIdx.z) * 72) + (((int)threadIdx.x) * 9)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1))] = placeholder1[(((((((((int)blockIdx.z) * 147456) + (((int)threadIdx.z) * 18432)) + ((((int)threadIdx.x) >> 1) * 4608)) + (rc_outer * 18)) + ((((int)threadIdx.x) & 1) * 9)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1))];
    }
    __syncthreads();
    for (int rc_inner = 0; rc_inner < 2; ++rc_inner) {
      for (int ry_inner = 0; ry_inner < 3; ++ry_inner) {
        for (int rx_inner = 0; rx_inner < 3; ++rx_inner) {
          for (int yy = 0; yy < 2; ++yy) {
            compute[(yy)] = (compute[(yy)] + (pad_temp_shared[((((((rc_inner * 153) + (yy * 34)) + (ry_inner * 17)) + (((int)threadIdx.x) * 2)) + rx_inner))] * placeholder_shared[(((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner))]));
            compute[((yy + 4))] = (compute[((yy + 4))] + (pad_temp_shared[((((((rc_inner * 153) + (yy * 34)) + (ry_inner * 17)) + (((int)threadIdx.x) * 2)) + rx_inner))] * placeholder_shared[((((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner) + 144))]));
            compute[((yy + 8))] = (compute[((yy + 8))] + (pad_temp_shared[((((((rc_inner * 153) + (yy * 34)) + (ry_inner * 17)) + (((int)threadIdx.x) * 2)) + rx_inner))] * placeholder_shared[((((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner) + 288))]));
            compute[((yy + 12))] = (compute[((yy + 12))] + (pad_temp_shared[((((((rc_inner * 153) + (yy * 34)) + (ry_inner * 17)) + (((int)threadIdx.x) * 2)) + rx_inner))] * placeholder_shared[((((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner) + 432))]));
            compute[((yy + 2))] = (compute[((yy + 2))] + (pad_temp_shared[(((((((rc_inner * 153) + (yy * 34)) + (ry_inner * 17)) + (((int)threadIdx.x) * 2)) + rx_inner) + 68))] * placeholder_shared[(((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner))]));
            compute[((yy + 6))] = (compute[((yy + 6))] + (pad_temp_shared[(((((((rc_inner * 153) + (yy * 34)) + (ry_inner * 17)) + (((int)threadIdx.x) * 2)) + rx_inner) + 68))] * placeholder_shared[((((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner) + 144))]));
            compute[((yy + 10))] = (compute[((yy + 10))] + (pad_temp_shared[(((((((rc_inner * 153) + (yy * 34)) + (ry_inner * 17)) + (((int)threadIdx.x) * 2)) + rx_inner) + 68))] * placeholder_shared[((((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner) + 288))]));
            compute[((yy + 14))] = (compute[((yy + 14))] + (pad_temp_shared[(((((((rc_inner * 153) + (yy * 34)) + (ry_inner * 17)) + (((int)threadIdx.x) * 2)) + rx_inner) + 68))] * placeholder_shared[((((((((int)threadIdx.z) * 18) + (rc_inner * 9)) + (ry_inner * 3)) + rx_inner) + 432))]));
          }
        }
      }
    }
  }
  for (int ax2_inner_inner_inner = 0; ax2_inner_inner_inner < 2; ++ax2_inner_inner_inner) {
    T_relu[((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 32)) + (ax2_inner_inner_inner * 8)) + ((int)threadIdx.x)))] = max((compute[(ax2_inner_inner_inner)] + placeholder2[(((((int)blockIdx.z) * 32) + ((int)threadIdx.z)))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 32)) + (ax2_inner_inner_inner * 8)) + ((int)threadIdx.x)) + 512))] = max((compute[((ax2_inner_inner_inner + 4))] + placeholder2[((((((int)blockIdx.z) * 32) + ((int)threadIdx.z)) + 8))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 32)) + (ax2_inner_inner_inner * 8)) + ((int)threadIdx.x)) + 1024))] = max((compute[((ax2_inner_inner_inner + 8))] + placeholder2[((((((int)blockIdx.z) * 32) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 32)) + (ax2_inner_inner_inner * 8)) + ((int)threadIdx.x)) + 1536))] = max((compute[((ax2_inner_inner_inner + 12))] + placeholder2[((((((int)blockIdx.z) * 32) + ((int)threadIdx.z)) + 24))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 32)) + (ax2_inner_inner_inner * 8)) + ((int)threadIdx.x)) + 16))] = max((compute[((ax2_inner_inner_inner + 2))] + placeholder2[(((((int)blockIdx.z) * 32) + ((int)threadIdx.z)))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 32)) + (ax2_inner_inner_inner * 8)) + ((int)threadIdx.x)) + 528))] = max((compute[((ax2_inner_inner_inner + 6))] + placeholder2[((((((int)blockIdx.z) * 32) + ((int)threadIdx.z)) + 8))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 32)) + (ax2_inner_inner_inner * 8)) + ((int)threadIdx.x)) + 1040))] = max((compute[((ax2_inner_inner_inner + 10))] + placeholder2[((((((int)blockIdx.z) * 32) + ((int)threadIdx.z)) + 16))]), 0.000000e+00f);
    T_relu[(((((((((int)blockIdx.z) * 2048) + (((int)threadIdx.z) * 64)) + (((int)blockIdx.y) * 32)) + (ax2_inner_inner_inner * 8)) + ((int)threadIdx.x)) + 1552))] = max((compute[((ax2_inner_inner_inner + 14))] + placeholder2[((((((int)blockIdx.z) * 32) + ((int)threadIdx.z)) + 24))]), 0.000000e+00f);
  }
}

